{"version":3,"sources":["util/constants.js","components/field-name/field-name.js","util/HOCs.js","components/card/custom-card.js","components/controls/util-renderers.js","components/formik-onsubmit-validator.js","components/global-statuses/error-status/error-status.js","components/error-boundary/error-boundary.js","components/controls/select-list/select-list.js","components/controls/sort-button.js","components/enchanted-table/comp/container/resizable-container.js","components/controls/search-input.js","components/enchanted-table/util.js","components/enchanted-table/comp/add-edit-dialog/add-edit-dialog.js","components/enchanted-table/comp/enchanted-row/enchanted-row.js","components/enchanted-table/enchanted-table.js","components/formik-custom-field/formik-custom-field.module.scss","components/controls/select-list/select-list.module.scss","components/formik-select-list.js","components/formik-custom-field/formik-custom-field.js","components/card/custom-card.module.scss","components/global-statuses/error-status/error-status.module.scss","components/field-name/field-name.module.scss","components/enchanted-table/enchanted-table.module.scss","components/enchanted-table/comp/add-edit-dialog/add-edit-dialog.module.scss"],"names":["__webpack_require__","d","__webpack_exports__","ProjectTypes","ProjectStates","PWSTabs","WorkspaceStatus","ValidationErrors","ReportTypes","CommonMilestonesLabels","BlcRowNames","Messages","IndicatorsFilterLabels","PRODUCT","OFFER","OFFER_PRODUCT","OEM_PRODUCT","SUPPORT_PROGRAM","RD_PRODUCT","CLOSED","COMMITTED","CANCELLED","FORECAST","PLANNING","SUMMARY","INDICATORS","INFORMATION","ACTIONS","RISKS","COST","REPORT","REQUIREMENTS","BACKLOG","DEFECTS","BLC","ENABLED","DISABLED","string","MAX","MIN","number","typeError","integer","REQUIRED","RED_FLAG","ORANGE_FLAG","GREEN_FLAG","DETAILS","OR","DR0","DR1","DR2","DR3","TR","DR4","DR5","OBR","CI","PM","PMO","SALES","FORM_SUBMIT_ERROR","0","1","2","3","FieldName","_this$props","this","props","className","name","other","Object","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","styleClass","classNames","styles","field","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","assign","React","PureComponent","defaultProps","withPwsOnMountCall","Component","config","WithPwsOnMountCall","_React$Component","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","apply","arguments","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","C_Users_TheDiamondDoge_IdeaProjects_react_learning_pmboard_gui_bp3_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","onMount","projectId","defaults","payload","onUnmount","displayName","concat","getDisplayName","withOnMountCall","WithOnMountCall","_React$Component2","withPwsTabNameUrlChanger","WithPwsTabNameUrlChanger","_React$Component3","tabId","urlParams","URLSearchParams","window","location","search","urlBase","pathname","set","url","toString","history","pushState","others","CustomCard","children","classes","custom_card","react__WEBPACK_IMPORTED_MODULE_5___default","_error_boundary_error_boundary__WEBPACK_IMPORTED_MODULE_10__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_6__","interactive","elevation","Elevation","THREE","FormikInput","react__WEBPACK_IMPORTED_MODULE_3___default","formik__WEBPACK_IMPORTED_MODULE_1__","component","FormikCustomField","RenderControls","memo","type","args","getControlProps","MiniButton","icon","intent","Intent","DANGER","SUCCESS","PRIMARY","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_5__","style","display","textAlign","minimal","ArrayErrors","_ref","errors","error","getPropFromStringPath","color","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","connect","callback","formik","useEffect","submitCount","isSubmitting","isValid","ErrorStatus","react_default","container","components","iconSize","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","errorInfo","status_container","error_status_ErrorStatus","SelectList","label","empty","_this2","onItemSelect","onRemove","items","selectedItems","otherProps","_blueprintjs_select__WEBPACK_IMPORTED_MODULE_8__","itemListPredicate","inputVal","itemArr","filter","item","String","toLowerCase","includes","itemRenderer","handleClick","text","emptyToNone","isActive","getObjByLabel","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_7__","onClick","active","noResults","disabled","tagRenderer","tagInputProps","objToRemove","popoverProps","popoverClassName","i","length","SortButton","menu","content","position","Position","RIGHT_BOTTOM","ResizableContainer","defaultStyle","objectWithoutProperties","lib","alignItems","justifyContent","default","disableDragging","enableResizing","right","SearchInput","onChange","round","leftIcon","removeSelectedObjByLabel","obj","arr","elem","AddEditDialog","submitForm","handleSubmitWithErrors","formikProps","onSubmitErrorCallback","columns","data","validationSchema","editDynamicInputVals","onSubmit","onCancel","initValues","generateInitialValiesIfEmpty","formik_esm","values","formikActions","setSubmitting","initialValues","objectSpread","render","Fragment","table_container","col_name","field_name","col_value","map","col","columnId","id","columnName","headerName","inputType","itemsToSelectFrom","selectValues","optionalProps","getSpecificProps","selected","mapSelectedToObject","editable","util_renderers","Classes","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","formik_onsubmit_validator","keys","push","forEach","Array","isArray","val","prevFilters","isExist","index","findIndex","undefined","filtersArr","toConsumableArray","formikFieldHandleChange","selectedValues","EnchantedRow","onContextMenu","e","event","preventDefault","contextMenu","ContextMenu","show","left","clientX","top","clientY","EnchantedTable","dialogOpen","setState","editDialog","isOpen","onDialogClose","rowData","editDialogSubmit","getContextMenuParams","editRow","getRow","noDataMessage","editTableDialogTitle","filters","width","sort","striped","bordered","tableClasses","table_style","isDialogOpen","colsAmount","filteredData","sortData","renderFooterParam","getRenderFooterParams","footer","getFooter","isEditorOpen","getTdStyle","filterType","searchType","th_style","header_container","header_container_name","sort_button_SortButton","handleSortClick","header_container_search","getFilterBar","getBodyRows","colSpan","onClose","title","dialog","DIALOG_BODY","add_edit_dialog_AddEditDialog","amount","renderFooter","hasOwnProperty","_this3","row","rowKey","getContextMenu","enchanted_row_EnchantedRow","colId","decorator","renderValue","filterValues","placeholder","handleInputFilters","select_list","fill","handleSelectFilters","onFilterRemove","self","target","prev","defineProperty","newArr","_this4","result","includesAtLeastOne","str","count","valueOf","_this$state$sort","first","second","contextMenuParams","module","exports","no_margin","FormikSelectList","fieldFactory","date","transformDateForInput","_this$state$dateRange","dateRange","min","max","dateInput","formatDate","dateFormatToString","parseDate","stringToDateFormat","maxDate","minDate","allowNumericCharactersOnly","buttonPosition","defaultChecked","inline","restField","lib_default","Date","_this$props$form","form","touched","touchedValue","errorsValue"],"mappings":"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","file":"static/js/1.c7c137b4.chunk.js","sourcesContent":["export const ProjectTypes = {\r\n    PRODUCT: \"Product\",\r\n    OFFER : \"Offer\",\r\n    OFFER_PRODUCT : \"Offer & Product\",\r\n    OEM_PRODUCT : \"OEM Product\",\r\n    SUPPORT_PROGRAM : \"Support Program\",\r\n    RD_PRODUCT: \"R&D Product\"\r\n};\r\n\r\nexport const ProjectStates = {\r\n    CLOSED: \"CLOSED\",\r\n    COMMITTED: \"COMMITTED\",\r\n    CANCELLED: \"CANCELLED\",\r\n    FORECAST: \"FORECAST\",\r\n    PLANNING: \"PLANNING\"\r\n};\r\n\r\nexport const PWSTabs = {\r\n    SUMMARY: \"summary\",\r\n    INDICATORS: \"indicators\",\r\n    INFORMATION: \"information\",\r\n    ACTIONS: \"actions\",\r\n    RISKS: \"risks\",\r\n    COST: \"cost\",\r\n    REPORT: \"report\",\r\n    REQUIREMENTS: \"requirements\",\r\n    BACKLOG: \"backlog\",\r\n    DEFECTS: \"defects\",\r\n    BLC: \"blc\"\r\n};\r\n\r\nexport const WorkspaceStatus = {\r\n    ENABLED: \"ENABLED\",\r\n    DISABLED: \"DISABLED\"\r\n};\r\n\r\nexport const ValidationErrors = {\r\n    string: {\r\n        MAX: \"String is too long\",\r\n        MIN: \"String is too short\",\r\n    },\r\n    number: {\r\n        MAX: \"Number is too big\",\r\n        MIN: \"Number is too small\"\r\n    },\r\n    typeError: {\r\n        number: \"Must be a number\",\r\n        integer: \"Must be an integer\"\r\n    },\r\n    REQUIRED: \"Value required\"\r\n};\r\n\r\nexport const ReportTypes = {\r\n    SUMMARY: \"summary\",\r\n    RED_FLAG: \"red\",\r\n    ORANGE_FLAG: \"orange\",\r\n    GREEN_FLAG: \"green\",\r\n    DETAILS: \"details\",\r\n};\r\n\r\nexport const CommonMilestonesLabels = {\r\n    OR: \"OR\",\r\n    DR0: \"DR0\",\r\n    DR1: \"DR1\",\r\n    DR2: \"DR2\",\r\n    DR3: \"DR3\",\r\n    TR: \"TR\",\r\n    DR4: \"DR4\",\r\n    DR5: \"DR5\",\r\n    OBR: \"OBR\",\r\n    CI: \"CI\"\r\n};\r\n\r\nexport const BlcRowNames = {\r\n    PM: \"pm\",\r\n    PMO: \"pmo\",\r\n    SALES: \"sales\"\r\n};\r\n\r\nexport const Messages = {\r\n    FORM_SUBMIT_ERROR: \"You have errors in your form. Please fix them before save.\"\r\n};\r\n\r\nexport const IndicatorsFilterLabels = {\r\n    0 : \"Blank\",\r\n    1 : \"Green\",\r\n    2 : \"Yellow\",\r\n    3 : \"Red\"\r\n};","import React from 'react';\r\nimport styles from \"./field-name.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class FieldName extends React.PureComponent {\r\n    render() {\r\n        const {className, name, ...other} = this.props;\r\n        const styleClass = classNames(className, styles.field);\r\n        return (\r\n            <span\r\n                className={styleClass}\r\n                {...other}\r\n            >\r\n                {name}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nFieldName.propTypes = {\r\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nFieldName.defaultProps = {\r\n    className: ''\r\n}","import React from 'react';\r\n\r\nexport function withPwsOnMountCall(Component, config) {\r\n    const WithPwsOnMountCall = class extends React.Component {\r\n        componentDidMount() {\r\n            if (config.onMount) {\r\n                const {projectId} = this.props.defaults.payload;\r\n                this.props[config.onMount](projectId);\r\n            }\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            if (config.onUnmount) {\r\n                this.props[config.onUnmount]();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props}/>\r\n        }\r\n    };\r\n\r\n    WithPwsOnMountCall.displayName = `WithPwsOnMountCall(${getDisplayName(Component)})`;\r\n    return WithPwsOnMountCall;\r\n}\r\n\r\nexport function withOnMountCall(Component, config) {\r\n    const WithOnMountCall = class extends React.Component {\r\n        componentDidMount() {\r\n            if (config.onMount) {\r\n                this.props[config.onMount]();\r\n            }\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            if (config.onUnmount) {\r\n                this.props[config.onUnmount]();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props}/>\r\n        }\r\n    };\r\n\r\n    WithOnMountCall.displayName = `WithOnMountCall(${getDisplayName(Component)})`;\r\n    return WithOnMountCall;\r\n}\r\n\r\n\r\nexport function withPwsTabNameUrlChanger(Component) {\r\n    const WithPwsTabNameUrlChanger = class extends React.Component {\r\n        componentDidMount() {\r\n            const tabId = this.props.tabId;\r\n            if (tabId) {\r\n                const urlParams = new URLSearchParams(window.location.search);\r\n                const urlBase = window.location.pathname;\r\n                urlParams.set(\"tab\", tabId);\r\n\r\n                const url = `${urlBase}?${urlParams.toString()}`;\r\n                window.history.pushState(\"Tabs\", `${tabId} tab`, url);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {tabId, ...others} = this.props;\r\n            return <Component {...others}/>;\r\n        }\r\n    };\r\n\r\n    WithPwsTabNameUrlChanger.displayName = `WithPwsTabNameUrlChanger(${getDisplayName(Component)})`;\r\n    return WithPwsTabNameUrlChanger;\r\n}\r\n\r\nfunction getDisplayName(Component) {\r\n    return Component.displayName || Component.name || 'Component';\r\n}\r\n","import React from 'react';\r\nimport {Card, Elevation} from \"@blueprintjs/core\";\r\nimport styles from './custom-card.module.scss';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from \"../error-boundary/error-boundary\";\r\n\r\nexport default class CustomCard extends React.PureComponent {\r\n    render() {\r\n        const {className, children} = this.props;\r\n        let classes = classNames(className, styles.custom_card);\r\n        return (\r\n            <ErrorBoundary>\r\n                <Card\r\n                    interactive={false}\r\n                    elevation={Elevation.THREE}\r\n                    className={classes}\r\n                >\r\n                    {children}\r\n                </Card>\r\n            </ErrorBoundary>\r\n        )\r\n    }\r\n};\r\n\r\nCustomCard.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.any,\r\n};\r\n\r\nCustomCard.defaultProps = {\r\n    className: '',\r\n    children: null,\r\n};","import {Field} from \"formik\";\r\nimport FormikCustomField from \"../formik-custom-field/formik-custom-field\";\r\nimport React from \"react\";\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\nimport {getPropFromStringPath} from \"../../util/util\";\r\n\r\nexport default function FormikInput(props) {\r\n    return <Field {...props} component={FormikCustomField}/>;\r\n};\r\n\r\nexport const RenderControls = React.memo((props) => {\r\n    const {type, ...others} = props;\r\n    const args = getControlProps(type);\r\n    return (\r\n        <MiniButton\r\n            {...others}\r\n            {...args}\r\n        />\r\n    )\r\n});\r\n\r\nconst getControlProps = (type) => {\r\n    switch (type) {\r\n        case \"delete\":\r\n            return ({\r\n                icon: \"delete\",\r\n                intent: Intent.DANGER\r\n            });\r\n        case \"add\":\r\n            return ({\r\n                icon: \"add\",\r\n                intent: Intent.SUCCESS\r\n            });\r\n        default:\r\n            return ({\r\n                icon: \"circle\",\r\n                intent: Intent.PRIMARY\r\n            })\r\n    }\r\n};\r\n\r\nconst MiniButton = React.memo((props) => (\r\n    <Button\r\n        style={{display: \"inline-block\", textAlign: \"center\"}}\r\n        minimal\r\n        {...props}\r\n    />\r\n));\r\n\r\nexport const ArrayErrors = ({errors, name}) => {\r\n    const error = getPropFromStringPath(errors, name);\r\n    return (\r\n        typeof error === 'string'\r\n            ? <div style={{color: \"red\"}}>{error}</div>\r\n            : null\r\n    );\r\n}","import React from 'react';\r\nimport { connect } from 'formik';\r\n\r\nfunction OnSubmitValidationError(props) {\r\n    const { callback, formik } = props;\r\n\r\n    const effect = () => {\r\n        if (formik.submitCount > 0 && !formik.isSubmitting && !formik.isValid) {\r\n            callback(formik);\r\n        }\r\n    };\r\n    React.useEffect(effect, [formik.submitCount, formik.isSubmitting]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default connect(OnSubmitValidationError);","import React from 'react';\r\nimport {Icon, Intent} from '@blueprintjs/core';\r\nimport styles from './error-status.module.scss';\r\n\r\nexport default class ErrorStatus extends React.PureComponent {\r\n    render() {\r\n        const iconSize = 50;\r\n        return (\r\n            <div className={styles.container}>\r\n                <Icon\r\n                    icon={\"error\"}\r\n                    iconSize={iconSize}\r\n                    intent={Intent.PRIMARY}\r\n                    className={styles.icon}\r\n                />\r\n                Something went wrong. Please try again.\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ErrorStatus from \"../global-statuses/error-status/error-status\";\r\nimport StatusContainer from \"../status-container/status-container\";\r\n\r\nexport default class ErrorBoundary extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError() {\r\n        return {hasError: true};\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        //TODO: logger\r\n        // console.log(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        const {children} = this.props;\r\n        const {hasError} = this.state;\r\n        if (hasError)\r\n            return (\r\n                <StatusContainer>\r\n                    <ErrorStatus/>\r\n                </StatusContainer>\r\n            );\r\n\r\n        return children;\r\n    }\r\n}","import React from 'react';\r\nimport {MenuItem} from \"@blueprintjs/core\";\r\nimport {MultiSelect} from \"@blueprintjs/select\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./select-list.module.scss\";\r\n\r\n//TODO: Idea => If more than 2-3 elems selected - change them on \"# selected\". Add x button to each elem in list\r\nexport default class SelectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            label: {\r\n                empty: \"(none)\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {onItemSelect, onRemove, ...other} = this.props;\r\n        let {items, selectedItems, ...otherProps} = other;\r\n        items = items ? items : [];\r\n        selectedItems = selectedItems ? selectedItems : [];\r\n\r\n        return (\r\n            <MultiSelect\r\n                {...otherProps}\r\n                items={items}\r\n                itemListPredicate={(inputVal, itemArr) => {\r\n                    return itemArr.filter(item => String(item.label).toLowerCase().includes(inputVal.toLowerCase()))\r\n                }}\r\n                itemRenderer={(item, {handleClick}) => {\r\n                    const key = item.value;\r\n                    const text = this.emptyToNone(item.label);\r\n                    const isActive = this.getObjByLabel(item.label) || false;\r\n                    return (\r\n                        <MenuItem\r\n                            key={key}\r\n                            text={text}\r\n                            onClick={handleClick}\r\n                            active={isActive}\r\n                        />\r\n                    )\r\n                }\r\n                }\r\n                selectedItems={selectedItems}\r\n                onItemSelect={onItemSelect}\r\n                noResults={<MenuItem disabled text=\"No results.\" />}\r\n                tagRenderer={item => this.emptyToNone(item.label)}\r\n                tagInputProps={{\r\n                    onRemove: (label) => {\r\n                        const objToRemove = this.getObjByLabel(label);\r\n                        return onRemove(objToRemove);\r\n                    }\r\n                }}\r\n                popoverProps={{\r\n                    popoverClassName: styles.container\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    getObjByLabel(label) {\r\n        const {empty} = this.state.label;\r\n        label = label === empty ? \"\" : label;\r\n        const selectedItems = this.props.selectedItems || [];\r\n        for (let i = 0; i < selectedItems.length; i++) {\r\n            if (String(selectedItems[i].label) === String(label)) {\r\n                return selectedItems[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    emptyToNone(label) {\r\n        const {empty} = this.state.label;\r\n        if (label) {\r\n            return label\r\n        } else if (label === 0) {\r\n            return String(label)\r\n        } else {\r\n            return empty;\r\n        }\r\n    }\r\n}\r\n\r\n// PropTypes.any in order to handle nulls\r\nSelectList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.any\r\n        ]),\r\n        label: PropTypes.oneOfType([\r\n            PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.any\r\n        ])\r\n    })),\r\n    selectedItems: PropTypes.arrayOf(PropTypes.any),\r\n    onItemSelect: PropTypes.func,\r\n    onRemove: PropTypes.func\r\n};\r\n\r\nSelectList.defaultProps = {\r\n    items: [],\r\n    selectedItems: [],\r\n    onItemSelect: () => {},\r\n    onRemove: () => {}\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Menu, MenuItem, Popover, Position} from \"@blueprintjs/core\";\r\n\r\n//TODO onClick(\"asc\")?? refactor this: onClickAsc, onClickDesc\r\nexport default class SortButton extends React.PureComponent {\r\n    render() {\r\n        const {onClick} = this.props;\r\n        const textAsc = \"Sort by Asc\";\r\n        const textDesc = \"Sort by Desc\";\r\n        const menu = (\r\n            <Menu>\r\n                <MenuItem\r\n                    text={textAsc}\r\n                    icon={\"sort-asc\"}\r\n                    onClick={() => onClick(\"asc\")}\r\n                />\r\n                <MenuItem\r\n                    text={textDesc}\r\n                    icon={\"sort-desc\"}\r\n                    onClick={() => onClick(\"desc\")}\r\n                />\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <Popover\r\n                content={menu}\r\n                position={Position.RIGHT_BOTTOM}\r\n            >\r\n                <Button\r\n                    icon={\"sort\"}\r\n                    minimal\r\n                />\r\n            </Popover>\r\n        )\r\n    }\r\n}\r\n\r\nSortButton.propTypes = {\r\n    onClick: PropTypes.func\r\n};","import React from 'react';\r\nimport {Rnd} from \"react-rnd\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./resizable-container.module.scss\";\r\n\r\n\r\nexport const ResizableContainer = React.memo((props) => {\r\n    const {defaultStyle, children, ...others} = props;\r\n    return (\r\n        <Rnd\r\n            style={{\r\n                position: \"relative\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n            }}\r\n            default={defaultStyle}\r\n            disableDragging\r\n            enableResizing={{right: true}}\r\n            {...others}\r\n        >\r\n            {children}\r\n        </Rnd>\r\n    )\r\n});\r\n\r\nResizableContainer.propTypes = {\r\n    defaultStyle: PropTypes.object,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {InputGroup} from \"@blueprintjs/core\";\r\n\r\nexport const SearchInput = React.memo((props) => {\r\n    const {onChange, ...otherProps} = props;\r\n    return (\r\n        <InputGroup\r\n            round\r\n            leftIcon={\"search-text\"}\r\n            onChange={onChange}\r\n            {...otherProps}\r\n        />\r\n    )\r\n});\r\n\r\nSearchInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    onChange: () => {}\r\n};","export function getObjByLabel(label, selectedItems) {\r\n    const empty = \"(none)\";\r\n    label = label === empty ? \"\" : label;\r\n    selectedItems = selectedItems || [];\r\n    const index = selectedItems.findIndex((obj) => obj.label === label);\r\n    return ~index ? selectedItems[index] : undefined;\r\n}\r\n\r\nexport function removeSelectedObjByLabel(obj, arr) {\r\n    return  arr.filter(elem => String(obj.label) !== String(elem.label));\r\n}\r\n\r\nexport function renderValue(value, decorator, row) {\r\n    return decorator ? decorator(value, row) : value;\r\n}","import React from \"react\";\r\nimport {HTMLTable, Button, Classes, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {EnchantedTableColsConfig} from \"../../../../util/custom-types\";\r\nimport {Formik} from \"formik\";\r\nimport FormikInput from \"../../../controls/util-renderers\";\r\nimport FieldName from \"../../../field-name/field-name\";\r\nimport styles from \"./add-edit-dialog.module.scss\";\r\nimport {formikFieldHandleChange, getPropFromStringPath} from \"../../../../util/util\";\r\nimport {getObjByLabel, removeSelectedObjByLabel} from \"../../util\";\r\nimport OnSubmitValidationError from \"../../../formik-onsubmit-validator\";\r\n\r\nexport default class AddEditDialog extends React.Component {\r\n    submitForm = null;\r\n\r\n    render() {\r\n        const {columns, data, validationSchema, editDynamicInputVals, onSubmit, onCancel} = this.props;\r\n        const initValues = this.generateInitialValiesIfEmpty(data);\r\n        return (\r\n            <Formik\r\n                onSubmit={\r\n                    (values, formikActions) => {\r\n                        formikActions.setSubmitting(false);\r\n                        onSubmit(values);\r\n                    }\r\n                }\r\n                // initialValues={data}\r\n                initialValues={{...initValues}}\r\n                validationSchema={validationSchema}\r\n                render={\r\n                    (formikProps) => {\r\n                        this.submitForm = formikProps.submitForm;\r\n                        return (\r\n                            <>\r\n                                <div className={styles.table_container}>\r\n                                    <HTMLTable>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <td className={styles.col_name}>\r\n                                                <FieldName name={\"Column name\"}/>\r\n                                            </td>\r\n                                            <td className={styles.col_value}>\r\n                                                <FieldName name={\"Value\"}/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {columns.map((col) => {\r\n                                            const columnId = col.id;\r\n                                            const columnName = col.headerName;\r\n                                            const inputType = col.inputType;\r\n                                            const itemsToSelectFrom = col.selectValues\r\n                                                || getPropFromStringPath(editDynamicInputVals, columnId);\r\n                                            let optionalProps = this.getSpecificProps(inputType, {\r\n                                                formikProps,\r\n                                                columnId,\r\n                                                items: itemsToSelectFrom,\r\n                                                selected: this.mapSelectedToObject(formikProps.values[columnId]),\r\n                                            });\r\n                                            return (\r\n                                                col.editable && (\r\n                                                    <tr key={columnId}>\r\n                                                        <td className={styles.col_name}>\r\n                                                            <FieldName name={columnName}/>\r\n                                                        </td>\r\n                                                        <td className={styles.col_value}>\r\n                                                            <FormikInput\r\n                                                                type={inputType}\r\n                                                                name={columnId}\r\n                                                                {...optionalProps}\r\n                                                            />\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            )\r\n                                        })}\r\n                                        </tbody>\r\n                                    </HTMLTable>\r\n                                </div>\r\n                                <div className={Classes.DIALOG_FOOTER}>\r\n                                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                                        <Button\r\n                                            text=\"Save\"\r\n                                            onClick={this.submitForm}\r\n                                        />\r\n                                        <Button\r\n                                            text=\"Cancel\"\r\n                                            intent={Intent.DANGER}\r\n                                            onClick={onCancel}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n                            </>\r\n                        );\r\n                    }\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n    generateInitialValiesIfEmpty(data) {\r\n        if (Object.keys(data).length !== 0) return data;\r\n\r\n        const columns = this.props.columns;\r\n        let initValues = {};\r\n        let keys = [];\r\n        for (let i = 0; i < columns.length; i++) {\r\n            keys.push(columns[i].id);\r\n        }\r\n\r\n        if (keys.length !== 0) {\r\n            keys.forEach(col => {\r\n                initValues[col] = \"\";\r\n            });\r\n        }\r\n\r\n        return initValues;\r\n    }\r\n\r\n    mapSelectedToObject(selected) {\r\n        return Array.isArray(selected)\r\n            ? selected.map(item => ({value: item, label: item}))\r\n            : selected;\r\n    }\r\n\r\n    onItemSelect(id, formikProps) {\r\n        return function (val) {\r\n            let prevFilters = formikProps.values[id] ? formikProps.values[id] : [];\r\n            const isExist = getObjByLabel(val.label, prevFilters) || false;\r\n            if (val && !isExist) {\r\n                const filtersArr = [...prevFilters, val.label];\r\n                formikFieldHandleChange(formikProps)(id)(filtersArr);\r\n            }\r\n        }\r\n    };\r\n\r\n    onRemove(id, selectedValues, formikProps) {\r\n        return function (obj) {\r\n            let newArr = removeSelectedObjByLabel(obj, selectedValues);\r\n            const values = newArr.map((elem) => elem.value);\r\n            formikFieldHandleChange(formikProps)(id)(values);\r\n        }\r\n    }\r\n\r\n    getSpecificProps(type, {formikProps, columnId, selected, items}) {\r\n        let optionalProps = {};\r\n        switch (type) {\r\n            case \"date\":\r\n                optionalProps.onChange = formikFieldHandleChange(formikProps)(columnId);\r\n                break;\r\n            case \"select\":\r\n                optionalProps.values = items ? items : [];\r\n                break;\r\n            case \"multiselect\":\r\n                optionalProps.items = items;\r\n                optionalProps.selectedItems = this.mapSelectedToObject(formikProps.values[columnId]) || [];\r\n                optionalProps.onItemSelect = this.onItemSelect(columnId, formikProps);\r\n                optionalProps.onRemove = this.onRemove(columnId, selected, formikProps);\r\n                break;\r\n            case \"checkbox\":\r\n                optionalProps.value = formikProps.values[columnId];\r\n                break;\r\n            default:\r\n                return optionalProps;\r\n        }\r\n\r\n        return optionalProps;\r\n    }\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid) {\r\n            this.props.onSubmitErrorCallback();\r\n        }\r\n    }\r\n}\r\n\r\nAddEditDialog.propTypes = {\r\n    columns: PropTypes.arrayOf(EnchantedTableColsConfig).isRequired,\r\n    data: PropTypes.object,\r\n    validationSchema: PropTypes.object,\r\n    editDynamicInputVals: PropTypes.object,\r\n    onSubmit: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    onSubmitErrorCallback: PropTypes.func,\r\n};\r\n\r\nAddEditDialog.defaultProps = {\r\n    data: {},\r\n    validationSchema: {},\r\n    editDynamicInputVals: {},\r\n    onSubmit: () => {},\r\n    onCancel: () => {},\r\n    onSubmitErrorCallback: () => {},\r\n};","import React from 'react';\r\nimport {ContextMenu} from \"@blueprintjs/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class EnchantedRow extends React.Component {\r\n    render() {\r\n        const {children, ...others} = this.props;\r\n        return (\r\n            <tr\r\n                onContextMenu={(e) => this.onContextMenu(e)}\r\n                {...others}\r\n            >\r\n                {children}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    onContextMenu(event) {\r\n        event.preventDefault();\r\n        const {contextMenu} = this.props;\r\n\r\n        ContextMenu.show(contextMenu, {left: event.clientX, top: event.clientY})\r\n    }\r\n}\r\n\r\nEnchantedRow.propTypes = {\r\n    contextMenu: PropTypes.object\r\n};\r\n","import React from \"react\";\r\nimport {HTMLTable, Dialog, Classes} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SortButton from \"../controls/sort-button\";\r\nimport {EnchantedTableColsConfig} from \"../../util/custom-types\";\r\nimport styles from \"./enchanted-table.module.scss\";\r\nimport classNames from 'classnames';\r\nimport {ResizableContainer} from \"./comp/container/resizable-container\";\r\nimport SelectList from \"../controls/select-list/select-list\";\r\nimport {SearchInput} from \"../controls/search-input\";\r\nimport AddEditDialog from \"./comp/add-edit-dialog/add-edit-dialog\";\r\nimport {removeSelectedObjByLabel, renderValue} from \"./util\";\r\nimport EnchantedRow from \"./comp/enchanted-row/enchanted-row\";\r\nimport FieldName from \"../field-name/field-name\";\r\n\r\n//TODO: need to limit width of tds\r\n//TODO: need small delay on typing in search field?\r\nexport default class EnchantedTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaults: {\r\n                noDataMessage: \"No data found\",\r\n                editTableDialogTitle: \"Edit table row\"\r\n            },\r\n            filters: {},\r\n            width: {},\r\n            sort: {},\r\n            editDialog: {\r\n                isOpen: false,\r\n            },\r\n            rowData: {}\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            data, columns, className, editable, validationSchema, editDynamicInputVals, striped, interactive, bordered,\r\n            onSubmitErrorCallback\r\n        } = this.props;\r\n\r\n        const tableClasses = classNames(className, styles.table_style);\r\n        const isDialogOpen = this.state.editDialog.isOpen;\r\n        const colsAmount = columns.length;\r\n        let filteredData = this.filter(data);\r\n        filteredData = this.sortData(filteredData);\r\n\r\n        const renderFooterParam = this.getRenderFooterParams(filteredData);\r\n        const footer = this.getFooter(renderFooterParam);\r\n        const noDataMessage = this.props.noDataMessage || this.state.defaults.noDataMessage;\r\n        const editTableDialogTitle = this.state.defaults.editTableDialogTitle;\r\n        const isEditorOpen = isDialogOpen && editable;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.table_container}>\r\n                    <HTMLTable\r\n                        striped={striped}\r\n                        interactive={interactive}\r\n                        bordered={bordered}\r\n                        className={tableClasses}\r\n                    >\r\n                        <thead>\r\n                        <tr>\r\n                            {columns.map((field) => {\r\n                                const style = this.getTdStyle(field, \"header\");\r\n                                const defaultStyle = {width: style.width || \"\"};\r\n                                const id = field.id;\r\n                                const filterType = field.searchType ? field.searchType : \"\";\r\n                                const headerName = classNames(`${id}_header`, styles.th_style);\r\n                                return (\r\n                                    <th\r\n                                        key={headerName}\r\n                                        className={headerName}\r\n                                        style={style}\r\n                                    >\r\n                                        <div className={styles.header_container}>\r\n                                            <div className={styles.header_container_name}>\r\n                                                <ResizableContainer defaultStyle={defaultStyle}>\r\n                                                    {\r\n                                                        field.headerName\r\n                                                    }\r\n                                                    <SortButton onClick={this.handleSortClick(field.id)}/>\r\n                                                </ResizableContainer>\r\n                                            </div>\r\n                                            <div className={styles.header_container_search}>\r\n                                                {this.getFilterBar(filterType, id)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {\r\n                            filteredData.length > 0\r\n                                ? this.getBodyRows(filteredData)\r\n                                : <tr>\r\n                                    <td colSpan={colsAmount}><FieldName name={noDataMessage}/></td>\r\n                                </tr>\r\n                        }\r\n                        </tbody>\r\n                    </HTMLTable>\r\n                </div>\r\n                <div className={styles.footer}>\r\n                    {footer}\r\n                </div>\r\n\r\n                <Dialog\r\n                    isOpen={isEditorOpen}\r\n                    onClose={this.onDialogClose}\r\n                    title={editTableDialogTitle}\r\n                    className={styles.dialog}\r\n                >\r\n                    <div className={Classes.DIALOG_BODY}>\r\n                        <AddEditDialog\r\n                            data={this.state.rowData}\r\n                            columns={columns}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={this.editDialogSubmit}\r\n                            onCancel={this.onDialogClose}\r\n                            editDynamicInputVals={editDynamicInputVals}\r\n                            onSubmitErrorCallback={onSubmitErrorCallback}\r\n                        />\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getRenderFooterParams(data) {\r\n        return {\r\n            dialogOpen: this.dialogOpen,\r\n            amount: data.length\r\n        }\r\n    }\r\n\r\n    getFooter(renderFooterParam) {\r\n        const {renderFooter} = this.props;\r\n        return renderFooter ? renderFooter(renderFooterParam) : null;\r\n    }\r\n\r\n    getTdStyle(obj, type) {\r\n        if (obj.hasOwnProperty(\"style\")) {\r\n            if (obj.style.hasOwnProperty(type)) {\r\n                return obj.style[type];\r\n            } else {\r\n                return {};\r\n            }\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    getBodyRows(filteredData) {\r\n        const {columns} = this.props;\r\n        return (filteredData.map((row, i) => {\r\n            const rowKey = `row_${i}`;\r\n            const menu = this.getContextMenu(filteredData[i]);\r\n            return (\r\n                <EnchantedRow\r\n                    key={rowKey}\r\n                    contextMenu={menu}\r\n                >\r\n                    {columns.map((col) => {\r\n                        const styles = this.getTdStyle(col, \"column\");\r\n                        const colId = col.id || \"\";\r\n                        const decorator = col.decorator;\r\n                        return (\r\n                            <td key={colId} style={styles}>\r\n                                {renderValue(row[colId], decorator, row)}\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </EnchantedRow>\r\n            )\r\n        }))\r\n    }\r\n\r\n    getFilterBar(type, id) {\r\n        const {filterValues} = this.props;\r\n        const {filters} = this.state;\r\n        if (type.toLowerCase() === \"input\") {\r\n            return (\r\n                <SearchInput\r\n                    placeholder={\"Search...\"}\r\n                    onChange={this.handleInputFilters(id, \"input\")}\r\n                />\r\n            )\r\n        } else if (type.toLowerCase() === \"multiselect\") {\r\n            const items = filterValues[id];\r\n            const selected = filters[id];\r\n            return (\r\n                <SelectList\r\n                    fill\r\n                    items={items}\r\n                    onItemSelect={this.handleSelectFilters(id, \"select\")}\r\n                    selectedItems={selected}\r\n                    onRemove={this.onFilterRemove(id)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    handleInputFilters(id) {\r\n        const self = this;\r\n        return function (e) {\r\n            const val = e.target.value;\r\n            self.setState((prev) => ({\r\n                filters: {...prev.filters, [id]: val}\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleSelectFilters(id) {\r\n        const self = this;\r\n        return function (val) {\r\n            self.setState((prev) => {\r\n                let prevFilters = prev.filters[id] ? prev.filters[id] : [];\r\n                if (val && !prevFilters.includes(val)) {\r\n                    const filtersArr = [...prevFilters, val];\r\n                    return {\r\n                        filters: {...prev.filters, [id]: filtersArr}\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onFilterRemove(id) {\r\n        const self = this;\r\n        return function (obj) {\r\n            let filtersArr = self.state.filters[id];\r\n            let newArr = removeSelectedObjByLabel(obj, filtersArr);\r\n            self.setState((prev) => ({\r\n                filters: {...prev.filters, [id]: newArr}\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleSortClick(id) {\r\n        const self = this;\r\n        return function (value) {\r\n            self.setState({\r\n                sort: {\r\n                    type: value,\r\n                    id,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filter(data) {\r\n        const {filters} = this.state;\r\n        const keys = Object.keys(filters);\r\n\r\n        if (keys.length === 0) return data;\r\n\r\n        let result = data;\r\n        keys.forEach((id) => {\r\n            let filter = filters[id];\r\n            if (Array.isArray(filter)) {\r\n                if (filter.length === 0) return result;\r\n\r\n                let filterValues = filter.map(obj => obj.value);\r\n                result = result.filter((row) => {\r\n                    return this.includesAtLeastOne(String(row[id]), filterValues);\r\n                });\r\n            } else {\r\n                result = result.filter((row) => (\r\n                    String(row[id]).toLowerCase().includes(String(filters[id]).toLowerCase())\r\n                ));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    includesAtLeastOne(str, values) {\r\n        let count = 0;\r\n        values.forEach((value) => {\r\n            if (String(value).valueOf() === str.valueOf()) {\r\n                count++;\r\n            }\r\n        });\r\n        return (count > 0);\r\n    }\r\n\r\n    sortData(data) {\r\n        const {id, type} = this.state.sort;\r\n        if (id && type) {\r\n            if (type === \"asc\") {\r\n                return data.sort((first, second) => (first[id] >= second[id]));\r\n            } else if (type === \"desc\") {\r\n                return data.sort((first, second) => (first[id] <= second[id]));\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    dialogOpen = () => {\r\n        this.setState({\r\n            editDialog: {\r\n                isOpen: true\r\n            }\r\n        })\r\n    };\r\n\r\n    onDialogClose = () => {\r\n        this.setState({\r\n            editDialog: {\r\n                isOpen: false\r\n            },\r\n            rowData: {}\r\n        })\r\n    };\r\n\r\n    editDialogSubmit = (data) => {\r\n        this.props.onSubmit(data);\r\n        this.onDialogClose();\r\n    };\r\n\r\n    getContextMenu(rowData) {\r\n        const {contextMenu} = this.props;\r\n        const contextMenuParams = this.getContextMenuParams(rowData)\r\n        return contextMenu ? contextMenu(contextMenuParams) : null;\r\n    }\r\n\r\n    getContextMenuParams = (rowData) => (\r\n        {\r\n            editRow: () => {\r\n                this.dialogOpen();\r\n                this.setState({\r\n                    rowData\r\n                })\r\n            },\r\n            getRow: () => (rowData)\r\n        }\r\n    )\r\n}\r\n\r\nEnchantedTable.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(EnchantedTableColsConfig).isRequired,\r\n    filterValues: PropTypes.object,\r\n    editable: PropTypes.bool,\r\n    //TODO rename???\r\n    validationSchema: PropTypes.object,\r\n    onSubmit: PropTypes.func,\r\n    noDataMessage: PropTypes.string,\r\n    //Render prop: {dialogOpen: func, amount: int}\r\n    renderFooter: PropTypes.func,\r\n    //Render props: {editRow: func, getRow: func}\r\n    contextMenu: PropTypes.func,\r\n    editDynamicInputVals: PropTypes.object,\r\n    onSubmitErrorCallback: PropTypes.func,\r\n};\r\n\r\nEnchantedTable.defaultProps = {\r\n    filterValues: {},\r\n    editable: false,\r\n    validationSchema: {},\r\n    onSubmit: () => {\r\n    },\r\n    noDataMessage: '',\r\n    renderFooter: () => {\r\n    },\r\n    contextMenu: () => {\r\n    },\r\n    editDynamicInputVals: {},\r\n    onSubmitErrorCallback: () => {\r\n    },\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formik-custom-field_error__1BGLP\",\"no_margin\":\"formik-custom-field_no_margin__YIKIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"select-list_container__-ZvXi\"};","import React from 'react';\r\nimport SelectList from \"./controls/select-list/select-list\";\r\n\r\n//TODO: add <div> for errors\r\n//TODO: Is this actually needed?\r\nexport default function FormikSelectList (props) {\r\n    return <SelectList {...props}/>\r\n}\r\n\r\nFormikSelectList.propTypes = {\r\n};","import React from 'react';\r\nimport {TextArea, InputGroup, Checkbox, NumericInput} from \"@blueprintjs/core\";\r\nimport {DateInput} from \"@blueprintjs/datetime\";\r\nimport {dateFormatToString, stringToDateFormat, transformDateForInput} from \"../../util/transform-funcs\";\r\nimport {getPropFromStringPath} from \"../../util/util\";\r\nimport styles from \"./formik-custom-field.module.scss\";\r\nimport {Field} from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormikSelectList from \"../formik-select-list\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\nexport default class FormikCustomField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateRange: {\r\n                min: new Date(\"1900-01-01\"),\r\n                max: new Date(\"2040-01-01\")\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!(this.props === undefined)) {\r\n            const {field, form: {touched, errors}, type, values, ...props} = this.props;\r\n            const touchedValue = getPropFromStringPath(touched, field.name);\r\n            const errorsValue = getPropFromStringPath(errors, field.name);\r\n\r\n            return (\r\n                <div>\r\n                    {this.fieldFactory(type, field, props, values)}\r\n                    {touchedValue && errorsValue &&\r\n                    <div className={styles.error}>{errorsValue}</div>\r\n                    }\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.fieldFactory(\"text\", null, null)}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    fieldFactory = (type, field, props, values = []) => {\r\n        type = type || \"\";\r\n        switch (type.toLowerCase()) {\r\n            case \"textarea\":\r\n                return (<TextArea fill {...field} {...props} />);\r\n            case \"date\":\r\n                const date = transformDateForInput(field.value);\r\n                const {min, max} = this.state.dateRange;\r\n                return (\r\n                    <DateInput formatDate={date => dateFormatToString(date)}\r\n                               parseDate={str => stringToDateFormat(str.toString())}\r\n                               maxDate={max}\r\n                               minDate={min}\r\n                               {...field} {...props}\r\n                               value={date}\r\n                    />\r\n                );\r\n            case \"numeric\":\r\n                return (\r\n                    //onValueChange handler should be passed instead of onChange\r\n                    <NumericInput allowNumericCharactersOnly\r\n                                  fill\r\n                                  buttonPosition=\"none\"\r\n                                  {...field} {...props}\r\n\r\n                    />\r\n                );\r\n            case \"checkbox\":\r\n                return (\r\n                    <Checkbox\r\n                        className={styles.no_margin}\r\n                        defaultChecked={field.value}\r\n                        inline\r\n                        {...field} {...props}\r\n                    />\r\n                );\r\n            case \"select\":\r\n                return (\r\n                    <Field component=\"select\" {...field} {...props}>\r\n                        {values.map((obj) => {\r\n                            const {label, value} = obj;\r\n                            return (\r\n                                <option\r\n                                    key={label}\r\n                                    value={value}\r\n                                >\r\n                                    {label}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </Field>\r\n                );\r\n            case \"multiselect\":\r\n                return (\r\n                    <FormikSelectList {...props} {...field}/>\r\n                );\r\n            case \"quill\":\r\n                const {value, onChange, name, ...restField} = field;\r\n                return (\r\n                    <ReactQuill\r\n                        {...props}\r\n                        {...restField}\r\n                        value={value}\r\n                        onChange={onChange(name)}\r\n                    />\r\n                );\r\n            case \"text\":\r\n            default:\r\n                return (<InputGroup {...field} {...props} />);\r\n        }\r\n    };\r\n}\r\n\r\nFormikCustomField.propTypes = {\r\n    //Main props\r\n    field: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        value: PropTypes.any\r\n    }),\r\n    form: PropTypes.shape({\r\n        touched: PropTypes.object.isRequired,\r\n        errors: PropTypes.object.isRequired,\r\n    }),\r\n    type: PropTypes.string,\r\n\r\n    //numeric specific props\r\n    onValueChange: PropTypes.func,\r\n\r\n    //select specific props\r\n    values: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            value: PropTypes.oneOfType([\r\n                PropTypes.string,\r\n                PropTypes.number,\r\n                PropTypes.bool\r\n            ]).isRequired,\r\n            label: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n\r\n    //multiselect specific props\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.string, PropTypes.bool, PropTypes.number\r\n        ]).isRequired,\r\n        label: PropTypes.oneOfType([\r\n            PropTypes.string, PropTypes.bool, PropTypes.number\r\n        ]).isRequired\r\n    })),\r\n    selectedItems: PropTypes.arrayOf(PropTypes.any),\r\n    onItemSelect: PropTypes.func,\r\n    onRemove: PropTypes.func\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom_card\":\"custom-card_custom_card__3Ol5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"error-status_container__2mD_I\",\"icon\":\"error-status_icon__3500J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"field-name_field__1pNp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"enchanted-table_container__30xZr\",\"table_container\":\"enchanted-table_table_container__2MkBC\",\"table_style\":\"enchanted-table_table_style__1hiJq\",\"th_style\":\"enchanted-table_th_style__Sf2jl\",\"header_container\":\"enchanted-table_header_container__3xLy6\",\"header_container_name\":\"enchanted-table_header_container_name__nm4JC\",\"header_container_search\":\"enchanted-table_header_container_search__3Nwoj\",\"dialog\":\"enchanted-table_dialog__EKksl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col_name\":\"add-edit-dialog_col_name__HT7cX\",\"col_value\":\"add-edit-dialog_col_value__1Gkrx\",\"table_container\":\"add-edit-dialog_table_container__rzQvg\"};"],"sourceRoot":""}