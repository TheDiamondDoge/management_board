{"version":3,"sources":["components/last-updated/last-updated.js","components/updated-info/updated-info.js","components/timeline/timeline.js","components/health-indicators-minimal/health-indicators-minimal.js","components/risks-list/risks-list.js","components/two-items-liner/two-items-liner.js","components/rqs-report-list/rqs-report-list.js","components/controls/edit-save-controls/edit-save-controls.js","components/tabs/report-tab/report-quills-form/report-quills-form.js","components/tabs/report-tab/export-menu/export-menu.js","components/tabs/report-tab/fields.js","util/render-field-helper.js","components/uploaded-image/uploaded-image.js","components/upload-file-controls/upload-file-controls-hidden.js","components/confirmation-popup/confirmation-popup.js","components/upload-display-section/upload-display-section.js","components/tabs/report-tab/report-tab.js","components/tabs/report-tab/report-tab.container.js","components/field-value/field-value.js","components/tabs/summary-tab/fields.js","components/help-icon/help-icon.js","util/global-helps.js","components/tooltip-content/tooltip-content.js","components/health-indicators/validation-schema.js","components/health-indicators/health-indicators.js","components/health-indicators/health-fields.js","components/legend/legend.js","components/contributing-projects-table/contributing-open-projects.js","components/contributing-projects-table/components/offer-product-title/offer-product-title.js","components/tabs/summary-tab/summary-tab.js","components/tabs/summary-tab/summary-tab.container.js","components/milestone-table/milestone-table.js","components/tabs/info-tab/fields.js","util/yup-validators.js","components/tabs/info-tab/validation-schema.js","components/tabs/info-tab/info-tab.js","components/tabs/info-tab/info-tab.container.js","components/requirements/requirements.js","components/requirements/validation-schema.js","components/requirements/fields-requirements.js","components/milestones-kpi/milestones-kpi.js","components/dr4kpi/kpi.js","components/dr4kpi/kpi-fields.js","components/quality/quality.js","components/quality/validation-schema.js","components/quality/quality-fields.js","components/tabs/indicators-tab/indicators-fields.js","components/tabs/indicators-tab/indicators-tab.js","components/tabs/indicators-tab/indicators-tab.container.js","components/cost-table/cost-table.js","components/last-updated-label/last-updated-label.js","components/tabs/cost-tab/fields.js","components/tabs/cost-tab/cost-tab.js","components/tabs/cost-tab/cost-tab.container.js","components/blc-rows/blc-row.js","components/tabs/blc/fields.js","components/tabs/blc/validation-schema.js","components/tabs/blc/blc.js","components/tabs/blc/blc.container.js","components/tabs/risks/table-config.js","components/tabs/risks/components/context-menu.js","components/tabs/risks/components/table-footer.js","components/excel-error/excel-error.js","components/import-errors-dialog/import-errors-dialog.js","components/tabs/risks/fields.js","components/tabs/risks/risks.js","components/tabs/risks/risks.container.js","components/tabs/actions/table-config.js","components/tabs/actions/components/tableFooter.js","components/tabs/actions/components/contextMenu.js","components/tabs/actions/validation-schema.js","components/tabs/actions/fields.js","components/tabs/actions/actions.js","components/tabs/actions/actions.container.js","components/tabs/requirements-tab/table-config.js","components/tabs/requirements-tab/components/table-footer.js","components/tabs/requirements-tab/requirements-tab.js","components/tabs/requirements-tab/requirements-tab.container.js","components/charts/backlog-defects-chart/bar-chart.js","components/global-statuses/no-data-found/no-data-found.js","components/tabs/backlog-defects-page/backlog-defects-page.js","components/tabs/backlog-tab/fields.js","components/tabs/backlog-tab/backlog-tab.js","components/tabs/backlog-tab/backlog-tab.container.js","components/tabs/defects-tab/fields.js","components/tabs/defects-tab/defects-tab.js","components/tabs/defects-tab/defects-tab.container.js","components/global-statuses/project-not-found-status/project-not-found-status.js","components/pages/pws/config.js","components/pages/pws/pws.js","components/pages/pws/pws.container.js","components/blc-rows/blc-row.module.scss","components/updated-info/updated-info.module.scss","components/last-updated/last-updated.module.scss","components/tabs/report-tab/report-tab.module.scss","components/timeline/timeline.module.scss","components/health-indicators-minimal/health-indicators-minimal.module.css","components/risks-list/risks-list.module.scss","components/two-items-liner/two-items-liner.module.scss","components/rqs-report-list/rqs-report-list.module.scss","components/controls/edit-save-controls/edit-save-controls.module.scss","components/tabs/report-tab/report-quills-form/report-quills-form.module.scss","components/uploaded-image/uploaded-image.module.scss","components/upload-file-controls/upload-file-controls-hidden.module.scss","components/upload-display-section/upload-display-section.module.scss","components/pages/pws/pws.module.scss","components/field-value/field-value.module.scss","components/tabs/summary-tab/summary-tab.module.scss","components/health-indicators/health-indicators.module.scss","components/tooltip-content/tooltip-content.module.scss","components/contributing-projects-table/contributing-open-projects.module.scss","components/legend/legend.module.scss","components/contributing-projects-table/components/offer-product-title/offer-product-title.module.scss","components/milestone-table/milestone-table.module.scss","components/tabs/info-tab/info-tab.module.scss","components/tabs/indicators-tab/indicators-tab.module.scss","components/requirements/requirements.module.scss","components/milestones-kpi/milestones-kpi.module.scss","components/dr4kpi/kpi.module.scss","components/quality/quality.module.scss","components/cost-table/cost-table.module.scss","components/tabs/cost-tab/cost-tab.module.scss","components/tabs/blc/blc.module.scss","components/excel-error/excel-error.module.scss","components/tabs/risks/risk.module.scss","components/tabs/actions/actions.module.scss","components/tabs/requirements-tab/requirements-tab.module.scss","components/charts/backlog-defects-chart/bar-chart.module.scss","components/tabs/backlog-defects-page/backlog-defects-page.module.scss","components/global-statuses/no-data-found/no-data-found.module.scss","components/global-statuses/project-not-found-status/project-not-found-status.module.scss"],"names":["LastUpdated","_this$props","this","props","dateStr","others","Object","objectWithoutProperties","formattedDate","getDateFromStringWithTime","isNotUpdatedForLong","isDateLateForOneMonth","classes","classNames","styles","margin_right","defineProperty","red","react_default","a","createElement","className","title","components","icon","intent","Intent","DANGER","React","PureComponent","UpdatedInfo","date","last_updated_LastUpdated","updated","Timeline","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterMilestones","milestones","filter","milestone","shown","actualDate","sort","milestonesCompare","setOrIfNeeded","findIndex","m","label","completion","baselineDate","concat","toConsumableArray","createCell","i","pos","marginLeft","timelineIndClasses","indicator","fullMargin","key","line","style","status_indicator","status","createContentCell","content","getDivContainer","createTimelineRow","clazz","assertThisInitialized","positionObj","getCurrentDatePosition","Fragment","first","length","map","obj","rowWithIndicatorRight","last","rowWithIndicatorOnMilestone","rowWithIndicatorLeft","milestoneCell","calcPositionBetween","rowIndicatorFloatPosition","createDecorativeRow","align_center","createMileStatusRow","iconsStyle","min_width","getMilestoneStatusIcon","Date","SUCCESS","currentDate","firstDate","lastDate","getTime","children","currMilestoneDate","setHours","getCurrentDate","_this2","containerClasses","container","id","timeline_table","url","meetingMinutes","isUrl","safe_url","legend","field_name","name","dateFormatToString","Component","defaultProps","HealthIndicatorsMinimal","indicators","schedule","scope","quality","cost","scheduleIndicator","getIndicatorsColor","scopeIndicator","qualityIndicator","costIndicator","striped","bordered","condensed","col_width","td_style","status_icon","RisksList","data","item","riskTitle","riskDescription","impactDescription","riskMitigation","mitigation","li_margin","comment_comment","value","TwoItemsLiner","second","blockStyles","naming_block","assign","RqsReportList","state","baseUrl","list","rq","reqId","headline","list_item","EditSaveControls","renderElements","smallSize","loading","editMode","onSubmit","onCancel","onClick","sticky","condProps","getButtonProps","sticky_controls","text","minimal","PRIMARY","isSmall","large","ReportQuillsForm","submitForm","toggleEditMode","setState","prev","default","modules","toolbar","getQuillModuleToolbar","blocked","formikNames","ReportTypes","SUMMARY","RED_FLAG","ORANGE_FLAG","GREEN_FLAG","DETAILS","edit_save_controls_EditSaveControls","controls","formik_esm","enableReinitialize","values","formikActions","setSubmitting","initialValues","render","formikProps","getModules","readOnly","headers","getHeaders","elem","quillName","util_renderers","type","quill_margin","orange","green","objectSpread","ExportMenu","buttonLoading","pptMenu","position","Position","BOTTOM","snapshots","snapshotLoading","projectId","onClickElement","disabled","loading_spinner","snap","strTimestamp","timestamp","menuItemName","reportId","fields","allowedIf","workspaceStatus","WorkspaceStatus","ENABLED","RenderFieldHelper","fieldsObjects","validationParams","_allowedIf","_notAllowedIf","getLabelById","isAttrExists","_fieldsToRender","_validationParams","hasOwnProperty","_shouldRender","field","undefined","editable","help","fieldType","includes","fieldOptions","fieldProps","keys","prop","UploadedImage","src","onDelete","image_container","image","alt","UploadFileControlsHidden","getFileInputProps","amount","multiple","onFilePick","e","filesLimit","files","currentTarget","maxFileSize","message","onError","checkFilesSize","submitRef","current","click","size","handleFormSubmit","preventDefault","stopPropagation","FormData","append","createRef","uploadRef","fileInputProps","ref","onChange","hidden","onAmountExceed","ConfirmationPopup","isOpen","body","onClose","onConfirm","confirmLabel","cancelLabel","Classes","DIALOG_BODY","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","UploadDisplaySection","handleDeletion","deletedFilename","toggleConfirmDialog","filename","isConfirmPopupOpen","openFileDialog","buttonName","onUpload","isUploading","buttonClasses","section","file","uploaded_image_UploadedImage","base64Image","upload_file_controls_hidden_UploadFileControlsHidden","confirmation_popup_ConfirmationPopup","ReportTab","handleOnAmountExceed","pushWarningToast","handleSaveData","saveData","handleUserReportReload","reloadUserReports","report","tab","custom_card","defaults","payload","renderHelper","renderFields","_this$props$report$ta","updatedOn","projectName","projectManager","_this$props$risks","risks","risksLoading","_this$props$milestone","milestonesLoading","_this$props$indicator","indLoading","risksObj","getRiskObj","_this$props$rqs","rqs","rqsLoading","rqsPayload","_this$props$userRepor","userReports","userReportsLoading","userReportsPayload","images","imagesLoading","isExportInProcess","project_info","updated_info_UpdatedInfo","two_items_liner_TwoItemsLiner","export_button","export_menu_ExportMenu","downloadPptReport","health_indicators_minimal_HealthIndicatorsMinimal","statuses","health_minimal","timeline_Timeline","overall","report_quills_form_ReportQuillsForm","displayOrNot","rqs_report_list_RqsReportList","scope_definition","risk_block","risks_list_RisksList","high","mod","low","upload_display_section_UploadDisplaySection","formData","uploadImages","deleteImage","submitFunc","riskObj","risk","rating","ConnectedComponent","withPwsOnMountCall","withPwsTabNameUrlChanger","onMount","onUnmount","connect","pws","reportTab","requirementsTab","healthIndicators","summary","pptLoading","pptReport","dispatch","loadData","loadReport","resetData","resetReport","resetReportImages","snapshotReset","resetRequirements","resetUserReports","milestonesReset","healthReset","risksSummaryReset","saveUserReport","loadUserReports","pptType","snapshotId","exportPpt","uploadReportImages","deleteReportImage","addWarningToast","FieldValue","useName","other","word_wrap","nullToEmptyStr","summary_tab_fields","productName","projectDescription","businessLineManager","productLineManager","projectState","projectRigor","charter","orBusinessPlan","updatedBusinessPlan","drChecklist","lessonsLearned","sponsor","businessDivision","businessUnit","productLine","workspaceState","projectType","oemPartner","ProjectTypes","OEM_PRODUCT","disabledTime","DISABLED","executiveSummary","redFlag","orangeFlag","greenFlag","details","collabSite","epmPwaSite","isEpm","documentationRepo","defectsReportSite","notAllowedIf","OFFER","activeRisks","activeActions","epmLastSavedDate","pwsLastUpdatedDate","pwsLastUpdatedBy","HelpIcon","healthStatusHelp","TooltipContent","tooltip_style","dangerouslySetInnerHTML","__html","Yup","shape","comments","max","ValidationErrors","string","MAX","nullable","HealthIndicators","bindFormSubmission","formikSubmitForm","onClickEditStatus","prevState","editStatusMode","onClickEditComment","editCommentMode","getHealthIndicatorsTable","isSummaryMode","prevStatusSet","currentStatusSet","fieldsToRender","isStatusControlsShown","isCommentsControlsShown","prevDate","health_table","status_col","prev_column","cur_column","tooltip_content_TooltipContent","RIGHT","help_icon_HelpIcon","help_icon","inline_block","column_align_center","prevValue","currentValue","comment","immutableIndicatorName","indicatorName","commentName","getImmutableIndicatorTd","getIndicatorTd","getCommentTd","formik_onsubmit_validator","callback","handleSubmitWithErrors","arguments","selectComponent","selectElement","statusIndicator","component","isValid","onSubmitErrorCallback","Messages","FORM_SUBMIT_ERROR","bind","_this$props2","onIndicatorsSubmit","onCommentsSubmit","isInitialValid","validationSchema","health_fields","Legend","colSpan","bkground_grey","bkground_red","ContributingOpenProjects","maxDate","minDate","offer","contributed","fileExport","_this$getMinMaxDates","getMinMaxDates","min","monthsBetween","Math","ceil","diff","_this$calculateTdsFor","calculateTdsForYear","tdForYear","currentMonthIndex","years","monthsHeaderObjs","getMonthsHeader","offers","getMilestonesPerMonthForProducts","products","lastComplTh","last_completed","cols","getColsForMonthsColumns","offerThClasses","offer_th","offer_th_sticky","typeThClasses","type_th","type_th_sticky","approvedThClasses","last_completed_sticky","table_container","overflow_container","table_class","name_col_size","type_size","last_dr_col_size","sticky_colspan3","year","yearThClasses","year_left_border","th_style","getMonthsTds","prjName","getProjectUrl","lastApproved","offerNameClasses","offerTypeClasses","offerApprovedClasses","renderMilestonesTds","productType","productNameClasses","products_name","productTypeClasses","productApprovedClasses","legend_Legend","onContribExport","Array","fill","x","mils_col_size","getDateIgnoringDay","add","moment","month","dateNow","currentMonth","currentYear","startDate","clone","tds","isCommitted","toUpperCase","ProjectStates","COMMITTED","prevYear","_loop","datePlusMonths","filteredMils","needYearBorder","removeLastTdIfNoMils","slice","_offers$Object$keys$","getMilestonesPerMonth","projectsData","projects","_projects$i","lastApprovedLabel","index","monthLabel","format","getMilsTdsClasses","_this3","td","mil","renderMilestoneLabel","tdIndex","isBorderNeeded","current_month","isLate","OfferProductTitle","isOffer","isContrib","getTitle","SummaryTab","handleContribExport","summaryData","summaryFieldsToRender","_this$props$summaryDa","general","links","pwsInfo","contribTable","getPropFromStringPath","overallIndicator","mainCardStyle","data_fields","secondaryCardStyle","secondary_card","contribTitleClasses","getContribTitleClasses","error_boundary","data_container","fieldLabel","field_value_FieldValue","right_part","health_indicators_HealthIndicators","flagClassColor","getClassForFlag","shouldRender","executive_block","react_quill_lib_default","defaultValue","pws_data_container","offer_product_title_OfferProductTitle","contributing_open_projects_ContributingOpenProjects","_this$props$defaults$","attrName","bottom_margin","summaryTab","summaryLoad","loadContribTable","summaryReset","resetContribTable","exportContribTable","MilestoneTable","renderBody","onDateChangeFactory","arrayHelpers","renderedMilestones","form","shownString","boolToYesNo","hasBaseline","shouldBeExcluded","labelEditable","isLabelEditable","shouldBeShown","shownShouldBeLocked","labelName","actualName","actualValue","isBaselineShown","baselineName","baselineValue","completionName","completionValue","timelineEditable","timelineName","timelineValue","minutesName","minutesValue","push","rowRemoveControls","remove","actual","baseline","onValueChange","timeline","minutes","errors","rowAddControls","excluded","withoutBaselineDate","isMandatory","mandatoryMilestones","shownAlwaysTrue","getEmptyMilestone","milestonesRendered","CommonMilestonesLabels","OR","DR0","DR1","DR4","table","config","keyCustomers","productRelease","epm","projectPlan","launchingPlan","OFFER_PRODUCT","metricsScope","rqRelease","ecmaBacklogTarget","maintenance","composite","contributingProjects","projectCollabUrl","salesForce","projectPWASiteUrl","docRepositoryUrl","defectsUrl","requirementsUrl","cisUrl","enumerable","configurable","writable","nullableInteger","integer","typeError","number","transform","originalValue","trim","unique","mapper","test","Set","InfoTab","sendData","saveInfo","cancelInput","editClickHandle","handleChange","populateMandatoryMilestones","mainRows","stateBranch","infoFieldsToRender","renderRow","renderRowWithComment","renderEcmaBacklogRow","isComposite","renderContributingProjectsRow","renderSimpleRow","selectClass","getFieldProps","displayValue","isBoolean","editForm","isEditable","fieldName","renderValue","getHelpObject","commentFieldName","data_container_comment","comment_row_label","comment_row_value","comment_row_comment","LEFT","comment_row_comment_value","arrayName","arrayErrorName","ecma_backlog_row","milestoneSelectName","valueInputName","milestoneValue","backlogValue","getMilestoneSelector","value_label","_this$props$contrib","contrib","valueStrings","val","editProjectList","shouldMultiselectRender","multiSelect","items","itemListPredicate","inputVal","itemArr","String","toLowerCase","itemRenderer","_ref","handleClick","active","isActive","selectedItems","onItemSelect","addProject","noResults","tagRenderer","tagInputProps","onRemove","removeProject","popoverProps","popoverClassName","multiselect","prj_margin","prj","projectsList","project","selectedProjects","url_container","DR2","DR3","TR","DR5","OBR","CI","information","_information$payload","urls","showEditControls","of","required","REQUIRED","MIN","validateForm","formikFieldHandleChange","milestone_table_MilestoneTable","milestonesData","infoTab","infoSaveData","saveMilestones","milestonesSave","infoLoad","milestonesLoad","contribLoad","infoReset","contribReset","Requirements","onClickEdit","updateFieldHandler","renderRqsTable","valueColumnClasses","value_col","rqsReload","req_table","title_col","table_header","renderValueField","propName","dr1Actual","requirements","dr1","sum","isSubmitting","rqsSubmit","addedAfterDr1","committedAtDr1","modifiedAfterDr1","removedAfterDr1","note","defineProperties","MilestonesKpi","noMilestonesLabel","headerClasses","borderBottom","mil_table","mil_col","adh_col","delay_col","duration_col","milestonesToRender","milestonesKpi","adherence","delay","duration","toPercentsOrNA","Kpi","header","dr4Kpi","kpi_table","name_col","TOP","configObj","scheduleAdherence","contentAdherence","rqsChange","costAdherence","Quality","onSubmitForm","updateNumericHandler","formikSubmit","renderQualityForm","syncDate","qualityKpi","fieldsRenderValidation","controlsRendered","editBtnProps","getSyncButtonProps","sync_date","float_right","quality_table","descr_col","controls_col","obj_col","actual_col","renderComplexRows","isControlled","rowsNum","rowSpan","rowTitle","getEmptyRowObject","isActualEditable","row","inputAttrs","getInputAttrs","isRenderControlsNeeded","objectiveName","title_container","row_name_container","help_container","removeRow","emptyToZero","objective","renderActual","rowNumber","unshift","pop","defects","backlog","testExecution","testRate","fillArrayIfEmpty","object","isDr1ActualExists","updateInProcess","regexp","getSpecialNumericRegexp","regex","RegExp","match","indicators_fields","IndicatorsTab","handleHealthIndicatorsSubmit","healthIndicatorsSubmit","handleHealthCommentsSubmit","healthCommentsSubmit","handleHealthReload","healthReload","handleRqsSubmit","handleRqsReload","handleQualityReload","qualityReload","handleQualitySubmit","qualitySubmit","onSubmitErrorHandler","rqsRenderHelper","fieldsRequirements","fieldsParams","isControlsBlocked","isQualityShowed","rqsCardClasses","rqs_kpi","card","milestonesKpiClasses","milestones_kpi","dr4KpiClasses","dr4_kpi","qualityClasses","healthFields","kpi_container","requirements_Requirements","milestones_kpi_MilestonesKpi","kpi_Kpi","kpiFields","quality_Quality","qualityFields","indicatorsRqs","dr4kpi","healthIndicatorsSave","healthCommentsSave","healthLoad","indicatorsRqsSave","indicatorsRqsLoad","qualityKpiSave","qualityKpiLoad","indicatorsLoad","resetState","indicatorsRqsReset","milestonesKpiReset","dr4KpiReset","qualityKpiReset","CostTable","tableName","committed","realized","committedValue","toTwoTrailingDigits","nanToEmptyString","realizedValue","committedMilestone","committedMilestoneComment","realizedMilestone","realizedMilestoneComment","cost_table","effort_col","data_column","LastUpdatedLabel","isFileExists","cost_tab_fields","CostTab","toggleControls","openFileUploadDialog","templateUrl","_this$props$cost$payl","charged","capex","fileExists","uploadCost","getLastUploadedFile","showControls","last_updated_label_LastUpdatedLabel","last_updated","import_container","cost_table_CostTable","template","costTab","costLoad","costUpload","costGetLastUploaded","costReset","BlcRow","num","rowName","roleName","lastUpdatedBy","rowValues","isValuesEdit","isCommentsEdit","tdClasses","updatedOnString","isEditShown","shouldShowEditButton","sticky_white","blcNumberToState","isControlsHidden","blc_fields","pm","pmo","sales","BlcDashboard","handleCancel","cancelEdit","formikSubmitFunc","onClickCommentsEdit","isPmRow","isPmoRow","isSalesRow","getRowToSaveValue","renderBlcTab","thClasses","thCommentClasses","controlsAllowed","_formikProps$values","relative_wrapper","overflow_wrapper","blc_table","renderColGroup","renderHeader","blc_row_BlcRow","BlcRowNames","PM","csl","isInEditMode","PMO","SALES","role_col","who_col","updated_col","or_col","charter_col","proj_plan_col","tailoring_col","prog_mgr_col","core_col","bp_plan_col","bp_sales","lp_plan","lp_sales","les_learned","risks_col","allowed","isEditButton","roleClasses","blcTab","_this$props$blcTab$pa","rowToSave","showSubmitCancel","shouldShowSubmitCancel","MINIMAL","publish_btn","_this2$props","saveComments","saveIndicators","shouldShowEditControls","blcLoad","blcReset","blcIndicatorsSave","blcCommentsSave","table_config","headerName","width","column","textAlign","searchType","decorator","errorDisplayDecorator","probabilityDecorator","impactDecorator","wordBreak","result","preDecorator","dateDecorator","inputType","ContextMenu","onEdit","menuProps","TableFooter","onExcelExport","onExcelImport","ExcelError","cellIndex","rowIndex","displayedCellIndex","displayedRowIndex","error_margin","ImportErrorsDialog","WARNING","err","excel_error_ExcelError","risks_fields","Risks","getContextMenu","menuFuncs","context_menu_ContextMenu","editRow","getTableFooter","downloadRisks","footerProps","table_footer_TableFooter","handleSaveRisks","saveRisk","errorListShowed","uploadRisksFile","setErrorsShowedTrue","picklists","createEnchantedTableFilters","isImportDialogOpened","last_updated_container","lastUploaded","enchanted_table","columns","colSettings","filterValues","interactive","contextMenu","renderFooter","import_errors_dialog_ImportErrorsDialog","loadRisks","resetRisks","uploadRisks","getLastUploadedRisks","actions_table_config","selectValues","arrayDecorator","onRefresh","onAdd","onExport","fileExporting","containerProps","registry","owner","priority","actions_fields","Actions","renderable","handleLoadData","handleExportActions","actions","tableFuncs","dialogOpen","tableFooter_TableFooter","actionUid","currentActionUid","isDialogOpen","contextMenu_ContextMenu","getRow","uid","handleSaveAction","relatedRisks","saveAction","handleDeleteAction","deleteAction","exportActions","filters","editDynamicInputVals","getDynamicInputRisks","tableConfig","related","actionSave","actionDelete","actionsExport","actionsLoad","loadRiskIds","actionsReset","riskIdsReset","requirements_tab_table_config","maxWidth","RequirementsTab","noDataMessage","components_table_footer_TableFooter","loadRequirements","BarChart","chartRef","barChart","shouldChartUpdate","loadChart","prevProps","snapshot","initialRange","labelsAmount","labels","getMaxFromLabels","sliderValue","range","minSliderVal","maxSliderVal","canvas","stepSize","labelRenderer","labelStepSize","destroy","filterData","filtered","createChart","myChartRef","getContext","target","Chart","datasets","backgroundColor","newIssues","stack","dev","qa","qaDone","in","out","options","scales","yAxes","stacked","scaleLabel","display","labelString","xAxes","annotation","getAnnotationConfig","annotations","mode","scaleID","borderColor","borderWidth","enabled","timeout","clearTimeout","setTimeout","startIndex","endIndex","NoDataFound","status_container","iconSize","BacklogDefectsPage","getFooter","isDataExist","onUpdate","onCurrentClick","currentWeekClasses","uploadLabel","tooltip","isDataExists","card_container","header_container","center","renderChartZone","updated_block","bar_chart_BarChart","chart_container","no_data_container","no_data_found_NoDataFound","dataExist","forEach","backlog_tab_fields","BacklogTab","isBlocked","backlog_defects_page_BacklogDefectsPage","alert","backlogTab","loadBacklogChart","resetBacklog","defects_tab_fields","DefectsTab","defectsTab","loadDefectsChart","resetDefects","ProjectNotFoundStatus","getErrorMessage","wrapper","icon_style","_config","PWSTabs","INDICATORS","INFORMATION","ACTIONS","projectDivision","RISKS","COST","REPORT","REQUIREMENTS","BACKLOG","DEFECTS","BLC","RD_PRODUCT","PWS","tabId","selectedId","defaultSelectedTab","defaultTabNames","getDefaultTabNames","Number","getUrlParam","_this$props$defaults","error","loading_status","project_not_found_status_ProjectNotFoundStatus","renderFieldHelper","tabName","getActiveTabName","selectedTabId","Helmet","pws_container","renderActiveTabPanelOnly","tabs","tab_container","panel","summary_tab_container","indicators_tab_container","info_tab_container","actions_container","risks_container","cost_tab_container","report_tab_container","requirements_tab_container","backlog_tab_container","defects_tab_container","blc_container","urlParams","location","search","URLSearchParams","get","isTabNameExists","loadProjectDefaults","resetProjectDefaults","module","exports","no_border","last_compl_col","column_align_right"],"mappings":"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","file":"static/js/6.6ec321de.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getDateFromStringWithTime, isDateLateForOneMonth} from \"../../util/transform-funcs\";\r\nimport classNames from 'classnames';\r\nimport styles from './last-updated.module.scss';\r\nimport {Icon, Intent} from \"@blueprintjs/core\";\r\n\r\nexport default class LastUpdated extends React.PureComponent {\r\n    render() {\r\n        const {dateStr, ...others} = this.props;\r\n        const formattedDate = getDateFromStringWithTime(dateStr);\r\n        const isNotUpdatedForLong = isDateLateForOneMonth(dateStr);\r\n        const title = \"Last time updated more than 1 month ago\";\r\n        const classes = classNames(styles.margin_right, {[styles.red]: isNotUpdatedForLong});\r\n        return (\r\n            <div {...others}>\r\n                <span className={classes}>\r\n                    {formattedDate}\r\n                </span>\r\n                {isNotUpdatedForLong &&\r\n                    <span title={title}>\r\n                        <Icon\r\n                            icon={\"warning-sign\"}\r\n                            intent={Intent.DANGER}\r\n                        />\r\n                    </span>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLastUpdated.propTypes = {\r\n    dateStr: PropTypes.string,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './updated-info.module.scss';\r\nimport LastUpdated from \"../last-updated/last-updated\";\r\n\r\nexport default class UpdatedInfo extends React.PureComponent {\r\n    render() {\r\n        const {date, ...others} = this.props;\r\n        return (\r\n            <div {...others}>\r\n                Updated On:\r\n                <LastUpdated\r\n                    className={styles.updated}\r\n                    dateStr={date}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdatedInfo.propTypes = {\r\n    date: PropTypes.string,\r\n};","import React from 'react';\r\nimport styles from './timeline.module.scss';\r\nimport classNames from 'classnames';\r\nimport StatusIndicator from \"../status-indicator/status-indicator\";\r\nimport {Icon, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from 'prop-types';\r\nimport FieldName from \"../field-name/field-name\";\r\nimport {dateFormatToString} from \"../../util/transform-funcs\";\r\nimport {milestonesCompare} from \"../../util/comparators\";\r\nimport {MilestoneShape} from \"../../util/custom-types\";\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\nimport {isUrl} from \"../../util/util\";\r\n\r\n//TODO indicators colors as Constants\r\nexport default class Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.currentDate = this.getCurrentDate();\r\n    }\r\n\r\n    render() {\r\n        let milestones = this.filterMilestones(this.props.milestones);\r\n        milestones = this.setOrIfNeeded(milestones);\r\n        const containerClasses = classNames(this.props.className, styles.container);\r\n        return (\r\n            <div className={containerClasses}>\r\n                <table\r\n                    id={\"timeline\"}\r\n                    className={styles.timeline_table}\r\n                >\r\n                    <tbody>\r\n\r\n                    {this.createMileStatusRow(milestones)}\r\n\r\n                    <tr>\r\n                        <td>&nbsp;</td>\r\n                        {\r\n                            milestones.map((milestone, key) => {\r\n                                const url = milestone.meetingMinutes;\r\n                                let content = isUrl(url)\r\n                                    ? (\r\n                                        <SafeUrl\r\n                                            url={url}\r\n                                            label={milestone.label}\r\n                                        />\r\n                                    )\r\n                                    : milestone.label;\r\n\r\n                                return this.createContentCell(content, key)\r\n                            })\r\n                        }\r\n                    </tr>\r\n\r\n                    {this.createDecorativeRow(milestones)}\r\n                    {this.createTimelineRow(milestones)}\r\n                    {this.createDecorativeRow(milestones)}\r\n\r\n                    <tr>\r\n                        <td>&nbsp;</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles.legend}>\r\n                            <FieldName name={\"Committed (Baseline)\"}/>\r\n                        </td>\r\n                        {\r\n                            milestones.map((milestone, key) => {\r\n                                const date = new Date(milestone.baselineDate);\r\n                                const dateStr = dateFormatToString(date);\r\n                                return this.createContentCell(dateStr, key);\r\n                            })\r\n                        }\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>&nbsp;</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td className={styles.legend}>\r\n                            <FieldName name={\"Actual / Forecast\"}/>\r\n                        </td>\r\n                        {\r\n                            milestones.map((milestone, key) => {\r\n                                const date = new Date(milestone.actualDate);\r\n                                const dateStr = dateFormatToString(date);\r\n                                return this.createContentCell(dateStr, key);\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    filterMilestones = (milestones) => {\r\n        let result = milestones.filter(milestone => milestone.shown && milestone.actualDate);\r\n        return result.sort(milestonesCompare);\r\n    };\r\n\r\n    setOrIfNeeded = (milestones) => {\r\n        const emptyOr = {label: \"OR\", completion: 0, actualDate: null, baselineDate: null};\r\n        const orIndex = milestones.findIndex(m => m.label === \"OR\");\r\n        if (orIndex === -1) {\r\n            return [emptyOr, ...milestones];\r\n        }\r\n            // questionable functionality\r\n        /*else if (orIndex !== 0) {\r\n            return [milestones[orIndex], ...milestones.splice(0, orIndex), ...milestones.splice(orIndex)];\r\n        } */\r\n\r\n        else {\r\n            return [...milestones];\r\n        }\r\n\r\n    }\r\n\r\n    createCell = (i, pos, marginLeft) => {\r\n        marginLeft = marginLeft || 0.5;\r\n        const timelineIndClasses = classNames(styles.indicator);\r\n        const fullMargin = `calc(${marginLeft * 100}% - 13px)`;\r\n        return (\r\n            <td\r\n                key={i}\r\n                className={styles.line}\r\n            >\r\n                {\r\n                    (i === pos) &&\r\n                    (\r\n                        <div\r\n                            className={timelineIndClasses}\r\n                            style={{marginLeft: fullMargin}}\r\n                        >\r\n                            <StatusIndicator status={this.props.status}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </td>\r\n        )\r\n    };\r\n\r\n    createContentCell = (content, key) => (\r\n        <td key={key + \"_content\"}>\r\n            {this.getDivContainer(content)}\r\n        </td>\r\n    );\r\n\r\n    createTimelineRow = (milestones) => {\r\n        const clazz = this;\r\n        const positionObj = this.getCurrentDatePosition(milestones);\r\n        return (\r\n            <>\r\n                {\r\n                    positionObj.first === milestones.length\r\n                        ? rowWithIndicatorRight(milestones)\r\n                        :\r\n                        positionObj.first === positionObj.last\r\n                            ? rowWithIndicatorOnMilestone(milestones)\r\n                            :\r\n                            positionObj.first === -1\r\n                                ? rowWithIndicatorLeft(milestones)\r\n                                : rowIndicatorFloatPosition(milestones)\r\n\r\n                }\r\n            </>\r\n        );\r\n\r\n        function rowWithIndicatorRight(milestones) {\r\n            return (\r\n                <tr>\r\n                    <td className={styles.line}>&nbsp;</td>\r\n                    {\r\n                        milestones.map((obj, i) => (\r\n                            clazz.createCell(i, positionObj.first - 1, 0.9)\r\n                        ))\r\n                    }\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        function rowWithIndicatorLeft(milestones) {\r\n            return (\r\n                <tr>\r\n                    <td className={styles.line}>&nbsp;</td>\r\n                    {\r\n                        milestones.map((obj, i) => (\r\n                            clazz.createCell(i, 0, 0.1)\r\n                        ))\r\n                    }\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        function rowWithIndicatorOnMilestone(milestones) {\r\n            return (\r\n                <tr>\r\n                    <td className={styles.line}>&nbsp;</td>\r\n                    {\r\n                        milestones.map((obj, i) => (\r\n                            clazz.createCell(i, positionObj.first)\r\n                        ))\r\n                    }\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        function rowIndicatorFloatPosition(milestones) {\r\n            let pos = clazz.calcPositionBetween(positionObj, milestones);\r\n            let milestoneCell;\r\n            if (pos < 0.5) {\r\n                milestoneCell = positionObj.first;\r\n                pos += 0.5;\r\n            } else {\r\n                milestoneCell = positionObj.last;\r\n                pos -= 0.5;\r\n            }\r\n            return (\r\n                <tr>\r\n                    <td className={styles.line}>&nbsp;</td>\r\n                    {\r\n                        milestones.map((obj, i) => (\r\n                            clazz.createCell(i, milestoneCell, pos)\r\n                        ))\r\n                    }\r\n                </tr>\r\n            )\r\n        }\r\n    };\r\n\r\n    createDecorativeRow = (milestones) => (\r\n        <tr>\r\n            <td/>\r\n            {\r\n                milestones.map((obj, i) => (\r\n                    <td\r\n                        key={i + \"_decorative\"}\r\n                        className={styles.align_center}\r\n                    >\r\n                        |\r\n                    </td>\r\n                ))\r\n            }\r\n        </tr>\r\n    );\r\n\r\n    createMileStatusRow = (milestones) => {\r\n        const iconsStyle = classNames(styles.align_center, styles.min_width);\r\n        return (\r\n            <tr>\r\n                <td/>\r\n                {\r\n                    milestones.map((obj, i) => (\r\n                        <td\r\n                            key={i + \"_status\"}\r\n                            className={iconsStyle}\r\n                        >\r\n                            {this.getMilestoneStatusIcon(obj)}\r\n                        </td>\r\n                    ))\r\n                }\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    getMilestoneStatusIcon = (milestone) => {\r\n        const actualDate = new Date(milestone.actualDate);\r\n        if (milestone.completion === 100) {\r\n            return <Icon icon={\"tick\"} intent={Intent.SUCCESS}/>\r\n        } else if (actualDate < this.currentDate) {\r\n            return <Icon icon={\"cross\"} intent={Intent.DANGER}/>;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    calcPositionBetween = (positionObj, milestones) => {\r\n        let firstDate = new Date(milestones[positionObj.first].actualDate);\r\n        let lastDate = new Date(milestones[positionObj.last].actualDate);\r\n\r\n        return ((this.currentDate - firstDate.getTime()) / (lastDate.getTime() - firstDate.getTime()));\r\n    };\r\n\r\n    getCurrentDate() {\r\n        let tmp = new Date();\r\n        return tmp.setHours(0, 0, 0, 0);\r\n    };\r\n\r\n    getDivContainer = (children) => (\r\n        <div className={styles.align_center}>\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n    getCurrentDatePosition = (milestones) => {\r\n        let i = 0;\r\n        for (; i < milestones.length; i++) {\r\n            let currMilestoneDate = new Date(milestones[i].actualDate);\r\n            currMilestoneDate.setHours(0, 0, 0, 0);\r\n            if (this.currentDate > currMilestoneDate) {\r\n                continue;\r\n            }\r\n\r\n            if (this.currentDate === currMilestoneDate.getTime()) {\r\n                return {\r\n                    first: i,\r\n                    last: i,\r\n                };\r\n            }\r\n\r\n            if (this.currentDate < currMilestoneDate) {\r\n                return {\r\n                    first: i - 1,\r\n                    last: i,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            first: i,\r\n            last: i\r\n        };\r\n    }\r\n}\r\n\r\nTimeline.propTypes = {\r\n    //Should be sorted\r\n    milestones: PropTypes.arrayOf(MilestoneShape).isRequired,\r\n    status: PropTypes.oneOf([\"red\", \"green\", \"yellow\", \"blank\"]),\r\n    classNames: PropTypes.string\r\n};\r\n\r\nTimeline.defaultProps = {\r\n    className: '',\r\n    status: 'blank'\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport StatusIndicator from \"../status-indicator/status-indicator\";\r\nimport styles from \"./health-indicators-minimal.module.css\";\r\nimport {getIndicatorsColor} from \"../../util/transform-funcs\";\r\n\r\nexport default class HealthIndicatorsMinimal extends React.PureComponent {\r\n    render() {\r\n        const {indicators, className} = this.props;\r\n        const {schedule, scope, quality, cost} = indicators;\r\n\r\n        const scheduleIndicator = getIndicatorsColor(schedule);\r\n        const scopeIndicator = getIndicatorsColor(scope);\r\n        const qualityIndicator = getIndicatorsColor(quality);\r\n        const costIndicator = getIndicatorsColor(cost);\r\n        return (\r\n            <div className={className}>\r\n                <HTMLTable\r\n                    striped\r\n                    bordered\r\n                    condensed\r\n                >\r\n                    <colgroup>\r\n                        <col className={styles.col_width}/>\r\n                        <col className={styles.col_width}/>\r\n                        <col className={styles.col_width}/>\r\n                        <col className={styles.col_width}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={styles.td_style}>\r\n                            Schedule\r\n                        </th>\r\n                        <th className={styles.td_style}>\r\n                            Scope\r\n                        </th>\r\n                        <th className={styles.td_style}>\r\n                            Quality\r\n                        </th>\r\n                        <th className={styles.td_style}>\r\n                            Cost\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={styles.td_style}>\r\n                            <StatusIndicator\r\n                                status={scheduleIndicator}\r\n                                className={styles.status_icon}\r\n                            />\r\n                        </td>\r\n                        <td className={styles.td_style}>\r\n                            <StatusIndicator\r\n                                status={scopeIndicator}\r\n                                className={styles.status_icon}\r\n                            />\r\n                        </td>\r\n                        <td className={styles.td_style}>\r\n                            <StatusIndicator\r\n                                status={qualityIndicator}\r\n                                className={styles.status_icon}\r\n                            />\r\n                        </td>\r\n                        <td className={styles.td_style}>\r\n                            <StatusIndicator\r\n                                status={costIndicator}\r\n                                className={styles.status_icon}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </HTMLTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHealthIndicatorsMinimal.propTypes = {\r\n    indicators: PropTypes.shape({\r\n        cost: PropTypes.number.isRequired,\r\n        quality: PropTypes.number.isRequired,\r\n        schedule: PropTypes.number.isRequired,\r\n        scope: PropTypes.number.isRequired,\r\n    })\r\n};\r\n\r\nHealthIndicatorsMinimal.defaultProps = {\r\n    indicators: {\r\n        cost: 0,\r\n        quality: 0,\r\n        schedule: 0,\r\n        scope: 0,\r\n    }\r\n};","import React from \"react\";\r\nimport {RiskReportType} from \"../../util/custom-types\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./risks-list.module.scss\";\r\nimport Comment from \"../comment/comment\";\r\n\r\nexport default class RisksList extends React.PureComponent {\r\n    render() {\r\n        const {data, ...others} = this.props;\r\n        return (\r\n            <ul {...others}>\r\n                {data.map((item, i) => {\r\n                    const riskTitle = item.riskDescription;\r\n                    const riskDescription = item.impactDescription;\r\n                    const riskMitigation = item.mitigation;\r\n                    return (\r\n                            <li\r\n                                key={i}\r\n                                className={styles.li_margin}\r\n                            >\r\n                                <div><b>Risk:</b> {riskTitle}</div>\r\n                                <div><b>Description:</b> <Comment value={riskDescription} /></div>\r\n                                <div><b>Mitigation:</b> <Comment value={riskMitigation} /></div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nRisksList.propTypes = {\r\n    data: PropTypes.arrayOf(RiskReportType).isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./two-items-liner.module.scss\";\r\n\r\nexport default class TwoItemsLiner extends React.PureComponent {\r\n    render() {\r\n        const {first, second, className, ...others} = this.props;\r\n        const blockStyles = classNames(styles.naming_block, className);\r\n        return (\r\n            <div className={blockStyles} {...others}>\r\n                <span className={styles.name}>{first}</span>\r\n                <span>{second}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTwoItemsLiner.propTypes = {\r\n    first: PropTypes.node,\r\n    second: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n\r\nTwoItemsLiner.defaultProps = {\r\n    first: '',\r\n    second: '',\r\n    className: ''\r\n};","import React from 'react';\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./rqs-report-list.module.scss\";\r\n\r\nexport default class RqsReportList extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            baseUrl: \"https://jira.com/browse/\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {className, data} = this.props;\r\n        return (\r\n            <div className={className}>\r\n                <ul className={styles.list}>\r\n                    {data.map(rq => {\r\n                        const id = rq.reqId;\r\n                        const url = this.state.baseUrl + `${id}`;\r\n                        const headline = rq.headline;\r\n                        const status = rq.status;\r\n                        return (\r\n                            <li\r\n                                key={id}\r\n                                className={styles.list_item}\r\n                            >\r\n                                <div>\r\n                                    <SafeUrl label={id}\r\n                                             url={url}\r\n                                             className={styles.url}\r\n                                    />\r\n                                </div>\r\n                                <div>{headline}</div>\r\n                                <div><u>Status</u>: {status}</div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRqsReportList.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            reqId: PropTypes.string.isRequired,\r\n            headline: PropTypes.string.isRequired,\r\n            status: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n    className: PropTypes.string\r\n};\r\n\r\nRqsReportList.defaultProps = {\r\n    data: [],\r\n    className: ''\r\n};\r\n\r\n","import React from 'react';\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\nimport styles from \"./edit-save-controls.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class EditSaveControls extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            this.renderElements()\r\n        )\r\n    }\r\n\r\n    renderElements = () => {\r\n        let {className, smallSize, loading, editMode, onSubmit, onCancel, onClick, sticky} = this.props;\r\n        let condProps = this.getButtonProps(smallSize);\r\n        const classes = classNames(\r\n            className,\r\n            {[styles.sticky_controls]: sticky}\r\n        );\r\n\r\n        if (editMode) {\r\n            return (\r\n                <div className={classes}>\r\n                    <Button\r\n                        text={\"Save\"}\r\n                        minimal\r\n                        icon={\"saved\"}\r\n                        onClick={onSubmit}\r\n                        intent={Intent.SUCCESS}\r\n                        {...condProps}\r\n                    />\r\n                    <Button\r\n                        text={\"Cancel\"}\r\n                        minimal\r\n                        icon={\"undo\"}\r\n                        onClick={onCancel}\r\n                        intent={Intent.DANGER}\r\n                        {...condProps}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            if (!smallSize) {\r\n                condProps.text = \"Edit\";\r\n            }\r\n            return (\r\n                <div className={classes}>\r\n                    <Button\r\n                        minimal\r\n                        icon={\"edit\"}\r\n                        onClick={onClick}\r\n                        intent={Intent.PRIMARY}\r\n                        loading={loading}\r\n                        {...condProps}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    getButtonProps = (isSmall) => {\r\n        if (isSmall) {\r\n            return {\r\n                text: null\r\n            }\r\n        } else {\r\n            return {\r\n                large: true,\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nEditSaveControls.propTypes = {\r\n    onClick: PropTypes.func,\r\n    onSubmit: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    editMode: PropTypes.bool,\r\n    smallSize: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    sticky: PropTypes.bool\r\n};\r\n\r\nEditSaveControls.defaultProps = {\r\n    onClick: () => {},\r\n    onSubmit: () => {},\r\n    onCancel: () => {},\r\n    editMode: false,\r\n    smallSize: false,\r\n    className: '',\r\n    loading: false,\r\n    sticky: false\r\n};\r\n","import React from \"react\";\r\nimport EditSaveControls from \"../../../controls/edit-save-controls/edit-save-controls\";\r\nimport FormikInput from \"../../../controls/util-renderers\";\r\nimport styles from \"./report-quills-form.module.scss\";\r\nimport {Formik} from \"formik\";\r\nimport {getQuillModuleToolbar} from \"../../../../util/util\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ReportTypes} from \"../../../../util/constants\";\r\n\r\nexport default class ReportQuillsForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editMode: false,\r\n            default: {\r\n                value: \"<p>Empty</p>\",\r\n                modules: {\r\n                    toolbar: getQuillModuleToolbar(),\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    submitForm = null;\r\n\r\n    render() {\r\n        const {data, onCancel, onSubmit, blocked} = this.props;\r\n        const formikNames = [\r\n            ReportTypes.SUMMARY, ReportTypes.RED_FLAG, ReportTypes.ORANGE_FLAG, ReportTypes.GREEN_FLAG, ReportTypes.DETAILS\r\n        ];\r\n        return (\r\n            <>\r\n                {\r\n                    blocked ||\r\n                    <EditSaveControls\r\n                        sticky\r\n                        className={styles.controls}\r\n                        onClick={this.toggleEditMode}\r\n                        editMode={this.state.editMode}\r\n                        onCancel={() => {\r\n                            onCancel();\r\n                            this.toggleEditMode();\r\n                        }}\r\n                        onSubmit={this.submitForm}\r\n                    />\r\n                }\r\n                <Formik\r\n                    enableReinitialize\r\n                    onSubmit={(values, formikActions) => {\r\n                        formikActions.setSubmitting(false);\r\n                        onSubmit(values);\r\n                    }}\r\n                    initialValues={data}\r\n                    render={(formikProps) => {\r\n                        this.submitForm = formikProps.submitForm;\r\n                        const modules = this.getModules(this.state.editMode);\r\n                        const readOnly = !this.state.editMode;\r\n                        const headers = this.getHeaders();\r\n                        return (\r\n                            <>\r\n                                {headers.map((elem, i) => {\r\n                                    const quillName = formikNames[i];\r\n                                    return (\r\n                                    <React.Fragment key={quillName}>\r\n                                        <div>{headers[i]}</div>\r\n                                        <FormikInput\r\n                                            type=\"quill\"\r\n                                            name={quillName}\r\n                                            readOnly={readOnly}\r\n                                            modules={modules}\r\n                                            className={styles.quill_margin}\r\n                                        />\r\n                                    </React.Fragment>\r\n                                )})}\r\n                            </>\r\n                        )\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState(\r\n            (prev) => ({\r\n                editMode: !prev.editMode\r\n            })\r\n        )\r\n    }\r\n\r\n    getHeaders() {\r\n        return [\r\n            <h3>Executive Status Summary</h3>,\r\n            <h3 className={styles.red}>Red Flag (executive action needed)</h3>,\r\n            <h3 className={styles.orange}>Orange Flag (core team action needed)</h3>,\r\n            <h3 className={styles.green}>Green Flag</h3>,\r\n            <h3>Current Project Details</h3>\r\n        ];\r\n    }\r\n\r\n\r\n    getModules(editMode) {\r\n        if (!editMode) {\r\n            let modules = {...this.state.default.modules};\r\n            modules.toolbar = null;\r\n            return modules;\r\n        } else {\r\n            return this.state.default.modules;\r\n        }\r\n    }\r\n}\r\n\r\nReportQuillsForm.propTypes = {\r\n    data: PropTypes.shape({\r\n        schedule: PropTypes.number,\r\n        scope: PropTypes.number,\r\n        quality: PropTypes.number,\r\n        cost: PropTypes.number\r\n    }),\r\n    blocked: PropTypes.bool,\r\n    onCancel: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nReportQuillsForm.defaultProps = {\r\n    blocked: false\r\n}","import React from \"react\";\r\nimport {Button, Divider, Intent, Menu, MenuItem, Popover, Position} from \"@blueprintjs/core\";\r\nimport LoadingSpinner from \"../../../loading-spinner/loading-spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getDateFromStringWithTime} from \"../../../../util/transform-funcs\";\r\n\r\nexport default class ExportMenu extends React.Component {\r\n    render() {\r\n        const exportButtonTitle = \"PPT Upload\";\r\n        const {buttonLoading} = this.props;\r\n        return (\r\n            <Popover\r\n                content={this.pptMenu()}\r\n                position={Position.BOTTOM}\r\n            >\r\n                <Button\r\n                    large\r\n                    minimal\r\n                    loading={buttonLoading}\r\n                    icon={\"download\"}\r\n                    intent={Intent.PRIMARY}\r\n                    text={exportButtonTitle}\r\n                />\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n    pptMenu() {\r\n        const {snapshots, snapshotLoading, projectId, onClickElement} = this.props;\r\n        return (\r\n            <Menu>\r\n                <MenuItem\r\n                    disabled\r\n                    text={\"PowerPoint, program template\"}\r\n                />\r\n                <MenuItem\r\n                    text={\"PowerPoint, multi-page & customizable\"}\r\n                    onClick={() => onClickElement(projectId, \"custom\")}\r\n                />\r\n                <MenuItem\r\n                    text={\"PowerPoint, multi-page & indicators\"}\r\n                    onClick={() => onClickElement(projectId, \"indicators\")}\r\n                />\r\n                <MenuItem\r\n                    text={\"PowerPoint Exec review\"}\r\n                    onClick={() => onClickElement(projectId, \"review\")}\r\n                />\r\n                <Divider/>\r\n                {snapshotLoading\r\n                    ? <LoadingSpinner/>\r\n                    : snapshots.map(snap => {\r\n                        const strTimestamp = getDateFromStringWithTime(snap.timestamp);\r\n                        const menuItemName = `Snapshot at ${strTimestamp}`;\r\n                        return (\r\n                            <MenuItem\r\n                                key={snap.reportId}\r\n                                text={menuItemName}\r\n                                icon={\"archive\"}\r\n                                onClick={() => onClickElement(projectId, \"custom\", snap.reportId)}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nExportMenu.propTypes = {\r\n    onClickElement: PropTypes.func.isRequired,\r\n    projectId: PropTypes.number.isRequired,\r\n    snapshots: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            timestamp: PropTypes.string,\r\n            reportId: PropTypes.number\r\n        })\r\n    ),\r\n    snapshotLoading: PropTypes.bool.isRequired,\r\n    buttonLoading: PropTypes.bool\r\n};\r\n\r\nExportMenu.defaultProps = {\r\n    buttonLoading: false\r\n}","import {WorkspaceStatus} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    }\r\n}","export default class RenderFieldHelper {\r\n    constructor(fieldsObjects, validationParams) {\r\n        this._fieldsToRender = fieldsObjects;\r\n        this._validationParams = validationParams;\r\n    }\r\n    \r\n    _allowedIf = \"allowedIf\";\r\n    _notAllowedIf = \"notAllowedIf\";\r\n\r\n    displayOrNot(id) {\r\n        if (!this._fieldsToRender[id]) return false;\r\n\r\n        if (this._fieldsToRender[id].hasOwnProperty(this._allowedIf)) {\r\n            return this._shouldRender(this._allowedIf, id);\r\n        } else if (this._fieldsToRender[id].hasOwnProperty(this._notAllowedIf)) {\r\n            return this._shouldRender(this._notAllowedIf, id);\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    isEditable(field) {\r\n        const editable = this._fieldsToRender[field].editable;\r\n        if (!(editable === undefined)) {\r\n            return this._fieldsToRender[field].editable;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    isAttrExists(id) {\r\n        return (id in this._fieldsToRender);\r\n    };\r\n\r\n    getHelpObject(field) {\r\n        return this._fieldsToRender[field].help;\r\n    }\r\n\r\n    //TODO get rid of this\r\n    getFieldProps(field, value) {\r\n        const fieldType = this._fieldsToRender[field].type ? this._fieldsToRender[field].type : \"text\";\r\n        const fields = [\"composite\", \"maintenance\"];\r\n        if (fields.includes(field)) {\r\n            return {\r\n                type: fieldType,\r\n                value\r\n            }\r\n        } else {\r\n            return {\r\n                type: fieldType\r\n            }\r\n        }\r\n    }\r\n\r\n    _shouldRender(fieldOptions, id) {\r\n        if (this._fieldsToRender[id].hasOwnProperty(fieldOptions)) {\r\n            let fieldProps = this._fieldsToRender[id][fieldOptions];\r\n            let props = Object.keys(fieldProps);\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (this._validationParams[prop] !== undefined) {\r\n                    for (let i = 0; i < fieldProps[prop].length; i++) {\r\n                        if (fieldOptions === \"allowedIf\") {\r\n                            if (fieldProps[prop][i] === this._validationParams[prop]) {\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        if (fieldOptions === \"notAllowedIf\") {\r\n                            if (fieldProps[prop][i] !== this._validationParams[prop]) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getLabelById = (id) => {\r\n        if (this.isAttrExists(id)) {\r\n            return this._fieldsToRender[id].label;\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport {RenderControls} from \"../controls/util-renderers\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./uploaded-image.module.scss\";\r\n\r\nexport default class UploadedImage extends React.Component {\r\n    render() {\r\n        const {src, className} = this.props;\r\n        const containerClasses = classNames(className, styles.container);\r\n        return (\r\n            <div className={containerClasses}>\r\n                <div className={styles.controls}>\r\n                    <RenderControls\r\n                        type={\"delete\"}\r\n                        onClick={() => this.props.onDelete()}\r\n                    />\r\n                </div>\r\n                <div className={styles.image_container}>\r\n                    <img\r\n                        className={styles.image}\r\n                        src={src}\r\n                        alt={\"Not loaded\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUploadedImage.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nUploadedImage.defaultProps = {\r\n    onDelete: () => {\r\n    },\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./upload-file-controls-hidden.module.scss\";\r\n\r\nexport default class UploadFileControlsHidden extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            files: null\r\n        };\r\n        this.submitRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const {uploadRef} = this.props;\r\n        const fileInputProps = this.getFileInputProps();\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <input\r\n                        ref={uploadRef}\r\n                        type=\"file\"\r\n                        onChange={this.onFilePick}\r\n                        className={styles.hidden}\r\n                        {...fileInputProps}\r\n                    />\r\n                    <input\r\n                        ref={this.submitRef}\r\n                        type=\"submit\"\r\n                        className={styles.hidden}\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFileInputProps = () => {\r\n        const {amount} = this.props;\r\n        if (amount > 1) {\r\n            return {multiple: true};\r\n        }\r\n        return {};\r\n    }\r\n\r\n    onFilePick = (e) => {\r\n        const filesLimit = this.props.amount;\r\n        const files = e.currentTarget.files;\r\n        const {maxFileSize} = this.props;\r\n        if (files.length > filesLimit) {\r\n            const message = `Total amount of images should not exceed ${filesLimit}`;\r\n            this.props.onError(message);\r\n        } else if (!this.checkFilesSize(files, maxFileSize)) {\r\n            const fileSizeMb = maxFileSize / 8 / 1024 / 1024;\r\n            const message = `File size should be less than ${fileSizeMb} Mb`;\r\n            this.props.onError(message);\r\n        } else {\r\n            this.setState(\r\n                {files: files},\r\n                () => this.submitRef.current.click()\r\n            );\r\n        }\r\n    };\r\n\r\n    checkFilesSize = (files, maxFileSize) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (files[i].size > maxFileSize) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const data = new FormData();\r\n        const files = this.state.files;\r\n        for (let i = 0; i < files.length; i++) {\r\n            data.append('files', files[i]);\r\n        }\r\n        this.props.onSubmit(data);\r\n    };\r\n}\r\n\r\nUploadFileControlsHidden.propTypes = {\r\n    uploadRef: PropTypes.object.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    amount: PropTypes.number,\r\n    onError: PropTypes.func,\r\n    maxFileSize: PropTypes.number\r\n};\r\n\r\nUploadFileControlsHidden.defaultProps = {\r\n    onAmountExceed: () => {},\r\n    amount: 1,\r\n    maxFileSize: 8 * 1024 * 1024\r\n};","import React from \"react\";\r\nimport {Button, Classes, Dialog, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ConfirmationPopup extends React.Component {\r\n    render() {\r\n        const {isOpen, title, icon, body, onClose, onConfirm, onCancel, confirmLabel, cancelLabel} = this.props;\r\n        return (\r\n            <Dialog\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n                title={title}\r\n                icon={icon}\r\n            >\r\n                <div className={Classes.DIALOG_BODY}>\r\n                    {body}\r\n                </div>\r\n                <div className={Classes.DIALOG_FOOTER}>\r\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                        <Button onClick={onConfirm}>\r\n                            {confirmLabel}\r\n                        </Button>\r\n                        <Button\r\n                            intent={Intent.DANGER}\r\n                            onClick={onCancel}\r\n                        >\r\n                            {cancelLabel}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nConfirmationPopup.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    icon: PropTypes.element,\r\n    body: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    onConfirm: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    confirmLabel: PropTypes.string,\r\n    cancelLabel: PropTypes.string\r\n};\r\n\r\nConfirmationPopup.defaultProps = {\r\n    isOpen: false,\r\n    title: \"\",\r\n    onClose: () => {},\r\n    onConfirm: () => {},\r\n    onCancel: () => {},\r\n    confirmLabel: \"Confirm\",\r\n    cancelLabel: \"Cancel\"\r\n};","import React from \"react\";\r\nimport {Button, Divider, Icon, Intent} from \"@blueprintjs/core\";\r\nimport UploadedImage from \"../uploaded-image/uploaded-image\";\r\nimport PropTypes from \"prop-types\";\r\nimport UploadFileControlsHidden from \"../upload-file-controls/upload-file-controls-hidden\";\r\nimport styles from \"./upload-display-section.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport ConfirmationPopup from \"../confirmation-popup/confirmation-popup\";\r\n\r\nexport default class UploadDisplaySection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isConfirmPopupOpen: false,\r\n            deletedFilename: \"\",\r\n        };\r\n\r\n        this.uploadRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const {buttonName, amount, files, onUpload, isUploading} = this.props;\r\n        const title = `${buttonName} (max amount: ${amount})`;\r\n        const confirmBody = \"It is a permanent operation. You will not be able to restore deleted image.\";\r\n        const maxFileSize = 8 * 1024 * 1024;\r\n        const buttonClasses = classNames({[styles.section]: files.length !== 0});\r\n        return (\r\n            <div>\r\n                <Button\r\n                    minimal\r\n                    loading={isUploading}\r\n                    className={buttonClasses}\r\n                    text={title}\r\n                    icon={<Icon icon={\"upload\"} intent={Intent.PRIMARY}/>}\r\n                    onClick={this.openFileDialog}\r\n                />\r\n                {\r\n                    files.map((file) => {\r\n                        return (\r\n                            <React.Fragment key={file.filename}>\r\n                                <Divider />\r\n                                <UploadedImage\r\n                                    className={styles.section}\r\n                                    src={file.base64Image}\r\n                                    onDelete={() => this.toggleConfirmDialog(file.filename)}\r\n                                />\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <UploadFileControlsHidden\r\n                    onSubmit={onUpload}\r\n                    uploadRef={this.uploadRef}\r\n                    amount={amount}\r\n                    onError={this.props.onError}\r\n                    maxFileSize={maxFileSize}\r\n                />\r\n                <ConfirmationPopup\r\n                    isOpen={this.state.isConfirmPopupOpen}\r\n                    onClose={this.toggleConfirmDialog}\r\n                    onConfirm={this.handleDeletion}\r\n                    onCancel={this.toggleConfirmDialog}\r\n                    title={\"Deletion confirmation\"}\r\n                    icon={<Icon icon={\"warning-sign\"} intent={Intent.DANGER}/>}\r\n                    body={confirmBody}\r\n                    confirmLabel={\"Delete\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleDeletion = () => {\r\n        this.props.onDelete(this.state.deletedFilename);\r\n        this.toggleConfirmDialog(\"\");\r\n    }\r\n\r\n    toggleConfirmDialog = (filename) => {\r\n        this.setState((prev) => ({\r\n            isConfirmPopupOpen: !prev.isConfirmPopupOpen,\r\n            deletedFilename: filename\r\n        }));\r\n    };\r\n\r\n\r\n    openFileDialog = () => {\r\n        this.uploadRef.current.click();\r\n    };\r\n}\r\n\r\nUploadDisplaySection.propTypes = {\r\n    buttonName: PropTypes.string,\r\n    isUploading: PropTypes.bool,\r\n    amount: PropTypes.number,\r\n    files: PropTypes.arrayOf(PropTypes.object),\r\n    onError: PropTypes.func,\r\n    onUpload: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nUploadDisplaySection.defaultProps = {\r\n    isUploading: false,\r\n    buttonName: \"Upload image\",\r\n    amount: 1,\r\n    files: [],\r\n    onUpload: () => {\r\n    },\r\n    onDelete: () => {\r\n    },\r\n    onAmountExceed: () => {\r\n    }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport UpdatedInfo from \"../../updated-info/updated-info\";\r\nimport styles from \"./report-tab.module.scss\";\r\nimport Timeline from \"../../timeline/timeline\";\r\nimport {Divider} from \"@blueprintjs/core\";\r\nimport HealthIndicatorsMinimal from \"../../health-indicators-minimal/health-indicators-minimal\";\r\nimport RisksList from \"../../risks-list/risks-list\";\r\nimport TwoItemsLiner from \"../../two-items-liner/two-items-liner\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {\r\n    HealthIndicatorsShape,\r\n    MilestoneShape,\r\n    ProjectDefaults, ReportImagesTypes, ReportSnapshotsTypes, ReportTabTypes,\r\n    RiskMinimal,\r\n} from \"../../../util/custom-types\";\r\nimport RqsReportList from \"../../rqs-report-list/rqs-report-list\";\r\nimport ReportQuillsForm from \"./report-quills-form/report-quills-form\";\r\nimport ExportMenu from \"./export-menu/export-menu\";\r\nimport {getIndicatorsColor} from \"../../../util/transform-funcs\";\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport UploadDisplaySection from \"../../upload-display-section/upload-display-section\";\r\n\r\nexport default class ReportTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.amount = 5;\r\n    }\r\n\r\n    render() {\r\n        const {loading} = this.props.report.tab;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            this.projectId = this.props.defaults.payload.projectId;\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const {updatedOn, projectName, projectManager} = this.props.report.tab.payload;\r\n            const {payload: data, loading: risksLoading} = this.props.risks;\r\n            const {payload: milestones, loading: milestonesLoading} = this.props.milestones;\r\n            const {payload: indicators, loading: indLoading} = this.props.indicators;\r\n            const risksObj = this.getRiskObj(data);\r\n            const {loading: rqsLoading, payload: rqsPayload} = this.props.rqs;\r\n            const {loading: userReportsLoading, payload: userReportsPayload} = this.props.userReports;\r\n            const images = this.props.report.images.payload;\r\n            const imagesLoading = this.props.report.images.loading;\r\n            const snapshots = this.props.report.snapshots.payload;\r\n            const snapshotLoading = this.props.report.snapshots.loading;\r\n            const {isExportInProcess} = this.props;\r\n            return (\r\n                <>\r\n                    <CustomCard>\r\n                        <div className={styles.project_info}>\r\n                            <UpdatedInfo date={updatedOn}/>\r\n                            <TwoItemsLiner first={\"Project Name:\"} second={<b>{projectName}</b>}/>\r\n                            <TwoItemsLiner first={\"Project manager:\"} second={<b>{projectManager}</b>}/>\r\n                        </div>\r\n                        <div className={styles.export_button}>\r\n                            <ExportMenu\r\n                                projectId={this.projectId}\r\n                                onClickElement={this.props.downloadPptReport}\r\n                                snapshots={snapshots}\r\n                                snapshotLoading={snapshotLoading}\r\n                                buttonLoading={isExportInProcess}\r\n                            />\r\n                        </div>\r\n                        {indLoading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <HealthIndicatorsMinimal\r\n                                    indicators={indicators.statuses.current}\r\n                                    className={styles.health_minimal}\r\n                                />\r\n                            )\r\n                        }\r\n                        {milestonesLoading || indLoading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <Timeline\r\n                                    milestones={milestones}\r\n                                    status={getIndicatorsColor(indicators.statuses.current.overall)}\r\n                                />\r\n                            )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        {userReportsLoading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <ReportQuillsForm\r\n                                    data={userReportsPayload}\r\n                                    onCancel={this.handleUserReportReload}\r\n                                    onSubmit={this.handleSaveData}\r\n                                    blocked={!renderHelper.displayOrNot(\"controls\")}\r\n                                />\r\n                            )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <h3>Scope Definition</h3>\r\n                        {rqsLoading\r\n                            ? <LoadingSpinner/>\r\n                            : <RqsReportList data={rqsPayload} className={styles.scope_definition}/>\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <h3>Risks</h3>\r\n                        <Divider/>\r\n                        {risksLoading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <div>\r\n                                    <div className={styles.risk_block}>\r\n                                        <h4 className={styles.red}>High</h4>\r\n                                        <RisksList data={risksObj.high}/>\r\n                                    </div>\r\n                                    <div className={styles.risk_block}>\r\n                                        <Divider/>\r\n                                        <h4 className={styles.orange}>Moderate</h4>\r\n                                        <RisksList data={risksObj.mod}/>\r\n                                    </div>\r\n                                    <div className={styles.risk_block}>\r\n                                        <Divider/>\r\n                                        <h4 className={styles.green}>Low</h4>\r\n                                        <RisksList data={risksObj.low}/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <UploadDisplaySection\r\n                            buttonName={\"Upload image\"}\r\n                            isUploading={imagesLoading}\r\n                            amount={this.amount}\r\n                            files={images}\r\n                            onUpload={(formData) => this.props.uploadImages(formData, this.projectId)}\r\n                            onDelete={(filename) => this.props.deleteImage(filename, this.projectId)}\r\n                            onError={this.handleOnAmountExceed}\r\n                        />\r\n                    </CustomCard>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleOnAmountExceed = (message) => {\r\n        this.props.pushWarningToast(message);\r\n    };\r\n\r\n    onUserReportSaveFactory(type, submitFunc) {\r\n        return function (value) {\r\n            submitFunc({\r\n                type: type,\r\n                data: value\r\n            })\r\n        }\r\n    }\r\n\r\n    getRiskObj(risks) {\r\n        let riskObj = {};\r\n        riskObj.low = risks.filter(risk => risk.rating > 0 && risk.rating < 6);\r\n        riskObj.mod = risks.filter(risk => risk.rating >= 6 && risk.rating <= 10);\r\n        riskObj.high = risks.filter(risk => risk.rating > 10);\r\n        return riskObj;\r\n    }\r\n\r\n    handleSaveData = (data) => {\r\n        this.props.saveData(this.projectId, data);\r\n    };\r\n\r\n    handleUserReportReload = () => {\r\n        this.props.reloadUserReports(this.projectId);\r\n    };\r\n}\r\n\r\nReportTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    milestones: PropTypes.shape({\r\n        payload: PropTypes.arrayOf(MilestoneShape).isRequired,\r\n        loading: PropTypes.bool,\r\n    }),\r\n    indicators: PropTypes.shape({\r\n        payload: HealthIndicatorsShape,\r\n        loading: PropTypes.bool,\r\n    }),\r\n    risks: PropTypes.shape({\r\n        payload: PropTypes.arrayOf(RiskMinimal).isRequired,\r\n        loading: PropTypes.bool,\r\n    }),\r\n    reloadUserReports: PropTypes.func.isRequired,\r\n    saveData: PropTypes.func.isRequired,\r\n    downloadPptReport: PropTypes.func,\r\n    uploadImages: PropTypes.func,\r\n    deleteImage: PropTypes.func,\r\n    report: PropTypes.shape({\r\n        tab: ReportTabTypes,\r\n        images: ReportImagesTypes,\r\n        snapshots: ReportSnapshotsTypes\r\n    }),\r\n    isExportInProcess: PropTypes.bool,\r\n};","import {connect} from 'react-redux';\r\nimport {loadReport, resetReport} from \"../../../actions/pws/report/report-tab\";\r\nimport {deleteReportImage, resetReportImages, uploadReportImages} from \"../../../actions/pws/report/images\";\r\nimport ReportTab from \"./report-tab\";\r\nimport {resetRequirements} from \"../../../actions/pws/requirements-tab\";\r\nimport {loadUserReports, resetUserReports, saveUserReport} from \"../../../actions/pws/user-reports\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\nimport {exportPpt} from \"../../../actions/pws/ppt-export\";\r\nimport {milestonesReset} from \"../../../actions/pws/milestones\";\r\nimport {healthReset} from \"../../../actions/pws/health-indicators\";\r\nimport {risksSummaryReset} from \"../../../actions/pws/risks/risks-summary\";\r\nimport {addWarningToast} from \"../../../actions/app/toaster\";\r\nimport {snapshotReset} from \"../../../actions/pws/report/snapshots\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        report: state.pws.reportTab,\r\n        rqs: state.pws.requirementsTab,\r\n        userReports: state.pws.userReports,\r\n        milestones: state.pws.milestones,\r\n        indicators: state.pws.healthIndicators,\r\n        risks: state.pws.risks.summary,\r\n        pptLoading: state.pws.pptReport.loading,\r\n        isExportInProcess: state.pws.pptReport.loading,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadReport(projectId)),\r\n        resetData: () => {\r\n            dispatch(resetReport());\r\n            dispatch(resetReportImages());\r\n            dispatch(snapshotReset());\r\n            dispatch(resetRequirements());\r\n            dispatch(resetUserReports());\r\n            dispatch(milestonesReset());\r\n            dispatch(healthReset());\r\n            dispatch(risksSummaryReset());\r\n        },\r\n        saveData: (projectId, data) => dispatch(saveUserReport(projectId, data)),\r\n        reloadUserReports: (projectId) => dispatch(loadUserReports(projectId)),\r\n        downloadPptReport: (projectId, pptType, snapshotId) => dispatch(exportPpt(projectId, pptType, snapshotId)),\r\n        uploadImages: (files, projectId) => dispatch(uploadReportImages(projectId, files)),\r\n        deleteImage: (filename, projectId) => dispatch(deleteReportImage(projectId, filename)),\r\n        pushWarningToast: (message) => dispatch(addWarningToast(message))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(ReportTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {nullToEmptyStr} from '../../util/transform-funcs';\r\nimport {isUrl} from '../../util/util';\r\nimport styles from \"./field-value.module.scss\";\r\nimport classNames from 'classnames';\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\n\r\n\r\nexport default class FieldValue extends React.PureComponent {\r\n    render() {\r\n        let {value, className, useName, ...other} = this.props;\r\n        const classes = classNames(styles.word_wrap, className);\r\n        value = nullToEmptyStr(value);\r\n        const field = isUrl(value)\r\n            ? (\r\n                <SafeUrl\r\n                    url={value}\r\n                    label={useName}\r\n                />\r\n            )\r\n            : value;\r\n        return (\r\n            <div className={classes} {...other}>\r\n                {field}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nFieldValue.propTypes = {\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.bool,\r\n    ]),\r\n    useName: PropTypes.string,\r\n    className: PropTypes.string,\r\n};\r\n\r\nFieldValue.defaultProps = {\r\n    value: '',\r\n    useName: 'Click here',\r\n    className: ''\r\n};\r\n","import {WorkspaceStatus, ProjectTypes} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    productName: {label: \"Product Name\"},\r\n    projectDescription: {label: \"Project Description\"},\r\n    projectManager: {label: \"Project Manager\"},\r\n    businessLineManager: {label: \"Business Line Manager\"},\r\n    productLineManager: {label: \"Product Line Manager\"},\r\n    projectState: {label: \"Project State\"},\r\n    projectRigor: {label: \"Project Rigor\"},\r\n    charter: {label: \"Charter\"},\r\n    orBusinessPlan: {label: \"OR Business Plan\"},\r\n    updatedBusinessPlan: {label: \"Updated Business Plan\"},\r\n    drChecklist: {label: \"Tailoring\"},\r\n    lessonsLearned: {label: \"Lessons learned\"},\r\n    sponsor: {label: \"Sponsor\"},\r\n    businessDivision: {label: \"Business Division\"},\r\n    businessUnit: {label: \"Business Unit\"},\r\n    productLine: {label: \"Product Line\"},\r\n    workspaceState: {label: \"PWS State\"},\r\n    projectType: {label: \"Project Type\"},\r\n    oemPartner: {\r\n        label: \"OEM Partner\",\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OEM_PRODUCT],\r\n        }\r\n    },\r\n    disabledTime: {\r\n        label: \"Disabled Time\",\r\n        allowedIf: {\r\n            workspaceState: [WorkspaceStatus.DISABLED]\r\n        },\r\n    },\r\n    executiveSummary: {label: \"Executive Status Summary\"},\r\n    redFlag: {label: \"Red Flag\"},\r\n    orangeFlag: {label: \"Orange Flag\"},\r\n    greenFlag: {label: \"Green Flag\"},\r\n    details: {label: \"Current Project Details\"},\r\n    collabSite: {label: \"Project Collaboration Site\"},\r\n    epmPwaSite: {\r\n        label: \"EPM project PWA Site:\",\r\n        allowedIf: {\r\n            isEpm: [true],\r\n        }\r\n    },\r\n    documentationRepo: {label: \"Project Documentation Repository\"},\r\n    defectsReportSite: {\r\n        label: \"Defects Report Site\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER],\r\n        }\r\n    },\r\n    activeRisks: {label: \"Active Risks\"},\r\n    activeActions: {label: \"Active Actions\"},\r\n    epmLastSavedDate: {\r\n        label: \"EPM Last Saved\",\r\n        allowedIf: {\r\n            isEpm: [true],\r\n        }\r\n    },\r\n    pwsLastUpdatedDate: {label: \"PWS Last Updated\"},\r\n    pwsLastUpdatedBy: {label: \"PWS Last Updated By\"},\r\n};","import {Icon, Intent} from \"@blueprintjs/core\";\r\nimport React from \"react\";\r\n\r\nexport default class HelpIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Icon\r\n                icon={\"help\"}\r\n                intent={Intent.PRIMARY}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n};","export const healthStatusHelp = {\r\n    title: \"Status\",\r\n    content: \"Your project faces some issues impacting Dates, Cost, Content or Quality:</br>\" +\r\n        \"is it worth a \\\"Y\\\", worth a \\\"R\\\" ? </br></br>\" +\r\n        \"Some hints, as there is no defined policy; </br></br>\" +\r\n        \"If the variance is small you may remain \\\"G\\\"; examples:</br>\" +\r\n        \"<ul>\" +\r\n        \"<li>an intermediate milestone (not DR4 nor DR5) shifts less than 5% </li>\" +\r\n        \"<li>costs increase less than 5%</li>\" +\r\n        \"<li>nice-to-have feature is de-scoped</li>\" +\r\n        \"</ul>\" +\r\n        \"</br>\" +\r\n        \"else consider following criteria : </br>\" +\r\n        \"<ul>\" +\r\n        \"    <li>is an external customer impacted ? </li>\" +\r\n        \"    <li>is another project impacted ?</li>\" +\r\n        \"    <li>is business impacted ? </li>\" +\r\n        \"</ul>\" +\r\n        \"if answer is 'no' to all of them, then \\\"Y\\\" is the right value, else \\\"R\\\" applies; </br></br>\" +\r\n        \"Quality : consider test coverage as well as ecma backlog; if test coverage (passed OK) < 100% then \\\"Y\\\" or \\\"R\\\", whatever the backlog;</br></br>\" +\r\n        \"If ecma backlog higher than target, then \\\"Y\\\" or \\\"R\\\" (difference > 10%)\"\r\n};\r\n\r\nexport const scheduleAdherenceHelp = {\r\n    title: \"KPI Goals - Schedule\",\r\n    content: \"Schedule Variance = (Actual/Forecast DR4 date - Actual DR1 date) / (Committed DR4 date - Actual DR1 date)\"\r\n};\r\n\r\nexport const contentAdherenceHelp = {\r\n    title: \"Ratio of requirements committed at DR1 and delivered unchanged\",\r\n    content: \"Content Adherence = (<u># Requirements committed (baseline) at DR1</u> - <u>Current # of baselined requirements \" +\r\n        \"removed after DR1</u> - <u>Current # of baseline requirements modified after DR1)</u> / <u># Requirements committed (baseline) \" +\r\n        \"at DR1</u> * 100%\"\r\n};\r\n\r\nexport const rqsChangeHelp = {\r\n    title: \"Ratio of changes compared to committed requirements\",\r\n    content: \"Requirements Change = <u>(Current # of requirements added after DR1 + Current # of baselined requirements \" +\r\n        \"removed after DR1</u> + <u>Current # of baselined requirements modified after DR1)</u> /  <u># Requirements committed (baseline) \" +\r\n        \"at DR1</u> * 100%\"\r\n};\r\n\r\nexport const costAdherenceHelp = {\r\n    title: \"Cost Adherence\",\r\n    content: \"Cost-variance = (costs realized at DR4) / (costs up to DR4 committed at DR1) <br/><br/>\" +\r\n        \"Included: effort, Opex & Capex (see Cost tab)\"\r\n};\r\n\r\nexport const qualityKpiHelp = {\r\n    title: \"Quality (ecma CRs)\",\r\n    content: \"This indicator represents the quality of the product, i.e. the defects that are still open; This includes:\" +\r\n        \"<ul>\" +\r\n        \"<li>New Open Defects (dedicated KPI)</li>\" +\r\n        \"<li>Defects found on another release, needing a fix on this release (reports)</li>\" +\r\n        \"</ul>\" +\r\n        \"<u>Actual value</u>: current NB of CRs, if date > DR4 it is the NB of CRs at DR4\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"<u>Objective</u>: DR4 target, NB of CRs\"\r\n}\r\n\r\nexport const newOpenDefectsHelp = {\r\n    title: \"New Open Defects (ecma CRs)\",\r\n    content: \"This indicator is part of the quality of the product, i.e. the defects submitted on this project \" +\r\n        \"(see ‘metrics scope’ in Info TAB); reports are not included; for ‘OT’, related component CRs are included\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"<u>Actual value</u> : current NB of CRs, if date > DR4 it is the NB of CRs at DR4\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"<u>Objective</u> : DR4 target, NB of CRs\",\r\n}\r\n\r\nexport const backlogReductionHelp = {\r\n    title: \"Backlog Reduction (ecma CRs)\",\r\n    content: \"This indicator represents the contribution of the project to the quality improvement of the product; \" +\r\n        \"in other words the defects in the backlog at DR1 on this project (all releases), that are no longer in the backlog \" +\r\n        \"at DR4 AND that have been closed by this project (see ‘metrics scope’ in Info TAB);\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"<u>Actual value</u> : current NB of CRs, if date > DR4 it is the NB of CRs at DR4\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"<u>Objective</u> : DR4 target, NB of CRs\"\r\n}\r\n\r\nexport const testExecutionHelp = {\r\n    title: \"Test execution\",\r\n    content: \"Provide number (or ratio) of tests executed (actual value), as well as the objective;\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"Actual value can be a link to testrail report;\" +\r\n        \"<br/>\" +\r\n        \"In case you need to split test coverage to several topics (or campaigns) add a line \" +\r\n        \"('green plus' button is displayed when entering edition mode)\"\r\n};\r\n\r\nexport const testPassHelp = {\r\n    title: \"Test pass\",\r\n    content: \"Provide number (or ratio) of tests successfully executed (actual value), as well as the objective;\" +\r\n        \"<br/>\" +\r\n        \"<br/>\" +\r\n        \"Actual value can be a link to testrail report;\" +\r\n        \"<br/>\" +\r\n        \"In case you need to split test coverage to several topics (or campaigns) add a line \" +\r\n        \"('green plus' button is displayed when entering edition mode)\"\r\n};\r\n\r\nexport const updBusinessPlanCommentHelp = {\r\n    title: \"Updated Business Plan Comment\",\r\n    content: \"Where is this info provided ? Can be an update of the OR Business Plan, a new dedicated document, \" +\r\n        \"some slides in DR1 (OBR, DR3 …) meeting minutes …\"\r\n}\r\n\r\nexport const tailoringCommentHelp = {\r\n    title: \"Tailoring Comment\",\r\n    content: \"Where is this info provided ? Can be a dedicated tailored DR-checklist, \" +\r\n        \"a chapter in the Charter or some slides in DR0 (DR1, OBR, …) meeting minutes …\"\r\n}\r\n\r\nexport const lessonsLearnedHelp = {\r\n    title: \"Lessons Learned Comment\",\r\n    content: \"Where is this info provided ? Can be a dedicated document, some slides in DR0 (DR1, OBR, DR4 …) meeting minutes …\" +\r\n        \"<br/>\" +\r\n        \"When project starts, provide the link to the lessons learned used to improve the process ; when the project ends, \" +\r\n        \"provide the links of the lessons learned you want to share, that other Releases (or projects) may use\"\r\n}\r\n\r\nexport const projectPlanHelp = {\r\n    title: \"Project Plan Comment\",\r\n    content: \"Where is this info provided ? Can be a dedicated document, some slides in DR0 (DR1, OBR, …) meeting minutes …\"\r\n}\r\n\r\nexport const launchingPlanHelp = {\r\n    title: \"Launching Plan Comment\",\r\n    content: \"Where is this info provided ? Can be a dedicated document, some slides in DR0 (DR1, OBR, …) meeting minutes …\"\r\n}\r\n\r\nexport const defectsBacklogChartHelp = {\r\n    title: \"Defects backlog (ecma)\",\r\n    content: \"This indicator represents the remaining work i.e. the ‘to be closed’ defects; reports are included; \" +\r\n        \"CRs that are targeted on “MDs” are included when project is a Maintenance project\" +\r\n        \"<br/>\" +\r\n        \"Information TAB provides the target (milestone and value) as well as the Metrics' scope\"\r\n};\r\n\r\nexport const newOpenDefectsChartHelp = {\r\n    title: \"New Open Defects (ecma CRs)\",\r\n    content: \"This indicator is part of the quality of the product, i.e. the defects submitted on this project \" +\r\n        \"(see ‘metrics scope’ in Info TAB); reports are not included; for ‘OT’, related component CRs are included\"\r\n};\r\n\r\nexport const blcDashboardHelp = {\r\n    title: \"BLC Dashboard\",\r\n    content: \"Values :<br>\" +\r\n        \"0 (no feedback), 1 (red), 5 (orange) and 8 (green)<br>\" +\r\n        \" <br>\" +\r\n        \" Some examples<br>\" +\r\n        \" Documents:<br>\" +\r\n        \" - info not available (either dedicated document or DR contribution) : red;<br>\" +\r\n        \" - almost all info available : green;<br>\" +\r\n        \" - one major info missing : yellow.<br>\" +\r\n        \" <br>\" +\r\n        \" Accountability (PM or PCT) :<br>\" +\r\n        \" - decisions are not by-passed by manager : green;<br>\" +\r\n        \" - decisions are cancelled by X (including by escalation) : red<br>\" +\r\n        \" <br>\" +\r\n        \" Lessons Learned: <br>\" +\r\n        \" - not recorded : red;<br>\" +\r\n        \" - recorded and taken into account : green;<br>\" +\r\n        \" - recorded but not taken into account : orange.<br>\" +\r\n        \" <br>\" +\r\n        \"Sales &amp; Marketing provides feedback on Business Plan and Launch Plan;<br>\" +\r\n        \" PMO-Quality provides feedback on Opportunity Review, Charter, Project Management Plan and Business Plan.\"\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./tooltip-content.module.scss\";\r\n\r\nexport default class TooltipContent extends React.PureComponent {\r\n    render() {\r\n        const {title, content} = this.props;\r\n        return (\r\n            <div className={styles.tooltip_style}>\r\n                <h4>{title}</h4>\r\n                <p dangerouslySetInnerHTML={{__html: content}}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nTooltipContent.propTypes = {\r\n    title: PropTypes.string,\r\n    content: PropTypes.string\r\n};\r\n\r\nTooltipContent.defaultProps = {\r\n    title: '',\r\n    content: '',\r\n};","import * as Yup from \"yup\";\r\nimport {ValidationErrors} from \"../../util/constants\";\r\n\r\nexport default Yup.object().shape({\r\n    comments: Yup.object().shape({\r\n        cost: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n        overall: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n        quality: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n        schedule: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n        scope: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n    })\r\n});\r\n","import React from \"react\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport {HTMLTable, Position, Tooltip} from \"@blueprintjs/core\";\r\nimport styles from \"./health-indicators.module.scss\";\r\nimport StatusIndicator from \"../status-indicator/status-indicator\";\r\nimport PropTypes from \"prop-types\";\r\nimport EditSaveControls from \"../controls/edit-save-controls/edit-save-controls\";\r\nimport {dateFormatToString, getIndicatorsColor} from \"../../util/transform-funcs\";\r\nimport {Field, Formik} from \"formik\";\r\nimport HelpIcon from \"../help-icon/help-icon\";\r\nimport {healthStatusHelp} from \"../../util/global-helps\";\r\nimport TooltipContent from \"../tooltip-content/tooltip-content\";\r\nimport {FieldsToRenderShape, HealthIndicatorsShape} from \"../../util/custom-types\";\r\nimport FormikInput from \"../controls/util-renderers\";\r\nimport Comment from \"../comment/comment\";\r\nimport {Messages} from \"../../util/constants\";\r\nimport validationSchema from \"./validation-schema\";\r\nimport OnSubmitValidationError from \"../formik-onsubmit-validator\";\r\n\r\nexport default class HealthIndicators extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editStatusMode: false,\r\n            editCommentMode: false,\r\n        };\r\n\r\n        this.onClickEditStatus = this.onClickEditStatus.bind(this);\r\n        this.onClickEditComment = this.onClickEditComment.bind(this);\r\n    }\r\n\r\n    submitForm = null;\r\n\r\n    bindFormSubmission = (formikSubmitForm) => {\r\n        this.submitForm = formikSubmitForm;\r\n    };\r\n\r\n    onClickEditStatus = () => {\r\n        this.setState(\r\n            (prevState) => ({editStatusMode: !prevState.editStatusMode})\r\n        )\r\n    };\r\n\r\n    onClickEditComment = () => {\r\n        this.setState(\r\n            (prevState) => ({editCommentMode: !prevState.editCommentMode})\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const {isSummaryMode, indicators, onIndicatorsSubmit, onCommentsSubmit} = this.props;\r\n        return (\r\n            <Formik\r\n                isInitialValid\r\n                onSubmit={(values, formikActions) => {\r\n                    formikActions.setSubmitting(false);\r\n                    if (this.state.editStatusMode) {\r\n                        onIndicatorsSubmit(values);\r\n                    } else if (this.state.editCommentMode) {\r\n                        onCommentsSubmit(values);\r\n                    }\r\n                }}\r\n                initialValues={{\r\n                    ...indicators\r\n                }}\r\n                validationSchema={\r\n                    validationSchema\r\n                }\r\n                render={\r\n                    (formikProps) => {\r\n                        this.bindFormSubmission(formikProps.submitForm);\r\n                        return (this.getHealthIndicatorsTable(formikProps.values, isSummaryMode))\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    getHealthIndicatorsTable = (values, isSummaryMode) => {\r\n        const {prevStatusSet, currentStatusSet} = values;\r\n        const {onCancel, fieldsToRender, blocked} = this.props;\r\n        const isStatusControlsShown = !isSummaryMode && !blocked && !this.state.editCommentMode;\r\n        const isCommentsControlsShown = !this.state.editStatusMode && !blocked;\r\n        const prevDate = dateFormatToString(new Date(prevStatusSet));\r\n        const currentDate = dateFormatToString(new Date(currentStatusSet));\r\n        return (\r\n            <>\r\n                <HTMLTable\r\n                    striped\r\n                    className={styles.health_table}\r\n                >\r\n                    <colgroup>\r\n                        <col className={styles.status_col}/>\r\n                        <col className={styles.prev_column}/>\r\n                        <col className={styles.cur_column}/>\r\n                        {isSummaryMode || <col/>}\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <FieldName name={\"Status\"}/>\r\n                            <Tooltip\r\n                                content={\r\n                                    (<TooltipContent\r\n                                        title={healthStatusHelp.title}\r\n                                        content={healthStatusHelp.content}\r\n                                    />)\r\n                                }\r\n                                position={Position.RIGHT}\r\n                            >\r\n                                <HelpIcon className={styles.help_icon}/>\r\n                            </Tooltip>\r\n                            {\r\n                                isStatusControlsShown &&\r\n                                <EditSaveControls\r\n                                    smallSize\r\n                                    className={styles.inline_block}\r\n                                    editMode={this.state.editStatusMode}\r\n                                    onClick={this.onClickEditStatus}\r\n                                    onSubmit={this.submitForm}\r\n                                    onCancel={onCancel}\r\n                                />\r\n                            }\r\n                        </th>\r\n                        <th className={styles.column_align_center}>\r\n                            <FieldName name={\"Previous\"}/><br/>\r\n                            <FieldName name={prevDate}/>\r\n                        </th>\r\n                        <th className={styles.column_align_center}>\r\n                            <FieldName name={\"Current \"}/><br/>\r\n                            <FieldName name={currentDate}/>\r\n                        </th>\r\n\r\n                        {\r\n                            isSummaryMode ||\r\n                            <th className={styles.column_align_center}>\r\n                                <FieldName name={\"Comments\"}/>\r\n                                {\r\n                                    isCommentsControlsShown &&\r\n                                    <EditSaveControls\r\n                                        smallSize\r\n                                        className={styles.inline_block}\r\n                                        editMode={this.state.editCommentMode}\r\n                                        onClick={this.onClickEditComment}\r\n                                        onCancel={onCancel}\r\n                                        onSubmit={this.submitForm}\r\n                                    />\r\n                                }\r\n                            </th>\r\n                        }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        Object.keys(fieldsToRender).map((field) => {\r\n                            const label = fieldsToRender[field].label;\r\n                            const prevValue = values.statuses.prev ? values.statuses.prev[field] : \"\";\r\n                            const currentValue = values.statuses.current ? values.statuses.current[field] : \"\";\r\n                            const comment = values.comments[field];\r\n                            const immutableIndicatorName = \"statuses.prev.\" + field;\r\n                            const indicatorName = \"statuses.current.\" + field;\r\n                            const commentName = \"comments.\" + field;\r\n                            return (\r\n                                <tr key={field}>\r\n                                    <td>\r\n                                        <FieldName name={label}/>\r\n                                    </td>\r\n\r\n                                    {this.getImmutableIndicatorTd(prevValue, immutableIndicatorName, styles)}\r\n                                    {this.getIndicatorTd(currentValue, indicatorName, styles)}\r\n                                    {isSummaryMode || this.getCommentTd(comment, commentName, styles)}\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </HTMLTable>\r\n                <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    getCommentTd = (comment, name, styles) => {\r\n        if (this.state.editCommentMode) {\r\n            return (\r\n                <td>\r\n                    <FormikInput type=\"textarea\" name={name}/>\r\n                </td>\r\n            )\r\n        } else {\r\n            return (\r\n                <td className={styles.column_align_center}>\r\n                    <Comment value={comment}/>\r\n                </td>\r\n            )\r\n        }\r\n    };\r\n\r\n    getImmutableIndicatorTd = (status, name, styles) => (\r\n        this.getIndicatorTd(status, name, styles, false)\r\n    );\r\n\r\n    getIndicatorTd = (status, name, styles, isMutable = true) => {\r\n        if (isMutable && this.state.editStatusMode) {\r\n            const selectComponent = this.selectElement(name);\r\n            return (\r\n                <td className={styles.column_align_center}>\r\n                    {selectComponent}\r\n                </td>\r\n            )\r\n        } else {\r\n            const statusIndicator = getIndicatorsColor(status);\r\n            return (\r\n                <td className={styles.column_align_center}>\r\n                    <StatusIndicator\r\n                        className={styles.inline_block}\r\n                        status={statusIndicator}\r\n                    />\r\n                </td>\r\n            )\r\n        }\r\n    };\r\n\r\n    selectElement = (name) => {\r\n        return (\r\n            <Field component=\"select\" name={name}>\r\n                <option value=\"\">&nbsp;</option>\r\n                <option value=\"1\">Green</option>\r\n                <option value=\"2\">Yellow</option>\r\n                <option value=\"3\">Red</option>\r\n            </Field>\r\n        )\r\n    };\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid) {\r\n            this.props.onSubmitErrorCallback(Messages.FORM_SUBMIT_ERROR)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nHealthIndicators.propTypes = {\r\n    indicators: HealthIndicatorsShape.isRequired,\r\n    fieldsToRender: FieldsToRenderShape.isRequired,\r\n    isSummaryMode: PropTypes.bool,\r\n    onIndicatorsSubmit: PropTypes.func,\r\n    onCommentsSubmit: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    blocked: PropTypes.bool,\r\n    onSubmitErrorCallback: PropTypes.func\r\n};\r\n\r\nHealthIndicators.defaultProps = {\r\n    isSummaryMode: false,\r\n    onIndicatorsSubmit: () => {},\r\n    onCommentsSubmit: () => {},\r\n    onCancel: () => {},\r\n    blocked: false,\r\n    onSubmitErrorCallback: () => {}\r\n}","export default {\r\n    overall: {\r\n        label: 'Overall Project Status'\r\n    },\r\n    schedule: {\r\n        label: 'Schedule'\r\n    },\r\n    scope: {\r\n        label: 'Scope'\r\n    },\r\n    quality: {\r\n        label: 'Quality'\r\n    },\r\n    cost: {\r\n        label: 'Cost'\r\n    }\r\n}","import React from 'react';\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport styles from \"./legend.module.scss\";\r\n\r\nexport default class Legend extends React.PureComponent {\r\n    render() {\r\n        const className = this.props.className;\r\n        return (\r\n            <div className={className}>\r\n                <HTMLTable>\r\n                    <thead>\r\n                    <tr>\r\n                        <th colSpan={2}>\r\n                            <FieldName name=\"Legend\"/>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={styles.bkground_grey}>\r\n                            DR Committed\r\n                        </td>\r\n                        <td>Milestone date has passed and is 100% complete</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles.bkground_red}>\r\n                            DR Past Due\r\n                        </td>\r\n                        <td>Milestone date has passed but is not 100% complete</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </HTMLTable>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button, HTMLTable, Intent} from \"@blueprintjs/core\";\r\nimport moment from \"moment\";\r\nimport styles from \"./contributing-open-projects.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport {ContribTable} from \"../../util/custom-types\";\r\nimport {dateFormatToString} from \"../../util/transform-funcs\";\r\nimport Legend from \"../legend/legend\";\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\nimport {getProjectUrl} from \"../../util/util\";\r\nimport {ProjectStates} from \"../../util/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContributingOpenProjects extends React.Component {\r\n    render() {\r\n        const {maxDate, minDate, offer, contributed, fileExport} = this.props;\r\n        const {min, max} = this.getMinMaxDates(minDate, maxDate);\r\n        const monthsBetween = Math.ceil(max.diff(min, \"months\", true));\r\n\r\n        const {tdForYear, currentMonthIndex} = this.calculateTdsForYear(monthsBetween, min);\r\n        const years = Object.keys(tdForYear);\r\n\r\n        const monthsHeaderObjs = this.getMonthsHeader(monthsBetween, min);\r\n        const offers = this.getMilestonesPerMonthForProducts(monthsBetween, min, offer);\r\n        const products = this.getMilestonesPerMonthForProducts(monthsBetween, min, contributed);\r\n\r\n        const lastComplTh = styles.last_completed;\r\n        const cols = this.getColsForMonthsColumns(monthsBetween);\r\n\r\n        const offerThClasses = classNames(styles.offer_th, styles.offer_th_sticky);\r\n        const typeThClasses = classNames(styles.type_th, styles.type_th_sticky);\r\n        const approvedThClasses = classNames(lastComplTh, styles.last_completed_sticky);\r\n        return (\r\n            <div className={styles.table_container}>\r\n                <div className={styles.overflow_container}>\r\n                    <HTMLTable\r\n                        className={styles.table_class}\r\n                        bordered\r\n                    >\r\n                        <colgroup>\r\n                            <col className={styles.name_col_size}/>\r\n                            <col className={styles.type_size}/>\r\n                            <col className={styles.last_dr_col_size}/>\r\n                            {cols}\r\n                        </colgroup>\r\n                        <thead>\r\n                        <tr>\r\n                            <th\r\n                                colSpan={3}\r\n                                className={styles.sticky_colspan3}\r\n                            />\r\n                            {years.map((year, i) => {\r\n                                const yearThClasses = classNames(\r\n                                    {[styles.year_left_border]: i !== 0},\r\n                                    styles.th_style\r\n                                )\r\n                                return (\r\n                                    <th\r\n                                        key={year}\r\n                                        colSpan={tdForYear[year]}\r\n                                        className={yearThClasses}\r\n                                    >\r\n                                        {<FieldName name={year}/>}\r\n                                    </th>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={offerThClasses}>\r\n                                <FieldName name=\"Offer\"/>\r\n                            </th>\r\n                            <th className={typeThClasses}>\r\n                                <FieldName name=\"Type\"/>\r\n                            </th>\r\n                            <th className={approvedThClasses}>\r\n                                <FieldName name=\"Last completed (Approved DR)\"/>\r\n                            </th>\r\n                            {this.getMonthsTds(monthsHeaderObjs, min, currentMonthIndex)}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {Object.keys(offers).map(prjName => {\r\n                            const url = getProjectUrl(offers[prjName].projectId);\r\n                            const projectType = offers[prjName].projectType;\r\n                            const lastApproved = offers[prjName].lastApproved;\r\n                            const milestones = offers[prjName].milestones;\r\n\r\n                            const offerNameClasses = classNames(styles.offer_th_sticky, styles.word_wrap);\r\n                            const offerTypeClasses = classNames(styles.td_style, styles.type_th_sticky, styles.word_wrap);\r\n                            const offerApprovedClasses = classNames(styles.td_style, styles.last_completed_sticky);\r\n                            return (\r\n                                <tr key={prjName}>\r\n                                    <td className={offerNameClasses}>\r\n                                        <b>\r\n                                            <SafeUrl\r\n                                                url={url}\r\n                                                label={prjName}\r\n                                            />\r\n                                        </b>\r\n                                    </td>\r\n                                    <td className={offerTypeClasses}>\r\n                                        {projectType}\r\n                                    </td>\r\n                                    <td className={offerApprovedClasses}>\r\n                                        {lastApproved}\r\n                                    </td>\r\n                                    {this.renderMilestonesTds(milestones, currentMonthIndex)}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        {Object.keys(products).map(prjName => {\r\n                            const url = getProjectUrl(products[prjName].projectId);\r\n                            const productType = products[prjName].projectType;\r\n                            const lastApproved = products[prjName].lastApproved;\r\n                            const milestones = products[prjName].milestones;\r\n\r\n                            const productNameClasses = classNames(styles.products_name, styles.offer_th_sticky, styles.word_wrap);\r\n                            const productTypeClasses = classNames(styles.td_style, styles.type_th_sticky, styles.word_wrap);\r\n                            const productApprovedClasses = classNames(styles.td_style, styles.last_completed_sticky);\r\n                            return (\r\n                                <tr key={prjName}>\r\n                                    <td className={productNameClasses}>\r\n                                        <SafeUrl\r\n                                            url={url}\r\n                                            label={prjName}\r\n                                        />\r\n                                    </td>\r\n                                    <td className={productTypeClasses}>\r\n                                        {productType}\r\n                                    </td>\r\n                                    <td className={productApprovedClasses}>\r\n                                        {lastApproved}\r\n                                    </td>\r\n                                    {this.renderMilestonesTds(milestones, currentMonthIndex)}\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </HTMLTable>\r\n                </div>\r\n                <Legend className={styles.legend}/>\r\n                <Button\r\n                    minimal\r\n                    loading={fileExport}\r\n                    intent={Intent.PRIMARY}\r\n                    text={\"Export this grid\"}\r\n                    icon={\"export\"}\r\n                    onClick={this.props.onContribExport}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getColsForMonthsColumns(monthsBetween) {\r\n        return Array(monthsBetween).fill(0).map((x, i) =>\r\n            <col key={i} className={styles.mils_col_size}/>\r\n        )\r\n    }\r\n\r\n    getMinMaxDates(minDate, maxDate) {\r\n        return {\r\n            min: getDateIgnoringDay(minDate),\r\n            max: getDateIgnoringDay(maxDate).add(1, \"month\")\r\n        }\r\n\r\n        function getDateIgnoringDay(date) {\r\n            const x = moment(date);\r\n            let year = x.year();\r\n            let month = x.month();\r\n            return moment([year, month, 1]);\r\n        }\r\n    }\r\n\r\n    calculateTdsForYear(monthsBetween, min) {\r\n        let tdForYear = {};\r\n        let currentMonthIndex = -1;\r\n        const dateNow = moment();\r\n        const currentMonth = dateNow.month();\r\n        const currentYear = dateNow.year();\r\n        for (let i = 0; i < monthsBetween; i++) {\r\n            let startDate = min.clone();\r\n            let year = startDate.add(i, \"month\").year();\r\n            let month = startDate.month();\r\n            if (year in tdForYear) {\r\n                tdForYear[year] += 1;\r\n            } else {\r\n                tdForYear[year] = 1;\r\n            }\r\n\r\n            if (month === currentMonth && year === currentYear) {\r\n                currentMonthIndex = i;\r\n            }\r\n        }\r\n\r\n        return {tdForYear, currentMonthIndex};\r\n    }\r\n\r\n    getMilestonesPerMonth(monthsBetween, min, milestones, projectState) {\r\n        let tds = new Array(monthsBetween).fill(0);\r\n        const isCommitted = projectState.toUpperCase() === ProjectStates.COMMITTED;\r\n        let prevYear = -1;\r\n        for (let i = 0; i <= monthsBetween; i++) {\r\n            const startDate = min.clone();\r\n            const datePlusMonths = startDate.add(i, \"month\");\r\n            const month = datePlusMonths.month();\r\n            const year = datePlusMonths.year();\r\n            const filteredMils = milestones.filter((milestone) => {\r\n                const date = milestone.actualDate;\r\n                return (\r\n                    moment(date).year() === year && moment(date).month() === month\r\n                )\r\n            });\r\n\r\n            let needYearBorder = false;\r\n            if (year !== prevYear) {\r\n                prevYear = year;\r\n                if (i !== 0) {\r\n                    needYearBorder = true;\r\n                }\r\n            }\r\n\r\n            tds[i] = {milestones: filteredMils, needYearBorder, isCommitted}\r\n        }\r\n\r\n        return this.removeLastTdIfNoMils(tds);\r\n    }\r\n\r\n    removeLastTdIfNoMils(tds) {\r\n        if (tds.length <= 0) return tds;\r\n        if (!tds[tds.length - 1]) return tds;\r\n        if (!tds[tds.length - 1].milestones) return tds;\r\n        if (tds[tds.length - 1].milestones.length !== 0) return tds;\r\n\r\n        return tds.slice(0, tds.length - 1);\r\n    }\r\n\r\n    getMonthsHeader(monthsBetween, min) {\r\n        const offers = this.props.offer;\r\n        const {milestones, projectState} = offers[Object.keys(offers)[0]];\r\n        return this.getMilestonesPerMonth(monthsBetween, min, milestones, projectState);\r\n    }\r\n\r\n    getMilestonesPerMonthForProducts(monthsBetween, min, projectsData) {\r\n        let products = {};\r\n        const projects = projectsData || [];\r\n        for (let i = 0; i < projects.length; i++) {\r\n            const {projectName, projectId, projectType, milestones, projectState, lastApproved} = projects[i];\r\n            const lastApprovedLabel = lastApproved ? lastApproved.label : \"\";\r\n            products[projectName] = {\r\n                projectId,\r\n                projectType,\r\n                milestones: this.getMilestonesPerMonth(monthsBetween, min, milestones, projectState),\r\n                lastApproved: lastApprovedLabel\r\n            };\r\n        }\r\n\r\n        return products;\r\n    }\r\n\r\n    getMonthsTds(tds, min, currentMonthIndex) {\r\n        return tds.map((item, index) => {\r\n            const startDate = min.clone();\r\n            const monthLabel = startDate.add(index, \"month\").format(\"MMM\");\r\n            const year = startDate.year();\r\n            const classes = this.getMilsTdsClasses(currentMonthIndex, index, item.needYearBorder);\r\n            return (\r\n                <th key={`${monthLabel}_${year}`}\r\n                    className={classes}\r\n                >\r\n                    <FieldName name={monthLabel}/>\r\n                </th>\r\n            )\r\n        });\r\n    }\r\n\r\n    renderMilestonesTds(tds, currentMonthIndex) {\r\n        return tds.map((item, i) => {\r\n            const classes = this.getMilsTdsClasses(currentMonthIndex, i, item.needYearBorder);\r\n            const td = item.milestones;\r\n            if (td.length === 0) {\r\n                return <td key={i} className={classes}/>;\r\n            } else {\r\n                const currentDate = moment();\r\n                return (\r\n                    <td\r\n                        key={i}\r\n                        className={classes}\r\n                    >\r\n                        {td.map(mil => (this.renderMilestoneLabel(mil, item.isCommitted, currentDate)))}\r\n                    </td>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    getMilsTdsClasses(currentMonthIndex, tdIndex, isBorderNeeded) {\r\n        return classNames(\r\n            styles.td_style,\r\n            {[styles.current_month]: currentMonthIndex === tdIndex},\r\n            {[styles.year_left_border]: isBorderNeeded}\r\n        );\r\n    }\r\n\r\n    renderMilestoneLabel(milestone, isCommitted, currentDate) {\r\n        const {completion, actualDate} = milestone;\r\n        const isLate = currentDate.diff(moment(actualDate)) > 0;\r\n        let classes = classNames(\r\n            {[styles.bkground_red]: isLate && completion !== 100},\r\n            {[styles.bkground_grey]: isLate && completion === 100 && isCommitted},\r\n            [styles.word_wrap],\r\n            styles.label\r\n        );\r\n\r\n        const dateStr = milestone.actualDate;\r\n        const title = dateFormatToString(new Date(dateStr));\r\n        const key = milestone.label;\r\n        const label = milestone.label;\r\n        return (\r\n            <div\r\n                key={key}\r\n                className={classes}\r\n                title={title}\r\n            >\r\n                {label}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContributingOpenProjects.propTypes = {\r\n    ContribTable,\r\n    onContribExport: PropTypes.func,\r\n};\r\n\r\nContributingOpenProjects.defaultProps = {\r\n    onContribExport: () => {}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FieldName from \"../../../field-name/field-name\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./offer-product-title.module.scss\";\r\n\r\nexport default class OfferProductTitle extends React.PureComponent {\r\n    render() {\r\n        const {isOffer, isContrib, className} = this.props;\r\n        const classes = classNames(\r\n            className,\r\n            {[styles.red]: (!isOffer && !isContrib)}\r\n        );\r\n\r\n        let title = this.getTitle();\r\n        return (\r\n            <FieldName className={classes} name={title}/>\r\n        );\r\n    }\r\n\r\n    getTitle() {\r\n        const {isOffer, isContrib} = this.props;\r\n\r\n        if (isOffer) {\r\n            return \"Contributing Open Projects:\";\r\n        } else if (isContrib) {\r\n            return \"Your project has been identified as contributing to the following Offer Project or Solution Release:\";\r\n        } else {\r\n            return \"Your project has not been identified as contributing to an Offer\";\r\n        }\r\n    }\r\n}\r\n\r\nOfferProductTitle.propTypes = {\r\n    isOffer: PropTypes.bool,\r\n    isContrib: PropTypes.bool,\r\n    className: PropTypes.string,\r\n};\r\n\r\nOfferProductTitle.defaultProps = {\r\n    isOffer: false,\r\n    isContrib: false,\r\n    className: ''\r\n};","import React from 'react';\r\nimport Timeline from \"../../timeline/timeline\";\r\nimport FieldName from \"../../field-name/field-name\";\r\nimport FieldValue from \"../../field-value/field-value\";\r\nimport styles from './summary-tab.module.scss';\r\nimport classNames from 'classnames';\r\nimport summaryFieldsToRender from \"./fields\";\r\nimport CustomCard from \"../../card/custom-card.js\";\r\nimport HealthIndicators from \"../../health-indicators/health-indicators\";\r\nimport fieldsToRender from \"../../health-indicators/health-fields\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport {\r\n    ContribTable,\r\n    HealthIndicatorsShape,\r\n    MilestoneShape,\r\n    ProjectDefaults,\r\n    SummaryShape\r\n} from \"../../../util/custom-types\";\r\nimport ErrorBoundary from \"../../error-boundary/error-boundary\";\r\nimport ReactQuill from \"react-quill\";\r\nimport ContributingOpenProjects from \"../../contributing-projects-table/contributing-open-projects\";\r\nimport OfferProductTitle from \"../../contributing-projects-table/components/offer-product-title/offer-product-title\";\r\nimport {ProjectTypes} from \"../../../util/constants\";\r\nimport LastUpdated from \"../../last-updated/last-updated\";\r\nimport {getPropFromStringPath} from \"../../../util/util\";\r\nimport {getIndicatorsColor} from \"../../../util/transform-funcs\";\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Comment from \"../../comment/comment\";\r\n\r\nexport default class SummaryTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleContribExport = this.handleContribExport.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const {loading} = this.props.summaryData;\r\n        const {payload: validationParams} = this.props.defaults;\r\n        const renderHelper = new RenderFieldHelper(summaryFieldsToRender, validationParams);\r\n        if (loading) {\r\n            return (<LoadingSpinner/>);\r\n        } else {\r\n            const {general, status, links, pwsInfo} = this.props.summaryData.payload;\r\n            const milestones = this.props.milestones;\r\n            const healthIndicators = this.props.healthIndicators;\r\n            const contribTable = this.props.contribTable;\r\n\r\n            const overall = getPropFromStringPath(healthIndicators, \"payload.statuses.current.overall\");\r\n            const overallIndicator = getIndicatorsColor(overall);\r\n\r\n            let mainCardStyle = classNames(styles.data_fields);\r\n            let secondaryCardStyle = classNames(styles.secondary_card);\r\n            let contribTitleClasses = this.getContribTitleClasses(contribTable, validationParams.projectType);\r\n\r\n            return (\r\n                <div>\r\n                    <CustomCard>\r\n                        {\r\n                            milestones.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <Timeline\r\n                                            milestones={milestones.payload}\r\n                                            status={overallIndicator}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard className={styles.data_container}>\r\n                        <div className=\"left_part\">\r\n                            {\r\n                                Object.keys(general).map((obj) => {\r\n                                    const fieldLabel = renderHelper.getLabelById(obj);\r\n                                    const shouldRender = renderHelper.displayOrNot(obj);\r\n                                    return (\r\n                                        shouldRender && (\r\n                                            <div\r\n                                                key={obj}\r\n                                                className={mainCardStyle}\r\n                                            >\r\n                                                <FieldName name={fieldLabel}/>\r\n                                                {obj === \"projectDescription\"\r\n                                                    ? <Comment value={general[obj]}/>\r\n                                                    : <FieldValue value={general[obj]}/>\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={styles.right_part}>\r\n                            {healthIndicators.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <HealthIndicators\r\n                                            isSummaryMode\r\n                                            indicators={healthIndicators.payload}\r\n                                            fieldsToRender={fieldsToRender}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </CustomCard>\r\n                    <CustomCard className={styles.data_container}>\r\n                        <div className=\"left_part\">\r\n                            {\r\n                                Object.keys(status).map((obj) => {\r\n                                    const flagClassColor = this.getClassForFlag(obj);\r\n                                    const shouldRender = renderHelper.displayOrNot(obj);\r\n                                    const fieldLabel = renderHelper.getLabelById(obj);\r\n                                    const quillModules = {toolbar: null};\r\n                                    return (\r\n                                        shouldRender && (\r\n                                            <div\r\n                                                key={obj}\r\n                                                className={styles.executive_block}\r\n                                            >\r\n                                                <FieldName\r\n                                                    name={fieldLabel}\r\n                                                    className={flagClassColor}\r\n                                                />\r\n                                                <ReactQuill\r\n                                                    defaultValue={status[obj]}\r\n                                                    modules={quillModules}\r\n                                                    readOnly\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={styles.right_part}>\r\n                            {\r\n                                Object.keys(links).map((obj) => {\r\n                                    const shouldRender = renderHelper.displayOrNot(obj);\r\n                                    const label = renderHelper.getLabelById(obj);\r\n                                    const value = `${links[obj]}`;\r\n                                    return (\r\n                                        shouldRender && (\r\n                                            <div\r\n                                                key={obj}\r\n                                                className={secondaryCardStyle}\r\n                                            >\r\n                                                <FieldName name={label}/>\r\n                                                <FieldValue value={value}/>\r\n                                            </div>\r\n                                        )\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </CustomCard>\r\n                    <CustomCard className={styles.pws_data_container}>\r\n                        <div>\r\n                            {\r\n                                Object.keys(pwsInfo).map((obj) => {\r\n                                    const shouldRender = renderHelper.displayOrNot(obj);\r\n                                    const label = renderHelper.getLabelById(obj);\r\n                                    const value = pwsInfo[obj];\r\n                                    return (\r\n                                        shouldRender && (\r\n                                            <div\r\n                                                key={obj}\r\n                                                className={styles.data_fields}\r\n                                            >\r\n                                                <FieldName name={label}/>\r\n                                                {this.renderHelper(obj, value)}\r\n                                            </div>\r\n                                        )\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        {contribTable.loading\r\n                            ? (<LoadingSpinner/>)\r\n                            : (\r\n                                <>\r\n                                    <OfferProductTitle\r\n                                        className={contribTitleClasses}\r\n                                        isOffer={validationParams.projectType === ProjectTypes.OFFER}\r\n                                        isContrib={!!contribTable.payload.offer}\r\n                                    />\r\n                                    {contribTable.payload.offer &&\r\n                                    <ErrorBoundary>\r\n                                        <ContributingOpenProjects\r\n                                            offer={contribTable.payload.offer}\r\n                                            contributed={contribTable.payload.products}\r\n                                            minDate={contribTable.payload.minDate}\r\n                                            maxDate={contribTable.payload.maxDate}\r\n                                            onContribExport={this.handleContribExport}\r\n                                            fileExport={this.props.contribTable.fileExport}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                    </CustomCard>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleContribExport() {\r\n        const {projectId, projectName} = this.props.defaults.payload;\r\n        return this.props.onContribExport(projectId, projectName);\r\n    }\r\n\r\n    renderHelper(id, data) {\r\n        if (id === \"pwsLastUpdatedDate\") {\r\n            return <LastUpdated dateStr={data}/>\r\n        } else {\r\n            return <FieldValue value={data}/>\r\n        }\r\n    }\r\n\r\n    getClassForFlag(attrName) {\r\n        switch (attrName) {\r\n            case \"redFlag\":\r\n                return styles.red;\r\n            case \"orangeFlag\":\r\n                return styles.orange;\r\n            case \"greenFlag\":\r\n                return styles.green;\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    getContribTitleClasses(contribTable, projectType) {\r\n        if (!contribTable.loading) {\r\n            return classNames({\r\n                [styles.bottom_margin]: (projectType === ProjectTypes.OFFER || !!contribTable.payload.offer)\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nSummaryTab.propTypes = {\r\n    loadData: PropTypes.func.isRequired,\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    contribTable: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: ContribTable\r\n    }),\r\n    summaryData: SummaryShape.isRequired,\r\n    milestones: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(MilestoneShape)\r\n    }).isRequired,\r\n    healthIndicators: HealthIndicatorsShape.isRequired,\r\n    onContribExport: PropTypes.func,\r\n};","import { connect } from 'react-redux';\r\nimport summaryTab from './summary-tab';\r\nimport {summaryLoad, summaryReset} from \"../../../actions/pws/summary-tab\";\r\nimport {milestonesReset} from \"../../../actions/pws/milestones\";\r\nimport {healthReset} from \"../../../actions/pws/health-indicators\";\r\nimport {exportContribTable, loadContribTable, resetContribTable} from \"../../../actions/pws/contrib-table\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        summaryData: state.pws.summaryTab,\r\n        milestones: state.pws.milestones,\r\n        healthIndicators: state.pws.healthIndicators,\r\n        contribTable: state.pws.contribTable\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => {\r\n            dispatch(summaryLoad(projectId));\r\n            dispatch(loadContribTable(projectId));\r\n        },\r\n        resetData: () => {\r\n            dispatch(summaryReset());\r\n            dispatch(milestonesReset());\r\n            dispatch(healthReset());\r\n            dispatch(resetContribTable());\r\n        },\r\n        onContribExport: (projectId, projectName) => dispatch(exportContribTable(projectId, projectName))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(summaryTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from 'react';\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport FieldValue from \"../field-value/field-value\";\r\nimport styles from './milestone-table.module.scss';\r\nimport PropTypes from \"prop-types\";\r\nimport {FieldArray} from \"formik\";\r\nimport FormikInput, {ArrayErrors, RenderControls} from \"../controls/util-renderers\";\r\nimport {boolToYesNo, dateFormatToString} from \"../../util/transform-funcs\";\r\nimport {MilestoneShape} from \"../../util/custom-types\";\r\nimport {CommonMilestonesLabels} from \"../../util/constants\";\r\n\r\nexport default class MilestoneTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            milestonesRendered: [],\r\n            withoutBaselineDate: [CommonMilestonesLabels.OR, CommonMilestonesLabels.DR0, CommonMilestonesLabels.DR1],\r\n            shownAlwaysTrue: [CommonMilestonesLabels.DR1, CommonMilestonesLabels.DR4],\r\n            excluded: [CommonMilestonesLabels.OR]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HTMLTable striped className={styles.table}>\r\n                    <colgroup>\r\n                        <col className={styles.label}/>\r\n                        <col className={styles.actual}/>\r\n                        <col className={styles.baseline}/>\r\n                        <col className={styles.completion}/>\r\n                        <col className={styles.timeline}/>\r\n                        <col className={styles.minutes}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <FieldName name={\"Project Milestone Label\"}/>\r\n                        </th>\r\n                        <th className={styles.align_center}>\r\n                            <FieldName name={\"Actual/Forecast Date\"}/>\r\n                        </th>\r\n                        <th className={styles.align_center}>\r\n                            <FieldName name={\"Baseline Date\"}/>\r\n                        </th>\r\n                        <th className={styles.align_center}>\r\n                            <FieldName name={\"Milestone Completion (%)\"}/>\r\n                        </th>\r\n                        <th className={styles.align_center}>\r\n                            <FieldName name={\"Shown in Timeline\"}/>\r\n                        </th>\r\n                        <th className={styles.align_center}>\r\n                            <FieldName name={\"Milestone meeting minutes\"}/>\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.renderBody()\r\n                    }\r\n                    </tbody>\r\n                </HTMLTable>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBody = () => {\r\n        const {onDateChangeFactory, editMode} = this.props;\r\n        return (\r\n            <FieldArray\r\n                name=\"milestones\"\r\n                render={(arrayHelpers) => {\r\n                    let renderedMilestones = [];\r\n                    return (\r\n                        <>\r\n                            {\r\n                                arrayHelpers.form.values.milestones.map((milestone, key) => {\r\n                                    const shownString = boolToYesNo(milestone.shown);\r\n                                    const hasBaseline = this.hasBaseline(milestone);\r\n                                    const shouldBeExcluded = this.shouldBeExcluded(milestone);\r\n                                    const labelEditable = this.isLabelEditable(milestone, renderedMilestones);\r\n                                    const shouldBeShown = this.shownShouldBeLocked(milestone);\r\n                                    const labelName = `milestones[${key}].label`;\r\n                                    const actualName = `milestones[${key}].actualDate`;\r\n                                    const actualValue = dateFormatToString(new Date(milestone.actualDate));\r\n                                    const isBaselineShown = editMode && hasBaseline;\r\n                                    const baselineName = `milestones[${key}].baselineDate`;\r\n                                    const baselineValue = dateFormatToString(new Date(milestone.baselineDate));\r\n                                    const completionName = `milestones[${key}].completion`;\r\n                                    const completionValue = milestone.completion;\r\n                                    const timelineEditable = editMode && !shouldBeShown;\r\n                                    const timelineName = `milestones[${key}].shown`;\r\n                                    const timelineValue = milestone.shown;\r\n                                    const minutesName = `milestones[${key}].meetingMinutes`;\r\n                                    const minutesValue = milestone.meetingMinutes;\r\n                                    const label = milestone.label;\r\n\r\n                                    renderedMilestones.push(label);\r\n                                    return (\r\n                                        shouldBeExcluded ||\r\n                                        <tr key={key}>\r\n                                            <td className={styles.label}>\r\n                                                {\r\n                                                    labelEditable\r\n                                                        ? (\r\n                                                            <>\r\n                                                                <FormikInput\r\n                                                                    type=\"text\"\r\n                                                                    name={labelName}\r\n                                                                />\r\n                                                                {\r\n                                                                    this.rowRemoveControls(() => arrayHelpers.remove(key))\r\n                                                                }\r\n                                                            </>\r\n                                                        )\r\n                                                        : <FieldValue value={label}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td className={styles.actual}>\r\n                                                {\r\n                                                    editMode\r\n                                                        ? (\r\n                                                            <FormikInput\r\n                                                                type=\"date\"\r\n                                                                name={actualName}\r\n                                                                onChange={onDateChangeFactory(actualName)}\r\n                                                            />\r\n                                                        )\r\n                                                        : <FieldValue value={actualValue}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td className={styles.baseline}>\r\n                                                {\r\n                                                    isBaselineShown\r\n                                                        ? (\r\n                                                            <FormikInput\r\n                                                                type=\"date\"\r\n                                                                name={baselineName}\r\n                                                                onChange={onDateChangeFactory(baselineName)}\r\n                                                            />\r\n                                                        )\r\n                                                        : <FieldValue value={baselineValue}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td className={styles.completion}>\r\n                                                {\r\n                                                    editMode\r\n                                                        ? (\r\n                                                            <FormikInput\r\n                                                                type=\"numeric\"\r\n                                                                name={completionName}\r\n                                                                onValueChange={onDateChangeFactory(completionName)}\r\n                                                            />\r\n                                                        )\r\n                                                        : <FieldValue value={completionValue}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td className={styles.timeline}>\r\n                                                {\r\n                                                    timelineEditable\r\n                                                        ? (\r\n                                                                <FormikInput\r\n                                                                    type=\"checkbox\"\r\n                                                                    name={timelineName}\r\n                                                                    value={timelineValue}\r\n                                                                />\r\n                                                        )\r\n                                                        : <FieldValue value={shownString}/>\r\n                                                }\r\n                                            </td>\r\n                                            <td className={styles.minutes}>\r\n                                                {\r\n                                                    editMode\r\n                                                        ? (\r\n                                                            <FormikInput\r\n                                                                type=\"text\"\r\n                                                                name={minutesName}\r\n                                                            />\r\n                                                        )\r\n                                                        : <FieldValue value={minutesValue}/>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {\r\n                                editMode &&\r\n                                <>\r\n                                    <tr>\r\n                                        <td colSpan={6}>\r\n                                            <ArrayErrors errors={arrayHelpers.form.errors} name={\"milestones\"}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colSpan={6} className={styles.align_center}>\r\n                                            {this.rowAddControls(arrayHelpers.push)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    };\r\n\r\n    shouldBeExcluded = (milestone) => (\r\n        this.state.excluded.includes(milestone.label.toUpperCase())\r\n    );\r\n\r\n    hasBaseline = (milestone) => (\r\n        !this.state.withoutBaselineDate.includes(milestone.label.toUpperCase())\r\n    );\r\n\r\n    isLabelEditable = (milestone, renderedMilestones) => {\r\n        const editMode = this.props.editMode;\r\n        return ((editMode && !this.isMandatory(milestone.label))\r\n            || (editMode && renderedMilestones.includes(milestone.label.toUpperCase())));\r\n    };\r\n\r\n    isMandatory = (label) => {\r\n        return this.props.mandatoryMilestones.includes(label.toUpperCase())\r\n    };\r\n\r\n    shownShouldBeLocked = (milestone) => (\r\n        this.state.shownAlwaysTrue.includes(milestone.label.toUpperCase())\r\n    );\r\n\r\n    rowRemoveControls = (remove) => (\r\n        <RenderControls type={\"delete\"} onClick={remove}/>\r\n    );\r\n\r\n    rowAddControls = (push) => (\r\n        <RenderControls type={\"add\"} onClick={() => push(this.getEmptyMilestone())}/>\r\n    );\r\n\r\n    getEmptyMilestone = () => ({\r\n        label: \"\",\r\n        actualDate: null,\r\n        baselineDate: null,\r\n        completion: 0,\r\n        shown: false,\r\n        meetingMinutes: \"\"\r\n    });\r\n}\r\n\r\nMilestoneTable.propTypes = {\r\n    editMode: PropTypes.bool,\r\n    milestonesData: PropTypes.arrayOf(MilestoneShape).isRequired,\r\n    onChange: PropTypes.func,\r\n    mandatoryMilestones: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nMilestoneTable.defaultProps = {\r\n    editMode: false,\r\n    onChange: () => {\r\n    },\r\n    mandatoryMilestones: []\r\n};","import {WorkspaceStatus, ProjectTypes} from \"../../../util/constants\";\r\nimport {\r\n    launchingPlanHelp,\r\n    lessonsLearnedHelp,\r\n    projectPlanHelp,\r\n    tailoringCommentHelp,\r\n    updBusinessPlanCommentHelp\r\n} from \"../../../util/global-helps\";\r\n\r\n//Props mandatory: label,\r\n//Props not mandatory: type, notAllowedIf, allowedIf, editable\r\nlet config = {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    projectDescription: {label: \"Project Description\", type: \"textarea\"},\r\n    oemPartner: {\r\n        label: \"OEM Partner\",\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OEM_PRODUCT]\r\n        }\r\n    },\r\n    keyCustomers: {label: \"Key Customers\"},\r\n    productRelease: {\r\n        label: \"Product Release\",\r\n        allowedIf: {\r\n            epm: [false]\r\n        },\r\n        editable: false,\r\n    },\r\n    projectType: {\r\n        label: \"Project Type\",\r\n        allowedIf: {\r\n            epm: [false]\r\n        },\r\n        editable: false,\r\n    },\r\n    projectRigor: {\r\n        label: \"Project Rigor\",\r\n        allowedIf: {\r\n            epm: [false]\r\n        },\r\n        editable: false,\r\n    },\r\n    projectState: {\r\n        label: \"Project State\",\r\n        allowedIf: {\r\n            epm: [false]\r\n        },\r\n        editable: false,\r\n    },\r\n    businessDivision: {\r\n        label: \"Business Division\",\r\n        editable: false,\r\n    },\r\n    businessUnit: {\r\n        label: \"Business Unit\",\r\n        editable: false,\r\n    },\r\n    productLine: {\r\n        label: \"Product Line\",\r\n        editable: false,\r\n    },\r\n    productName: {\r\n        label: \"Product Name\",\r\n        editable: false,\r\n    },\r\n    sponsor: {\r\n        label: \"Sponsor\",\r\n        editable: false,\r\n    },\r\n    businessLineManager: {\r\n        label: \"Business Line Manager\",\r\n        editable: false,\r\n    },\r\n    productLineManager: {\r\n        label: \"Product Line Manager\",\r\n        editable: false,\r\n    },\r\n    projectManager: {\r\n        label: \"Project Manager\",\r\n        allowedIf: {\r\n            epm: [false]\r\n        },\r\n        editable: false,\r\n    },\r\n    charter: {label: \"Charter\"},\r\n    orBusinessPlan: {\r\n        label: \"OR Business Plan\",\r\n        editable: false,\r\n    },\r\n    updatedBusinessPlan: {\r\n        label: \"Updated Business Plan\",\r\n        help: updBusinessPlanCommentHelp,\r\n    },\r\n    drChecklist: {\r\n        label: \"Tailoring\",\r\n        help: tailoringCommentHelp,\r\n    },\r\n    lessonsLearned: {\r\n        label: \"Lessons learned\",\r\n        help: lessonsLearnedHelp,\r\n    },\r\n    projectPlan: {\r\n        label: \"Project Plan\",\r\n        help: projectPlanHelp,\r\n    },\r\n    launchingPlan: {\r\n        label: \"Launching Plan\",\r\n        help: launchingPlanHelp,\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OFFER, ProjectTypes.OFFER_PRODUCT]\r\n        }\r\n    },\r\n    metricsScope: {\r\n        label: \"Metrics Scope\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    rqRelease: {\r\n        label: \"RQ Release Name (JIRA)\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    ecmaBacklogTarget: {\r\n        label: \"ECMA Backlog Target\",\r\n        // allowedIf: {\r\n        //     projectType: [ProjectTypes.OFFER]\r\n        // }\r\n    },\r\n    maintenance: {\r\n        label: \"Maintenance Project\",\r\n        type: \"checkbox\"\r\n    },\r\n    composite: {\r\n        label: \"Composite Project\",\r\n        type: \"checkbox\"\r\n    },\r\n    contributingProjects: {\r\n        label: \"Contributing Projects\",\r\n    },\r\n    projectCollabUrl: {label: \"Project Collaboration Site\"},\r\n    salesForce: {\r\n        label: \"Sales Force\",\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OFFER, ProjectTypes.OFFER_PRODUCT]\r\n        }\r\n    },\r\n    projectPWASiteUrl: {\r\n        label: \"Project PWA Site\",\r\n        allowedIf: {\r\n            epm: [true]\r\n        }\r\n    },\r\n    docRepositoryUrl: {label: \"Project Documentation Repository\"},\r\n    defectsUrl: {\r\n        label: \"Defects (JIRA)\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    requirementsUrl: {\r\n        label: \"Requirements (JIRA)\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    cisUrl: {\r\n        label: \"Continuous Integration Site\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n};\r\n\r\nObject.defineProperty(config, \"controls\", {\r\n   enumerable: false, configurable: true, writable: true\r\n});\r\n\r\nexport default config;","import * as Yup from \"yup\";\r\nimport {ValidationErrors} from \"./constants\";\r\n\r\nexport const nullableInteger = (max) => Yup.number()\r\n    .integer(ValidationErrors.typeError.integer)\r\n    .typeError(ValidationErrors.typeError.number)\r\n    .max(max, ValidationErrors.number.MAX)\r\n    .nullable()\r\n    .transform((value, originalValue) => (originalValue + \"\").trim() === \"\" ? null : value);\r\n\r\nexport function unique(message, mapper = a => a) {\r\n    return this.test('unique', message, function (list) {\r\n        return list.length === new Set(list.map(mapper)).size;\r\n    });\r\n}","import * as Yup from \"yup\";\r\nimport {ValidationErrors} from \"../../../util/constants\";\r\nimport {nullableInteger, unique} from \"../../../util/yup-validators\";\r\n\r\n\r\nexport default () => {\r\n    Yup.addMethod(Yup.array, 'unique', unique);\r\n    return Yup.object().shape({\r\n        general: Yup.object().shape({\r\n            oemPartner: Yup.string()\r\n                .max(256, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            keyCustomers: Yup.string()\r\n                .max(256, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            charter: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            updatedBusinessPlan: Yup.object().shape({\r\n                value: Yup.string().max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string().max(255, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            }),\r\n            drChecklist: Yup.object().shape({\r\n                value: Yup.string().max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string().max(255, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            }),\r\n            lessonsLearned: Yup.object().shape({\r\n                value: Yup.string().max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string().max(255, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            }),\r\n            projectPlan: Yup.object().shape({\r\n                value: Yup.string().max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string().max(255, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            }),\r\n            launchingPlan: Yup.object().shape({\r\n                value: Yup.string().max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string().max(255, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            }),\r\n            metricsScope: Yup.string()\r\n                .max(100, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            rqRelease: Yup.string()\r\n                .max(100, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            ecmaBacklogTarget: Yup.array().of(\r\n                Yup.object().shape({\r\n                    milestone: Yup.string(),\r\n                    value: nullableInteger(9999)\r\n                })\r\n            ).nullable(),\r\n            projectCollabUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            projectPWASiteUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            docRepositoryUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            defectsUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            requirementsUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n            cisUrl: Yup.string()\r\n                .max(512, ValidationErrors.string.MAX)\r\n                .nullable(),\r\n        }),\r\n        milestones: Yup.array().of(\r\n            Yup.object().shape({\r\n                label: Yup.string()\r\n                    .max(45, ValidationErrors.string.MAX)\r\n                    .required(ValidationErrors.REQUIRED),\r\n                completion: Yup.number()\r\n                    .min(0, ValidationErrors.number.MIN)\r\n                    .max(100, ValidationErrors.number.MAX),\r\n                meetingMinutes: Yup.string()\r\n                    .max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n            })\r\n        )\r\n            .unique(\"Duplicated label\", a => a.label.toUpperCase())\r\n    })\r\n}","import React from 'react';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport MilestoneTable from \"../../milestone-table/milestone-table\";\r\nimport FieldName from \"../../field-name/field-name\";\r\nimport EditSaveControls from \"../../controls/edit-save-controls/edit-save-controls\";\r\nimport styles from './info-tab.module.scss'\r\nimport PropTypes from 'prop-types';\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {Field, FieldArray, Formik} from \"formik\";\r\nimport FormikInput, {ArrayErrors} from \"../../controls/util-renderers\";\r\nimport FieldValue from \"../../field-value/field-value\";\r\nimport {MilestoneShape, ProjectDefaults} from \"../../../util/custom-types\";\r\nimport {formikFieldHandleChange} from \"../../../util/util\";\r\nimport infoFieldsToRender from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport getValidationSchema from \"./validation-schema\";\r\nimport HelpIcon from \"../../help-icon/help-icon\";\r\nimport {isBoolean} from \"../../../util/comparators\";\r\nimport {boolToYesNo} from \"../../../util/transform-funcs\";\r\nimport {MenuItem, Position, Tooltip} from \"@blueprintjs/core\";\r\nimport {MultiSelect} from \"@blueprintjs/select\";\r\nimport Comment from \"../../comment/comment\";\r\nimport {CommonMilestonesLabels, Messages} from \"../../../util/constants\";\r\nimport OnSubmitValidationError from \"../../formik-onsubmit-validator\";\r\nimport TooltipContent from \"../../tooltip-content/tooltip-content\";\r\n\r\n\r\nexport default class InfoTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false\r\n        };\r\n\r\n        this.mandatoryMilestones = [\r\n            CommonMilestonesLabels.OR, CommonMilestonesLabels.DR0, CommonMilestonesLabels.DR1,\r\n            CommonMilestonesLabels.DR2, CommonMilestonesLabels.DR3, CommonMilestonesLabels.TR,\r\n            CommonMilestonesLabels.DR4, CommonMilestonesLabels.DR5, CommonMilestonesLabels.OBR,\r\n            CommonMilestonesLabels.CI\r\n        ];\r\n    }\r\n\r\n    submitForm = null;\r\n\r\n    bindFormSubmission = (formikSubmitForm) => {\r\n        this.submitForm = formikSubmitForm;\r\n    };\r\n\r\n    sendData = (data) => {\r\n        const {saveInfo} = this.props;\r\n        const {projectId} = this.props.defaults.payload;\r\n        saveInfo(projectId, data);\r\n    };\r\n\r\n    cancelInput = () => {\r\n        const {projectId} = this.props.defaults.payload;\r\n        this.props.loadData(projectId);\r\n        this.editClickHandle();\r\n    };\r\n\r\n    editClickHandle = () => {\r\n        this.setState((prevState) => ({\r\n            editMode: !prevState.editMode,\r\n        }))\r\n    };\r\n\r\n    handleChange = null;\r\n\r\n    render() {\r\n\r\n        const {information} = this.props;\r\n        if (information.loading) {\r\n            return (<LoadingSpinner/>)\r\n        } else {\r\n            const {general, urls} = information.payload;\r\n            let milestones = this.props.milestones.payload;\r\n            if (milestones.length === 0) {\r\n                milestones = this.populateMandatoryMilestones();\r\n            }\r\n\r\n            const validationParams = this.props.defaults.payload;\r\n            this.renderHelper = new RenderFieldHelper(infoFieldsToRender, validationParams);\r\n            const showEditControls = this.renderHelper.displayOrNot(\"controls\");\r\n            return (\r\n                <Formik\r\n                    enableReinitialize\r\n                    isInitialValid\r\n                    onSubmit={(values, formikActions) => {\r\n                        formikActions.setSubmitting(false);\r\n\r\n                        this.sendData(values);\r\n                        this.editClickHandle();\r\n                    }}\r\n                    initialValues={\r\n                        {\r\n                            general,\r\n                            urls,\r\n                            milestones\r\n                        }\r\n                    }\r\n                    validationSchema={\r\n                        getValidationSchema()\r\n                    }\r\n                    render={\r\n                        (formikProps) => {\r\n                            this.x = formikProps.validateForm;\r\n                            this.bindFormSubmission(formikProps.submitForm);\r\n                            this.handleChange = formikFieldHandleChange(formikProps);\r\n                            return (\r\n                                <div>\r\n                                    {\r\n                                        showEditControls &&\r\n                                        <EditSaveControls\r\n                                            sticky\r\n                                            onClick={this.editClickHandle}\r\n                                            onSubmit={this.submitForm}\r\n                                            onCancel={this.cancelInput}\r\n                                            editMode={this.state.editMode}\r\n                                        />\r\n                                    }\r\n                                    <CustomCard>\r\n                                        {this.mainRows(formikProps.values.general, \"general\")}\r\n                                    </CustomCard>\r\n                                    <CustomCard>\r\n                                        {\r\n                                            milestones.loading\r\n                                                ? <LoadingSpinner/>\r\n                                                : (\r\n                                                    <MilestoneTable\r\n                                                        editMode={this.state.editMode}\r\n                                                        milestonesData={formikProps.values.milestones}\r\n                                                        onDateChangeFactory={formikFieldHandleChange(formikProps)}\r\n                                                        mandatoryMilestones={this.mandatoryMilestones}\r\n                                                    />\r\n                                                )\r\n                                        }\r\n                                    </CustomCard>\r\n                                    <CustomCard>\r\n                                        {this.mainRows(formikProps.values.urls, \"urls\")}\r\n                                    </CustomCard>\r\n                                    <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    populateMandatoryMilestones = () => {\r\n        return this.mandatoryMilestones.map(label => (\r\n            {\r\n                label: label,\r\n                actualDate: null,\r\n                baselineDate: null,\r\n                completion: 0,\r\n                shown: false,\r\n                meetingMinutes: \"\"\r\n            }\r\n        ))\r\n    };\r\n\r\n    mainRows = (values, stateBranch) => {\r\n        return (Object.keys(infoFieldsToRender).map((key) => {\r\n            if (values[key] === undefined) return true;\r\n            return this.renderRow(key, stateBranch, values);\r\n        }))\r\n    };\r\n\r\n    renderRow = (obj, stateBranch, values) => {\r\n        const value = values[obj];\r\n        switch (obj) {\r\n            case \"lessonsLearned\":\r\n            case \"updatedBusinessPlan\":\r\n            case \"drChecklist\":\r\n            case \"launchingPlan\":\r\n            case \"projectPlan\":\r\n                return this.renderRowWithComment(obj, stateBranch, value);\r\n            case \"ecmaBacklogTarget\":\r\n                return this.renderEcmaBacklogRow(obj, stateBranch, value);\r\n            case \"contributingProjects\": {\r\n                const isComposite = values.composite;\r\n                return this.renderContributingProjectsRow(obj, stateBranch, value, isComposite);\r\n            }\r\n            default:\r\n                return this.renderSimpleRow(obj, stateBranch, value);\r\n        }\r\n    };\r\n\r\n    renderSimpleRow = (obj, stateBranch, value) => {\r\n        const {editMode} = this.state;\r\n        const style = this.selectClass(stateBranch);\r\n        const formikProps = this.renderHelper.getFieldProps(obj, value);\r\n        const displayValue = isBoolean(value) ? boolToYesNo(value) : value;\r\n        const shouldRender = this.renderHelper.displayOrNot(obj);\r\n        const label = this.renderHelper.getLabelById(obj);\r\n        const editForm = editMode && this.renderHelper.isEditable(obj);\r\n        const fieldName = `${stateBranch}.${obj}`;\r\n\r\n        return (\r\n            shouldRender &&\r\n            <div\r\n                key={obj}\r\n                className={style}\r\n            >\r\n                <FieldName name={label}/>\r\n                {\r\n                    editForm\r\n                        ? (\r\n                            <FormikInput\r\n                                {...formikProps}\r\n                                name={fieldName}\r\n                            />\r\n                        )\r\n                        : this.renderValue(obj, displayValue)\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderValue(attrName, value) {\r\n        if (attrName === \"projectDescription\") return <Comment value={value}/>\r\n\r\n        return <FieldValue value={value}/>\r\n    }\r\n\r\n    renderRowWithComment = (obj, stateBranch, value) => {\r\n        const {editMode} = this.state;\r\n        const help = this.renderHelper.getHelpObject(obj);\r\n        const formikProps = this.renderHelper.getFieldProps(obj, value);\r\n        const shouldRender = this.renderHelper.displayOrNot(obj);\r\n        const label = this.renderHelper.getLabelById(obj);\r\n        const editForm = editMode && this.renderHelper.isEditable(obj);\r\n        const fieldName = `${stateBranch}.${obj}.value`;\r\n        const commentFieldName = `${stateBranch}.${obj}.comment`;\r\n        return (\r\n            shouldRender &&\r\n            <div\r\n                key={obj}\r\n                className={styles.data_container_comment}\r\n            >\r\n                <div className={styles.comment_row_label}>\r\n                    <FieldName name={label}/>\r\n                </div>\r\n                {\r\n                    editForm\r\n                        ? (\r\n                            <FormikInput\r\n                                {...formikProps}\r\n                                name={fieldName}\r\n                                className={styles.comment_row_value}\r\n                            />\r\n                        )\r\n                        : (\r\n                            <FieldValue\r\n                                value={value.value}\r\n                                className={styles.comment_row_value}\r\n                            />\r\n                        )\r\n                }\r\n                <div className={styles.comment_row_comment}>\r\n                    <FieldName name={\"Comment\"}/>\r\n                    <Tooltip\r\n                        position={Position.LEFT}\r\n                        content={\r\n                            <TooltipContent\r\n                                title={help.title}\r\n                                content={help.content}\r\n                            />\r\n                        }\r\n                    >\r\n                        <HelpIcon className={styles.help_icon}/>\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {\r\n                    editMode\r\n                        ? (\r\n                            <FormikInput\r\n                                type=\"textarea\"\r\n                                name={commentFieldName}\r\n                                className={styles.comment_row_comment_value}\r\n                            />\r\n                        )\r\n                        : (\r\n                            <Comment\r\n                                value={value.comment}\r\n                                className={styles.comment_row_comment_value}\r\n                            />\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderEcmaBacklogRow = (obj, stateBranch) => {\r\n        const {editMode} = this.state;\r\n        const shouldRender = this.renderHelper.displayOrNot(obj);\r\n        const arrayName = `${stateBranch}.${obj}`;\r\n        const label = this.renderHelper.getLabelById(obj);\r\n        return (\r\n            shouldRender &&\r\n            <FieldArray\r\n                key={arrayName}\r\n                name={arrayName}\r\n                render={(arrayHelpers) => {\r\n                    const value = arrayHelpers.form.values[stateBranch][obj];\r\n                    const arrayErrorName = `${stateBranch}.${obj}`;\r\n                    const errors = arrayHelpers.form.errors;\r\n                    return (\r\n                        <div\r\n                            key={obj}\r\n                            className={styles.data_container}\r\n                        >\r\n                            <FieldName name={label}/>\r\n                            <div className={styles.ecma_backlog_row}>\r\n                                {\r\n                                    Object.keys(value).map((key, i) => {\r\n                                            const milestoneSelectName = `${stateBranch}.${obj}.${key}.milestone`;\r\n                                            const valueInputName = `${stateBranch}.${obj}.${key}.value`;\r\n                                            const milestoneValue = value[key][\"milestone\"];\r\n                                            const backlogValue = value[key][\"value\"];\r\n                                            return (\r\n                                                <React.Fragment key={key}>\r\n                                                    <FieldName\r\n                                                        key={`milestone_${i}`}\r\n                                                        name={\"Milestone\"}\r\n                                                    />\r\n                                                    {\r\n                                                        editMode\r\n                                                            ? this.getMilestoneSelector(milestoneSelectName, `mil_val_${i}`)\r\n                                                            : (\r\n                                                                <FieldValue\r\n                                                                    key={`mil_val_${i}`}\r\n                                                                    value={milestoneValue}\r\n                                                                />\r\n                                                            )\r\n                                                    }\r\n                                                    <FieldName\r\n                                                        key={`value_${i}`}\r\n                                                        name={\"Value\"}\r\n                                                        className={styles.value_label}\r\n                                                    />\r\n                                                    {\r\n                                                        editMode\r\n                                                            ? (\r\n                                                                <FormikInput\r\n                                                                    key={`val_val_${i}`}\r\n                                                                    type=\"numeric\"\r\n                                                                    onValueChange={this.handleChange(valueInputName)}\r\n                                                                    name={valueInputName}\r\n                                                                />\r\n                                                            )\r\n                                                            : (\r\n                                                                <FieldValue\r\n                                                                    key={`val_val_${i}`}\r\n                                                                    value={backlogValue}\r\n                                                                />\r\n                                                            )\r\n                                                    }\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                                <ArrayErrors\r\n                                    name={arrayErrorName}\r\n                                    errors={errors}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    };\r\n\r\n    getMilestoneSelector(name, key) {\r\n        return (\r\n            <Field\r\n                key={key}\r\n                component=\"select\"\r\n                name={name}\r\n            >\r\n                <option value=\"\">&nbsp;</option>\r\n                <option value=\"CI\">CI</option>\r\n                <option value=\"TR\">TR</option>\r\n                <option value=\"DR4\">DR4</option>\r\n                <option value=\"DR5\">DR5</option>\r\n            </Field>\r\n        )\r\n    }\r\n\r\n    renderContributingProjectsRow = (obj, stateBranch, value, isComposite) => {\r\n        const {loading, payload} = this.props.contrib;\r\n        const {editMode} = this.state;\r\n        const valueStrings = value.map((val) => val.projectName);\r\n        const editProjectList = this.handleChange(`${stateBranch}.${obj}`);\r\n        const style = this.selectClass(stateBranch);\r\n\r\n        const shouldRender = this.renderHelper.displayOrNot(obj) && isComposite;\r\n        const shouldMultiselectRender = !loading && editMode && this.renderHelper.isEditable(obj);\r\n        const label = this.renderHelper.getLabelById(obj);\r\n        return (\r\n            shouldRender &&\r\n            <div\r\n                key={obj}\r\n                className={style}\r\n            >\r\n                <FieldName name={label}/>\r\n                {\r\n                    shouldMultiselectRender &&\r\n                    <MultiSelect\r\n                        items={payload}\r\n                        itemListPredicate={(inputVal, itemArr) => {\r\n                            return itemArr.filter(item => String(item.projectName).toLowerCase()\r\n                                .includes(inputVal.toLowerCase()))\r\n                        }}\r\n                        itemRenderer={(item, {handleClick}) =>\r\n                            <MenuItem\r\n                                key={item.projectName}\r\n                                text={item.projectName}\r\n                                onClick={handleClick}\r\n                                active={this.isActive(item.projectName, valueStrings)}\r\n                            />\r\n                        }\r\n                        selectedItems={valueStrings}\r\n                        onItemSelect={(elem) => {\r\n                            editProjectList(this.addProject(elem, value))\r\n                        }}\r\n                        noResults={<MenuItem disabled text=\"No results.\" />}\r\n                        tagRenderer={item => item}\r\n                        tagInputProps={\r\n                            {\r\n                                onRemove: (item) => {\r\n                                    editProjectList(this.removeProject(item, value));\r\n                                }\r\n                            }\r\n                        }\r\n                        popoverProps={{\r\n                            popoverClassName: styles.multiselect\r\n                        }}\r\n                    />\r\n                }\r\n                {\r\n                    editMode ||\r\n                    <div>\r\n                        {\r\n                            valueStrings.map((name) => (\r\n                                <React.Fragment key={name}>\r\n                                    <FieldValue\r\n                                        className={styles.prj_margin}\r\n                                        value={name}\r\n                                    />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    addProject = (obj, projects) => {\r\n        const projectNames = projects.map(prj => prj.projectName);\r\n        if (!projectNames.includes(obj.projectName)) {\r\n            return [...projects, obj];\r\n        } else {\r\n            return projects;\r\n        }\r\n    };\r\n\r\n    removeProject = (projectName, projectsList) => (\r\n        projectsList.filter(project => project.projectName !== projectName)\r\n    );\r\n\r\n    isActive = (projectName, selectedProjects) => (\r\n        selectedProjects.includes(projectName)\r\n    );\r\n\r\n    selectClass = (stateBranch) => {\r\n        switch (stateBranch) {\r\n            case \"urls\":\r\n                return styles.url_container;\r\n            case \"general\":\r\n            default:\r\n                return styles.data_container;\r\n        }\r\n    };\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid) {\r\n            this.props.pushWarningToast(Messages.FORM_SUBMIT_ERROR)\r\n        }\r\n    }\r\n}\r\n\r\nInfoTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    information: PropTypes.object.isRequired,\r\n    milestones: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(MilestoneShape),\r\n    }),\r\n    contrib: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                projectID: PropTypes.number.isRequired,\r\n                projectName: PropTypes.string.isRequired\r\n            })\r\n        ),\r\n    }),\r\n    saveInfo: PropTypes.func,\r\n    saveMilestones: PropTypes.func,\r\n    pushWarningToast: PropTypes.func,\r\n};","import { connect } from 'react-redux';\r\nimport InfoTab from './info-tab';\r\nimport {infoLoad, infoReset, infoSaveData} from \"../../../actions/pws/info-tab\";\r\nimport {milestonesLoad, milestonesReset, milestonesSave} from \"../../../actions/pws/milestones\";\r\nimport {contribLoad, contribReset} from \"../../../actions/pws/contrib-list\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\nimport {addWarningToast} from \"../../../actions/app/toaster\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        information: state.pws.infoTab,\r\n        milestones: state.pws.milestones,\r\n        contrib: state.pws.contrib,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saveInfo: (projectId, data) => dispatch(infoSaveData(projectId, data)),\r\n        saveMilestones: (projectId, date) => dispatch(milestonesSave(projectId, date)),\r\n        loadData: (projectId) => {\r\n            dispatch(infoLoad(projectId));\r\n            dispatch(milestonesLoad(projectId, false));\r\n            dispatch(contribLoad(projectId))\r\n        },\r\n        resetData: () => {\r\n            dispatch(infoReset());\r\n            dispatch(milestonesReset());\r\n            dispatch(contribReset())\r\n        },\r\n        pushWarningToast: (message) => dispatch(addWarningToast(message))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(InfoTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from 'react';\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport EditSaveControls from \"../controls/edit-save-controls/edit-save-controls\";\r\nimport styles from \"./requirements.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport FieldValue from \"../field-value/field-value\";\r\nimport PropTypes from 'prop-types';\r\nimport {dateFormatToString} from \"../../util/transform-funcs\";\r\nimport {Formik} from \"formik\";\r\nimport FormikInput from \"../controls/util-renderers\";\r\nimport {RequirementsShape} from \"../../util/custom-types\";\r\nimport {formikFieldHandleChange} from \"../../util/util\";\r\nimport getValidationSchema from \"./validation-schema\";\r\nimport OnSubmitValidationError from \"../formik-onsubmit-validator\";\r\nimport {Messages} from \"../../util/constants\";\r\n\r\nexport default class Requirements extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n        };\r\n    }\r\n\r\n    onClickEdit = () => {\r\n        this.setState(\r\n            (prevState) => ({editMode: !prevState.editMode})\r\n        )\r\n    };\r\n\r\n    bindFormSubmission = (formikSubmitForm) => {\r\n        this.onSubmit = formikSubmitForm;\r\n    };\r\n\r\n    onSubmit = null;\r\n    updateFieldHandler = null;\r\n\r\n    render() {\r\n        const {requirements} = this.props;\r\n        const {rqsSubmit} = this.props;\r\n        return (\r\n            <Formik\r\n                isInitialValid\r\n                onSubmit={(values, formikActions) => {\r\n                    formikActions.setSubmitting(false);\r\n                    rqsSubmit(values);\r\n                }}\r\n                initialValues={\r\n                    requirements\r\n                }\r\n                validationSchema={\r\n                    getValidationSchema()\r\n                }\r\n                render={\r\n                    (formikProps) => {\r\n                        this.bindFormSubmission(formikProps.submitForm);\r\n                        this.updateFieldHandler = formikFieldHandleChange(formikProps);\r\n                        return this.renderRqsTable(formikProps.values);\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    renderRqsTable = (values) => {\r\n        let valueColumnClasses = classNames(styles.value_col, styles.column_align_center);\r\n        const {rqsReload, fieldsToRender} = this.props;\r\n        const renderHelper = this.props.renderHelper;\r\n        return (\r\n            <>\r\n                <HTMLTable\r\n                    className={styles.req_table}\r\n                    striped\r\n                >\r\n                    <colgroup>\r\n                        <col className={styles.title_col}/>\r\n                        <col className={valueColumnClasses}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                    {\r\n                        renderHelper.displayOrNot(\"controls\") &&\r\n                        <tr>\r\n                            <th\r\n                                className={styles.table_header}\r\n                                colSpan={2}\r\n                            >\r\n                                <EditSaveControls smallSize\r\n                                                  onClick={this.onClickEdit}\r\n                                                  editMode={this.state.editMode}\r\n                                                  onSubmit={this.onSubmit}\r\n                                                  onCancel={rqsReload}\r\n                                />\r\n                            </th>\r\n                        </tr>\r\n                    }\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        renderHelper.displayOrNot(\"note\") &&\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <FieldName name={renderHelper.getLabelById(\"note\")}/>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                    {\r\n                        Object.keys(fieldsToRender).map((field) => {\r\n                            const label = renderHelper.getLabelById(field);\r\n                            const value = this.renderValueField(field, values);\r\n                            return (\r\n                                renderHelper.displayOrNot(field) &&\r\n                                <tr key={field}>\r\n                                    <td>\r\n                                        <FieldName name={label}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className={styles.column_align_center}>\r\n                                            {value}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </HTMLTable>\r\n                <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    renderValueField = (propName, values) => {\r\n        const {dr1Actual} = this.props.requirements;\r\n        const dr1 = (dr1Actual === null || dr1Actual === \"\") ? \"\" : new Date(dr1Actual);\r\n        const {sum} = this.props.requirements;\r\n        const value = values[propName];\r\n        switch (propName) {\r\n            case \"dr1Actual\":\r\n                const dateStr = dateFormatToString(dr1);\r\n                return (\r\n                    <FieldValue\r\n                        value={dateStr}\r\n                        className={styles.column_align_center}\r\n                    />\r\n                );\r\n            case \"sum\":\r\n                return (\r\n                    <FieldValue\r\n                        value={sum}\r\n                        className={styles.column_align_center}\r\n                    />\r\n                );\r\n            default: {\r\n                if (this.state.editMode) {\r\n                    return (\r\n                        <FormikInput\r\n                            type=\"numeric\"\r\n                            name={propName}\r\n                            onValueChange={this.updateFieldHandler(propName)}/>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <FieldValue\r\n                            value={value}\r\n                            className={styles.column_align_center}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid && !formikProps.isSubmitting) {\r\n            this.props.onSubmitErrorCallback(Messages.FORM_SUBMIT_ERROR)\r\n        }\r\n    }\r\n}\r\n\r\nRequirements.propTypes = {\r\n    requirements: RequirementsShape.isRequired,\r\n    renderHelper: PropTypes.object.isRequired,\r\n    rqsSubmit: PropTypes.func,\r\n    rqsReload: PropTypes.func\r\n};\r\n\r\nRequirements.defaultProps = {\r\n    rqsSubmit: () => {},\r\n    rqsReload: () => {},\r\n};\r\n","import * as Yup from \"yup\";\r\nimport {nullableInteger, unique} from \"../../util/yup-validators\";\r\n\r\n\r\nexport default () => {\r\n    Yup.addMethod(Yup.array, 'unique', unique);\r\n    return Yup.object().shape({\r\n        addedAfterDr1: nullableInteger(99999),\r\n        committedAtDr1: nullableInteger(99999),\r\n        modifiedAfterDr1: nullableInteger(99999),\r\n        removedAfterDr1: nullableInteger(99999),\r\n    })\r\n}","import {WorkspaceStatus, ProjectTypes} from \"../../util/constants\";\r\n\r\nlet config = {\r\n    controls: {\r\n        label: \"Controls\",\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    note: {\r\n        label: \"* For Offer Program, Requirement means 'Commercial deliverable'\",\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    dr1Actual: {\r\n        label: \"DR1 date (actual)\",\r\n    },\r\n    committedAtDr1: {\r\n        label: \"# Requirements committed (baseline) at DR1\",\r\n    },\r\n    addedAfterDr1: {\r\n        label: \"Current # of requirements added after DR1\",\r\n    },\r\n    removedAfterDr1: {\r\n        label: \"Current # of baselined requirements removed after DR1\",\r\n    },\r\n    modifiedAfterDr1: {\r\n        label: \"Current # of baselined requirements modified after DR1\",\r\n    },\r\n    sum: {\r\n        label: \"Current # of scoped requirements\",\r\n    },\r\n};\r\n\r\nObject.defineProperties(config,\r\n    {\r\n        controls: {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true\r\n        },\r\n        note: {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true\r\n        },\r\n    }\r\n);\r\n\r\nexport default config;","import React from 'react';\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport styles from \"./milestones-kpi.module.scss\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport {MilestoneKpiShape} from \"../../util/custom-types\";\r\nimport {toPercentsOrNA} from \"../../util/transform-funcs\";\r\n\r\nexport default class MilestonesKpi extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            defaults: {\r\n                noMilestonesLabel: \"No suitable TR, DR4, DR5, CI milestones found\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let headerClasses = classNames(styles.column_align_center, styles.borderBottom);\r\n        return (\r\n            <HTMLTable\r\n                className={styles.mil_table}\r\n                striped\r\n            >\r\n                <colgroup>\r\n                    <col className={styles.mil_col}/>\r\n                    <col className={styles.adh_col}/>\r\n                    <col className={styles.delay_col}/>\r\n                    <col className={styles.duration_col}/>\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th\r\n                        className={headerClasses}\r\n                        colSpan={4}\r\n                    >\r\n                        COMMITTED versus ACTUAL\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        Milestone\r\n                    </th>\r\n                    <th className={styles.column_align_center}>\r\n                        Schedule Adherence\r\n                    </th>\r\n                    <th className={styles.column_align_center}>\r\n                        Delay (days)\r\n                    </th>\r\n                    <th className={styles.column_align_center}>\r\n                        Project Duration from DR1\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.renderBody()\r\n                }\r\n                </tbody>\r\n            </HTMLTable>\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        const {milestonesKpi} = this.props;\r\n        const milestonesToRender = milestonesKpi\r\n            .filter((obj) => !(obj.adherence === 0 && obj.delay === 0 && obj.duration === 0));\r\n\r\n        if (milestonesToRender.length > 0) {\r\n            return milestonesToRender.map((obj, i) => {\r\n                const label = obj.label;\r\n                const adherence = toPercentsOrNA(obj.adherence);\r\n                const delay = obj.delay;\r\n                const duration = obj.duration === 1 ? `${obj.duration} day` : `${obj.duration} days`;\r\n                return (\r\n                    <tr key={i}>\r\n                        <td>\r\n                            <FieldName name={label}/>\r\n                        </td>\r\n                        <td className={styles.column_align_center}>\r\n                            {adherence}\r\n                        </td>\r\n                        <td className={styles.column_align_center}>\r\n                            {delay}\r\n                        </td>\r\n                        <td className={styles.column_align_center}>\r\n                            {duration}\r\n                        </td>\r\n                    </tr>\r\n                )})\r\n        } else {\r\n            const message = this.state.defaults.noMilestonesLabel;\r\n            return (\r\n                <tr>\r\n                    <td\r\n                        colSpan={4}\r\n                        className={styles.column_align_center}\r\n                    >\r\n                        <FieldName name={message}/>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nMilestonesKpi.propTypes = {\r\n    milestonesKpi: PropTypes.arrayOf(MilestoneKpiShape),\r\n};\r\n\r\nMilestonesKpi.defaultProps = {\r\n    milestonesKpi: []\r\n};\r\n","import React from 'react';\r\nimport {HTMLTable, Position, Tooltip} from \"@blueprintjs/core\";\r\nimport styles from \"./kpi.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport PropTypes from \"prop-types\";\r\nimport {toPercentsOrNA} from \"../../util/transform-funcs\";\r\nimport HelpIcon from \"../help-icon/help-icon\";\r\nimport FieldValue from \"../field-value/field-value\";\r\nimport TooltipContent from \"../tooltip-content/tooltip-content\";\r\n\r\nexport default class Kpi extends React.Component {\r\n    render() {\r\n        const headerClasses = styles.header;\r\n        const {dr4Kpi, fieldsToRender} = this.props;\r\n        const {label} = fieldsToRender.year;\r\n        const {year} = dr4Kpi;\r\n        return (\r\n            <HTMLTable\r\n                striped\r\n                className={styles.kpi_table}\r\n            >\r\n                <colgroup>\r\n                    <col className={styles.name_col}/>\r\n                    <col className={styles.value_col}/>\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <td>\r\n                        <FieldName name={label}/>\r\n                    </td>\r\n                    <td>{year}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className={headerClasses}/>\r\n                    <td className={headerClasses}>\r\n                        COMMITTED vs ACTUAL\r\n                    </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    Object.keys(fieldsToRender).map((field) => {\r\n                        const label = fieldsToRender[field].label;\r\n                        const value = toPercentsOrNA(dr4Kpi[field]);\r\n                        const help = fieldsToRender[field].help;\r\n                        return (\r\n                            <tr key={field}>\r\n                                <td>\r\n                                    <FieldName name={label}/>\r\n                                    <Tooltip\r\n                                        position={Position.TOP}\r\n                                        className={styles.help}\r\n                                        content={\r\n                                            <TooltipContent\r\n                                                title={help.title}\r\n                                                content={help.content}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <HelpIcon/>\r\n                                    </Tooltip>\r\n                                </td>\r\n                                <td>\r\n                                    <FieldValue\r\n                                        value={value}\r\n                                        className={styles.value_col}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </HTMLTable>\r\n        )\r\n    }\r\n}\r\n\r\nKpi.propTypes = {\r\n    dr4Kpi: PropTypes.object.isRequired,\r\n    //Config object (kpi-fields.js)\r\n    fieldsToRender: PropTypes.object.isRequired,\r\n};","import {contentAdherenceHelp, costAdherenceHelp, rqsChangeHelp, scheduleAdherenceHelp} from \"../../util/global-helps\";\r\n\r\nlet configObj = {\r\n    year: {\r\n        label: \"Year (based on DR1 date)\",\r\n    },\r\n    scheduleAdherence: {\r\n        label: \"Schedule Adherence\",\r\n        help: scheduleAdherenceHelp,\r\n    },\r\n    contentAdherence: {\r\n        label: \"Content Adherence\",\r\n        help: contentAdherenceHelp\r\n    },\r\n    rqsChange: {\r\n        label: \"Requirements Change\",\r\n        help: rqsChangeHelp,\r\n    },\r\n    costAdherence: {\r\n        label: \"Cost Adherence\",\r\n        help: costAdherenceHelp,\r\n    }\r\n};\r\n\r\nObject.defineProperty(configObj, \"year\", {\r\n    configurable: true, writable: true, enumerable: false\r\n})\r\n\r\nexport default configObj;","import React from 'react';\r\nimport {HTMLTable, Icon, Button, Position, Tooltip} from \"@blueprintjs/core\";\r\nimport EditSaveControls from \"../controls/edit-save-controls/edit-save-controls\";\r\nimport styles from \"./quality.module.scss\";\r\nimport FieldName from \"../field-name/field-name\";\r\nimport PropTypes from \"prop-types\";\r\nimport {FieldArray, Formik} from \"formik\";\r\nimport FormikInput, {RenderControls} from \"../controls/util-renderers\";\r\nimport HelpIcon from \"../help-icon/help-icon\";\r\nimport {FieldsToRenderShape, ProjectDefaults, QualityIndicatorsShape} from \"../../util/custom-types\";\r\nimport FieldValue from \"../field-value/field-value\";\r\nimport {formikFieldHandleChange, getSpecialNumericRegexp} from \"../../util/util\";\r\nimport getValidationSchema from \"./validation-schema\";\r\nimport Comment from \"../comment/comment\";\r\nimport RenderFieldHelper from \"../../util/render-field-helper\";\r\nimport LastUpdated from \"../last-updated/last-updated\";\r\nimport {Messages} from \"../../util/constants\";\r\nimport OnSubmitValidationError from \"../formik-onsubmit-validator\";\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\nimport TooltipContent from \"../tooltip-content/tooltip-content\";\r\n\r\nexport default class Quality extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n        };\r\n    }\r\n\r\n    onSubmitForm = null;\r\n    updateNumericHandler = null;\r\n\r\n    bindFormSubmission = (formikSubmit) => {\r\n        this.onSubmitForm = formikSubmit;\r\n    };\r\n\r\n    onClickEdit = () => {\r\n        this.setState(\r\n            (prevState) => ({editMode: !prevState.editMode})\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const {qualityKpi, onSubmit} = this.props;\r\n        let {quality, defects, backlog, testExecution, testRate} = qualityKpi;\r\n\r\n        quality = this.fillArrayIfEmpty(quality);\r\n        defects = this.fillArrayIfEmpty(defects);\r\n        backlog = this.fillArrayIfEmpty(backlog);\r\n        testExecution = this.fillArrayIfEmpty(testExecution);\r\n        testRate = this.fillArrayIfEmpty(testRate);\r\n\r\n        return (\r\n            <Formik\r\n                isInitialValid\r\n                initialValues={\r\n                    {\r\n                        quality,\r\n                        defects,\r\n                        backlog,\r\n                        testExecution,\r\n                        testRate\r\n                    }\r\n                }\r\n                onSubmit={\r\n                    values => {\r\n                        onSubmit(values);\r\n                        this.onClickEdit();\r\n                    }\r\n                }\r\n                validationSchema={\r\n                    getValidationSchema()\r\n                }\r\n                render={\r\n                    (formikProps) => {\r\n                        this.bindFormSubmission(formikProps.submitForm);\r\n                        this.updateNumericHandler = formikFieldHandleChange(formikProps);\r\n                        return this.renderQualityForm(formikProps.values);\r\n                    }\r\n                }\r\n            />\r\n\r\n        );\r\n    }\r\n\r\n    fillArrayIfEmpty(object) {\r\n        if (object.length === 0) {\r\n            object.push(this.getEmptyRowObject(\"\"));\r\n        }\r\n        return object;\r\n    };\r\n\r\n    renderQualityForm = (values) => {\r\n        const controlsAttrName = \"controls\";\r\n        const {syncDate} = this.props.qualityKpi;\r\n        const {fieldsToRender, onCancel, fieldsRenderValidation} = this.props;\r\n        this.renderHelper = new RenderFieldHelper(fieldsToRender, fieldsRenderValidation);\r\n        const controlsRendered = this.renderHelper.displayOrNot(controlsAttrName);\r\n        const editBtnProps = this.getSyncButtonProps(!!fieldsRenderValidation.dr1Actual);\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <div className={styles.header}>\r\n                        {\r\n                            controlsRendered &&\r\n                            <Button\r\n                                minimal\r\n                                intent={\"primary\"}\r\n                                {...editBtnProps}\r\n                            >\r\n                                <Icon icon={\"refresh\"}/>\r\n                            </Button>\r\n                        }\r\n                        Last synchro:\r\n                        <LastUpdated\r\n                            className={styles.sync_date}\r\n                            dateStr={syncDate}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        controlsRendered &&\r\n                        <EditSaveControls\r\n                            className={styles.float_right}\r\n                            onClick={this.onClickEdit}\r\n                            onSubmit={this.onSubmitForm}\r\n                            editMode={this.state.editMode}\r\n                            onCancel={onCancel}\r\n                        />\r\n                    }\r\n                </div>\r\n                <HTMLTable\r\n                    striped\r\n                    className={styles.quality_table}\r\n                >\r\n                    <colgroup>\r\n                        <col className={styles.descr_col}/>\r\n                        <col className={styles.controls_col}/>\r\n                        <col className={styles.controls_col}/>\r\n                        <col className={styles.obj_col}/>\r\n                        <col className={styles.actual_col}/>\r\n                        <col/>\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <th/>\r\n                        <th/>\r\n                        <th/>\r\n                        <th className={styles.column_align_center}>Objective</th>\r\n                        <th className={styles.column_align_center}>Actual value</th>\r\n                        <th className={styles.column_align_center}>Comment</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        Object.keys(fieldsToRender).map(field => {\r\n                                if (this.renderHelper.displayOrNot(field)) {\r\n                                    if (field === \"testExecution\" || field === \"testRate\") {\r\n                                        return this.renderComplexRows(values, field, true);\r\n                                    } else {\r\n                                        return this.renderComplexRows(values, field, false);\r\n                                    }\r\n                                }\r\n\r\n                                return true;\r\n                            }\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </HTMLTable>\r\n                <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    renderComplexRows = (values, field, isControlled) => {\r\n        const rowsNum = values[field].length;\r\n        const rowSpan = rowsNum < 2 ? 1 : rowsNum;\r\n        let indicators = values[field];\r\n        return (\r\n            <FieldArray\r\n                key={field}\r\n                name={field}\r\n                render={(arrayHelpers) => {\r\n                    const rowTitle = this.props.fieldsToRender[field].label;\r\n                    const help = this.renderHelper.getHelpObject(field);\r\n                    if (indicators && indicators.length === 0) {\r\n                        indicators = [this.getEmptyRowObject(\"\")];\r\n                    }\r\n                    const comment = indicators[0].comment;\r\n                    const isActualEditable = this.isEditable(field);\r\n                    return indicators.map((row, i) => {\r\n                        const inputAttrs = this.getInputAttrs(isControlled, field, i);\r\n                        const isRenderControlsNeeded = this.state.editMode && isControlled;\r\n                        const objectiveName = `${field}[${i}].objective`;\r\n                        const actualName = `${field}[${i}].actual`;\r\n                        const commentName = `${field}[${i}].comment`;\r\n                        return (\r\n                            <tr key={`${field}_${i}`}>\r\n                                {\r\n                                    (i === 0) &&\r\n                                    <>\r\n                                        <td rowSpan={rowSpan}>\r\n                                            <div className={styles.title_container}>\r\n                                                <div className={styles.row_name_container}>\r\n                                                    <FieldName name={rowTitle}/>\r\n                                                </div>\r\n                                                <div className={styles.help_container}>\r\n                                                    <Tooltip\r\n                                                        position={Position.TOP}\r\n                                                        content={\r\n                                                            <TooltipContent\r\n                                                                title={help.title}\r\n                                                                content={help.content}\r\n                                                            />\r\n                                                        }\r\n                                                    >\r\n                                                        <HelpIcon className={styles.help_icon}/>\r\n                                                    </Tooltip>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td rowSpan={rowSpan}>\r\n                                            {\r\n                                                isRenderControlsNeeded &&\r\n                                                <RenderControls\r\n                                                    type=\"add\"\r\n                                                    onClick={() => arrayHelpers.push(this.getEmptyRowObject(comment))}\r\n                                                    className={styles.controls}\r\n                                                />\r\n                                            }\r\n                                        </td>\r\n                                    </>\r\n                                }\r\n                                <td>\r\n                                    {\r\n                                        isRenderControlsNeeded &&\r\n                                        <RenderControls\r\n                                            type=\"delete\"\r\n                                            onClick={() => this.removeRow(values[field], arrayHelpers, i)}\r\n                                            className={styles.controls}\r\n                                        />\r\n                                    }\r\n                                </td>\r\n                                <td className={styles.column_align_center}>\r\n                                    {\r\n                                        this.state.editMode\r\n                                            ? (\r\n                                                <FormikInput\r\n                                                    name={objectiveName}\r\n                                                    {...inputAttrs}\r\n                                                />\r\n                                            )\r\n                                            : <FieldValue value={this.emptyToZero(row.objective)}/>\r\n                                    }\r\n                                </td>\r\n                                <td className={styles.column_align_center}>\r\n                                    {\r\n                                        this.renderActual(isActualEditable, actualName, row.actual)\r\n                                    }\r\n                                </td>\r\n                                {\r\n                                    (i === 0) &&\r\n                                    <td\r\n                                        rowSpan={rowSpan}\r\n                                        className={styles.column_align_center}\r\n                                    >\r\n                                        {\r\n                                            this.state.editMode\r\n                                                ? (\r\n                                                    <FormikInput\r\n                                                        type=\"textarea\"\r\n                                                        name={commentName}\r\n                                                    />\r\n                                                )\r\n                                                : <Comment value={comment}/>\r\n                                        }\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                }/>\r\n        )\r\n    }\r\n\r\n    isEditable = (field) => {\r\n        if (field === \"quality\" || field === \"defects\" || field === \"backlog\") {\r\n            return false;\r\n        } else {\r\n            return this.state.editMode;\r\n        }\r\n    };\r\n\r\n    emptyToZero = (value) => {\r\n        return value === \"\" ? 0 : value;\r\n    }\r\n\r\n    getEmptyRowObject = (comment) => ({\r\n        rowNumber: 0,\r\n        objective: 0,\r\n        actual: 0,\r\n        comment: comment\r\n    });\r\n\r\n    removeRow = (values, arrayHelpers, i) => {\r\n        if (values.length === 1) {\r\n            arrayHelpers.unshift(this.getEmptyRowObject());\r\n            arrayHelpers.pop();\r\n        } else {\r\n            arrayHelpers.remove(i);\r\n        }\r\n    };\r\n\r\n    getSyncButtonProps(isDr1ActualExists) {\r\n        const {updateInProcess} = this.props.qualityKpi;\r\n        const editBtnProps = {};\r\n        if (!isDr1ActualExists) {\r\n            editBtnProps.disabled = true;\r\n            editBtnProps.title = \"Set DR1 date to enable syncro\";\r\n        }\r\n        editBtnProps.loading = updateInProcess;\r\n\r\n        return editBtnProps;\r\n    }\r\n\r\n    getInputAttrs(isControlled, fieldName, i) {\r\n        const inputAttrs = {};\r\n        const name = `${fieldName}[${i}].objective`;\r\n        if (isControlled) {\r\n            const regexp = getSpecialNumericRegexp();\r\n            inputAttrs.onChange = this.updateNumericHandler(name, regexp);\r\n            inputAttrs.type = \"text\";\r\n        } else {\r\n            inputAttrs.onValueChange = this.updateNumericHandler(name);\r\n            inputAttrs.type = \"numeric\";\r\n        }\r\n\r\n        return inputAttrs;\r\n    }\r\n\r\n    renderActual(isEditable, name, value) {\r\n        if (isEditable) {\r\n            return (\r\n                <FormikInput\r\n                    type=\"text\"\r\n                    name={name}\r\n                />\r\n            )\r\n        } else {\r\n            const val = this.emptyToZero(value);\r\n            const regex = new RegExp(/backlog|quality|defects/);\r\n            const {projectId} = this.props;\r\n            // eslint-disable-next-line eqeqeq\r\n            if (val != 0 && regex.test(name)) {\r\n                const type = name.match(regex);\r\n                const url = `/api/kpi/${type}/issuesList/${projectId}`;\r\n                return <SafeUrl url={url} label={val}/>\r\n            } else {\r\n                return (\r\n                    <FieldValue value={val}/>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid && !formikProps.isSubmitting) {\r\n            this.props.onSubmitErrorCallback(Messages.FORM_SUBMIT_ERROR)\r\n        }\r\n    }\r\n}\r\n\r\nQuality.propTypes = {\r\n    projectId: PropTypes.number,\r\n    fieldsToRender: FieldsToRenderShape,\r\n    qualityKpi: QualityIndicatorsShape,\r\n    fieldsRenderValidation: ProjectDefaults,\r\n    onSubmit: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    onSubmitErrorCallback: PropTypes.func,\r\n};\r\n\r\nQuality.defaultProps = {\r\n    onSubmit: () => {},\r\n    onCancel: () => {},\r\n    onSubmitErrorCallback: () => {},\r\n};","import * as Yup from \"yup\";\r\nimport {nullableInteger, unique} from \"../../util/yup-validators\";\r\nimport {ValidationErrors} from \"../../util/constants\";\r\n\r\n\r\nexport default () => {\r\n    Yup.addMethod(Yup.array, 'unique', unique);\r\n    return Yup.object().shape({\r\n       backlog: Yup.array().of(\r\n            Yup.object().shape({\r\n                objective: nullableInteger(999999),\r\n                comment: Yup.string()\r\n                    .max(256, ValidationErrors.string.MAX)\r\n                    .nullable()\r\n            })\r\n       ),\r\n        defects: Yup.array().of(\r\n            Yup.object().shape({\r\n                objective: nullableInteger(999999),\r\n                comment: Yup.string()\r\n                    .max(256, ValidationErrors.string.MAX)\r\n                    .nullable()\r\n            })\r\n        ),\r\n        quality: Yup.array().of(\r\n            Yup.object().shape({\r\n                objective: nullableInteger(999999),\r\n                comment: Yup.string()\r\n                    .max(256, ValidationErrors.string.MAX)\r\n                    .nullable()\r\n            })\r\n        ),\r\n        testExecution: Yup.array().of(\r\n            Yup.object().shape({\r\n                actual: Yup.string()\r\n                    .max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                objective: Yup.string()\r\n                    .max(6, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string()\r\n                    .max(256, ValidationErrors.string.MAX)\r\n                    .nullable()\r\n            })\r\n        ),\r\n        testRate: Yup.array().of(\r\n            Yup.object().shape({\r\n                actual: Yup.string()\r\n                    .max(512, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                objective: Yup.string()\r\n                    .max(6, ValidationErrors.string.MAX)\r\n                    .nullable(),\r\n                comment: Yup.string()\r\n                    .max(256, ValidationErrors.string.MAX)\r\n                    .nullable()\r\n            })\r\n        ),\r\n    })\r\n}","import {WorkspaceStatus} from \"../../util/constants\";\r\nimport {\r\n    backlogReductionHelp,\r\n    newOpenDefectsHelp,\r\n    qualityKpiHelp,\r\n    testExecutionHelp,\r\n    testPassHelp\r\n} from \"../../util/global-helps\";\r\n\r\nlet config = {\r\n    controls: {\r\n        label: \"Sync Button\",\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    quality: {\r\n        label: \"Quality KPI\",\r\n        help: qualityKpiHelp\r\n    },\r\n    defects: {\r\n        label: \"New Open Defects\",\r\n        allowedIf: {\r\n            maintenance: [false],\r\n        },\r\n        help: newOpenDefectsHelp\r\n    },\r\n    backlog: {\r\n        label: \"Backlog Reduction\",\r\n        help: backlogReductionHelp\r\n    },\r\n    testExecution: {\r\n        label: \"Test execution (rate or number)\",\r\n        help: testExecutionHelp\r\n    },\r\n    testRate: {\r\n        label: \"Test pass (rate or number)\",\r\n        help: testPassHelp\r\n    }\r\n};\r\n\r\nObject.defineProperty(config, \"controls\", {\r\n    enumerable: false, configurable: true, writable: true\r\n});\r\n\r\nexport default config;","import {WorkspaceStatus, ProjectTypes} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    controls: {\r\n        notAllowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    quality: {\r\n        label: \"Quality\",\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from \"classnames\";\r\nimport Timeline from \"../../timeline/timeline\";\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport HealthIndicators from \"../../health-indicators/health-indicators\";\r\nimport healthFields from \"../../health-indicators/health-fields\";\r\nimport styles from \"./indicators-tab.module.scss\";\r\nimport Requirements from \"../../requirements/requirements\";\r\nimport fieldsRequirements from \"../../requirements/fields-requirements\";\r\nimport MilestonesKpi from \"../../milestones-kpi/milestones-kpi\";\r\nimport Kpi from \"../../dr4kpi/kpi\";\r\nimport kpiFields from \"../../dr4kpi/kpi-fields\";\r\nimport Quality from \"../../quality/quality\";\r\nimport qualityFields from \"../../quality/quality-fields\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {\r\n    HealthIndicatorsShape,\r\n    MilestoneKpiShape,\r\n    MilestoneShape, ProjectDefaults,\r\n    QualityIndicatorsShape,\r\n    RequirementsShape\r\n} from \"../../../util/custom-types\";\r\nimport ErrorBoundary from \"../../error-boundary/error-boundary\";\r\nimport {getPropFromStringPath} from \"../../../util/util\";\r\nimport {getIndicatorsColor} from \"../../../util/transform-funcs\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport fieldsParams from \"./indicators-fields\";\r\nimport {Messages} from \"../../../util/constants\";\r\n\r\nexport default class IndicatorsTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmitErrorHandler = () => this.props.pushWarningToast(Messages.FORM_SUBMIT_ERROR);\r\n    }\r\n\r\n    render() {\r\n        this.projectId = this.props.defaults.payload.projectId;\r\n        const validationParams = this.props.defaults.payload;\r\n        const rqsRenderHelper = new RenderFieldHelper(fieldsRequirements, validationParams);\r\n        const renderHelper = new RenderFieldHelper(fieldsParams, validationParams);\r\n        const {milestones, healthIndicators, requirements, milestonesKpi, dr4Kpi, qualityKpi} = this.props;\r\n        const overall = getPropFromStringPath(healthIndicators, \"payload.statuses.current.overall\");\r\n        const overallIndicator = getIndicatorsColor(overall);\r\n        const isControlsBlocked = renderHelper.displayOrNot(\"controls\");\r\n        const isQualityShowed = renderHelper.displayOrNot(\"quality\");\r\n\r\n        const rqsCardClasses = classNames(styles.rqs_kpi, styles.card);\r\n        const milestonesKpiClasses = classNames(styles.milestones_kpi, styles.card);\r\n        const dr4KpiClasses = classNames(styles.dr4_kpi, styles.card);\r\n        const qualityClasses = classNames(styles.quality, styles.card);\r\n\r\n        return (\r\n            <div>\r\n                <CustomCard className={styles.card}>\r\n                    {\r\n                        milestones.loading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <ErrorBoundary>\r\n                                    <Timeline\r\n                                        milestones={milestones.payload}\r\n                                        status={overallIndicator}\r\n                                    />\r\n                                </ErrorBoundary>\r\n                            )\r\n                    }\r\n                </CustomCard>\r\n                <CustomCard className={styles.card}>\r\n                    <h3>Health</h3>\r\n                    {\r\n                        healthIndicators.loading\r\n                            ? <LoadingSpinner/>\r\n                            : (\r\n                                <ErrorBoundary>\r\n                                    <HealthIndicators\r\n                                        indicators={healthIndicators.payload}\r\n                                        fieldsToRender={healthFields}\r\n                                        onIndicatorsSubmit={this.handleHealthIndicatorsSubmit}\r\n                                        onCommentsSubmit={this.handleHealthCommentsSubmit}\r\n                                        onCancel={this.handleHealthReload}\r\n                                        blocked={isControlsBlocked}\r\n                                        onSubmitErrorCallback={this.onSubmitErrorHandler}\r\n                                    />\r\n                                </ErrorBoundary>\r\n                            )\r\n                    }\r\n                </CustomCard>\r\n                <div className={styles.kpi_container}>\r\n                    <CustomCard className={rqsCardClasses}>\r\n                        <h3>Requirements</h3>\r\n                        {\r\n                            requirements.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <Requirements\r\n                                            requirements={requirements.payload}\r\n                                            renderHelper={rqsRenderHelper}\r\n                                            fieldsToRender={fieldsRequirements}\r\n                                            fieldsRenderValidation={validationParams}\r\n                                            rqsSubmit={this.handleRqsSubmit}\r\n                                            rqsReload={this.handleRqsReload}\r\n                                            onSubmitErrorCallback={this.onSubmitErrorHandler}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard className={milestonesKpiClasses}>\r\n                        <h3>Milestones</h3>\r\n                        {\r\n                            milestonesKpi.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <MilestonesKpi milestonesKpi={milestonesKpi.payload}/>\r\n                                    </ErrorBoundary>\r\n                                )\r\n                        }\r\n                    </CustomCard>\r\n                    <CustomCard className={dr4KpiClasses}>\r\n                        <h3>Project DR4 KPI</h3>\r\n                        {\r\n                            dr4Kpi.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <Kpi\r\n                                            dr4Kpi={dr4Kpi.payload}\r\n                                            fieldsToRender={kpiFields}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                )\r\n                        }\r\n                    </CustomCard>\r\n                </div>\r\n                {\r\n                    isQualityShowed &&\r\n                    <CustomCard className={qualityClasses}>\r\n                        <h3>Quality</h3>\r\n                        {\r\n                            qualityKpi.loading\r\n                                ? <LoadingSpinner/>\r\n                                : (\r\n                                    <ErrorBoundary>\r\n                                        <Quality\r\n                                            projectId={this.projectId}\r\n                                            qualityKpi={qualityKpi.payload}\r\n                                            fieldsToRender={qualityFields}\r\n                                            fieldsRenderValidation={validationParams}\r\n                                            onSubmit={this.handleQualitySubmit}\r\n                                            onCancel={this.handleQualityReload}\r\n                                            onSubmitErrorCallback={this.onSubmitErrorHandler}\r\n                                        />\r\n                                    </ErrorBoundary>\r\n                                )\r\n                        }\r\n                    </CustomCard>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleHealthIndicatorsSubmit = (data) => {\r\n        this.props.healthIndicatorsSubmit(this.projectId, data);\r\n    };\r\n\r\n    handleHealthCommentsSubmit = (data) => {\r\n        this.props.healthCommentsSubmit(this.projectId, data);\r\n    };\r\n\r\n    handleHealthReload = () => {\r\n        this.props.healthReload(this.projectId);\r\n    };\r\n\r\n    handleRqsSubmit = (data) => {\r\n        this.props.rqsSubmit(this.projectId, data);\r\n    };\r\n\r\n    handleRqsReload = () => {\r\n        this.props.rqsReload(this.projectId);\r\n    };\r\n\r\n    handleQualityReload = () => {\r\n        this.props.qualityReload(this.projectId);\r\n    };\r\n\r\n    handleQualitySubmit = (data) => {\r\n        this.props.qualitySubmit(this.projectId, data);\r\n    };\r\n};\r\n\r\n\r\nIndicatorsTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    milestones: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(MilestoneShape)\r\n    }),\r\n    healthIndicators: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: HealthIndicatorsShape\r\n    }),\r\n    requirements: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: RequirementsShape\r\n    }),\r\n    milestonesKpi: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(MilestoneKpiShape)\r\n    }),\r\n    dr4Kpi: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object,\r\n    }),\r\n    qualityKpi: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: QualityIndicatorsShape\r\n    }),\r\n    healthIndicatorsSubmit: PropTypes.func,\r\n    healthCommentsSubmit: PropTypes.func,\r\n    healthReload: PropTypes.func,\r\n    rqsSubmit: PropTypes.func,\r\n    rqsReload: PropTypes.func,\r\n    qualityReload: PropTypes.func,\r\n    qualitySubmit: PropTypes.func,\r\n    pushWarningToast: PropTypes.func,\r\n};","import {connect} from 'react-redux';\r\nimport IndicatorsTab from \"./indicators-tab\";\r\nimport {indicatorsLoad} from \"../../../actions/pws/indicators-tab\";\r\nimport {milestonesReset} from \"../../../actions/pws/milestones\";\r\nimport {\r\n    healthLoad,\r\n    healthReset,\r\n    healthCommentsSave,\r\n    healthIndicatorsSave\r\n} from \"../../../actions/pws/health-indicators\";\r\nimport {indicatorsRqsReset, indicatorsRqsSave, indicatorsRqsLoad} from \"../../../actions/pws/indicators-rqs\";\r\nimport {milestonesKpiReset} from \"../../../actions/pws/milestones-kpi\";\r\nimport {dr4KpiReset} from \"../../../actions/pws/dr4-kpi\";\r\nimport {qualityKpiLoad, qualityKpiReset, qualityKpiSave} from \"../../../actions/pws/quality-kpi\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\nimport {addWarningToast} from \"../../../actions/app/toaster\";\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        milestones: state.pws.milestones,\r\n        healthIndicators: state.pws.healthIndicators,\r\n        requirements: state.pws.indicatorsRqs,\r\n        milestonesKpi: state.pws.milestonesKpi,\r\n        dr4Kpi: state.pws.dr4kpi,\r\n        qualityKpi: state.pws.qualityKpi\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        healthIndicatorsSubmit: (projectId, data) => dispatch(healthIndicatorsSave(projectId, data)),\r\n        healthCommentsSubmit: (projectId, data) => dispatch(healthCommentsSave(projectId, data)),\r\n        healthReload: (projectId) => dispatch(healthLoad(projectId)),\r\n        rqsSubmit: (projectId, data) => dispatch(indicatorsRqsSave(projectId, data)),\r\n        rqsReload: (projectId) => dispatch(indicatorsRqsLoad(projectId)),\r\n        qualitySubmit: (projectId, data) => dispatch(qualityKpiSave(projectId, data)),\r\n        qualityReload: (projectId) => dispatch(qualityKpiLoad(projectId)),\r\n        loadData: (projectId) => dispatch(indicatorsLoad(projectId)),\r\n        resetState: () => {\r\n            dispatch(milestonesReset());\r\n            dispatch(healthReset());\r\n            dispatch(indicatorsRqsReset());\r\n            dispatch(milestonesKpiReset());\r\n            dispatch(dr4KpiReset());\r\n            dispatch(qualityKpiReset());\r\n        },\r\n        pushWarningToast: (message) => dispatch(addWarningToast(message))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetState\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(IndicatorsTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from \"react\";\r\nimport {HTMLTable} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./cost-table.module.scss\";\r\nimport {nanToEmptyString, toTwoTrailingDigits} from \"../../util/transform-funcs\";\r\nimport Comment from \"../comment/comment\";\r\n\r\nexport default class CostTable extends React.Component {\r\n    render() {\r\n        const {tableName, data} = this.props;\r\n        let {committed, realized} = data;\r\n        if (committed == null) committed = {};\r\n        if (realized == null) realized = {};\r\n\r\n        const committedValue = toTwoTrailingDigits(nanToEmptyString(committed.value));\r\n        const realizedValue = toTwoTrailingDigits(nanToEmptyString(realized.value));\r\n        const committedMilestone = committed.milestone;\r\n        const committedMilestoneComment = committed.comment;\r\n        const realizedMilestone = realized.milestone;\r\n        const realizedMilestoneComment = realized.comment;\r\n        return (\r\n            <HTMLTable\r\n                striped\r\n                className={styles.cost_table}\r\n            >\r\n                <colgroup>\r\n                    <col className={styles.effort_col}/>\r\n                    <col className={styles.value_col}/>\r\n                    <col/>\r\n                </colgroup>\r\n                <thead>\r\n                <tr>\r\n                    <th>{tableName}</th>\r\n                    <th className={styles.data_column}>\r\n                        Value (k&euro;)\r\n                    </th>\r\n                    <th>Comment</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <td>Committed at {committedMilestone}</td>\r\n                    <td className={styles.data_column}>\r\n                        {committedValue}\r\n                    </td>\r\n                    <td>\r\n                        <Comment value={committedMilestoneComment} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Released at {realizedMilestone}</td>\r\n                    <td className={styles.data_column}>\r\n                        {realizedValue}\r\n                    </td>\r\n                    <td>\r\n                        <Comment value={realizedMilestoneComment} />\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </HTMLTable>\r\n        )\r\n    }\r\n}\r\n\r\nCostTable.propTypes = {\r\n    tableName: PropTypes.string.isRequired,\r\n    data: PropTypes.shape({\r\n        committed: PropTypes.shape({\r\n            state: PropTypes.number,\r\n            milestone: PropTypes.string,\r\n            value: PropTypes.number,\r\n            comment: PropTypes.string\r\n        }),\r\n        realized: PropTypes.shape({\r\n            state: PropTypes.number,\r\n            milestone: PropTypes.string,\r\n            value: PropTypes.number,\r\n            comment: PropTypes.string\r\n        })\r\n    }),\r\n};\r\n\r\nCostTable.defaultProps = {\r\n    data: {\r\n        committed: {},\r\n        realized: {}\r\n    }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SafeUrl from \"../safe-url/safe-url\";\r\n\r\nexport default class LastUpdatedLabel extends React.PureComponent {\r\n    render() {\r\n        const {onClick, isFileExists, label, ...others} = this.props;\r\n        const fileDownloadLabel = \"Get last uploaded file\";\r\n        return (\r\n            isFileExists\r\n                ? (\r\n                    <SafeUrl\r\n                        label={label}\r\n                        onClick={onClick}\r\n                        title={fileDownloadLabel}\r\n                        {...others}\r\n                    />\r\n                )\r\n                : (label)\r\n        )\r\n    }\r\n}\r\n\r\nLastUpdatedLabel.propTypes = {\r\n    onClick: PropTypes.func,\r\n    isFileExists: PropTypes.bool.isRequired,\r\n    label: PropTypes.string,\r\n};\r\n\r\nLastUpdatedLabel.defaultProps = {\r\n    onClick: () => {},\r\n    label: ''\r\n};","import {WorkspaceStatus} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    }\r\n};","import React from \"react\";\r\nimport CostTable from \"../../cost-table/cost-table\";\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport styles from \"./cost-tab.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {CostTabTypes, ProjectDefaults} from \"../../../util/custom-types\"\r\nimport LastUpdated from \"../../last-updated/last-updated\";\r\nimport SafeUrl from \"../../safe-url/safe-url\";\r\nimport UploadFileControlsHidden from \"../../upload-file-controls/upload-file-controls-hidden\";\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\nimport LastUpdatedLabel from \"../../last-updated-label/last-updated-label\";\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\n\r\nexport default class CostTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            templateUrl: \"http://www.google.com\"\r\n        };\r\n\r\n        this.uploadRef = React.createRef();\r\n    }\r\n\r\n    toggleControls = () => {\r\n        this.setState((prevState) => ({\r\n            editMode: !prevState.editMode\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const {loading} = this.props.cost;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            const {updated, charged, capex, fileExists} = this.props.cost.payload;\r\n            const {uploadCost, getLastUploadedFile} = this.props;\r\n            const {projectId, projectName} = this.props.defaults.payload;\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const showControls = renderHelper.displayOrNot(\"controls\");\r\n\r\n            const lastUploadedLabel = \"Last uploaded:\";\r\n            const importLabel = \"Import Cost File\";\r\n            const uploadTemplateLabel = \"Get template for upload\";\r\n            return (\r\n                <>\r\n                    <CustomCard>\r\n                        <div>\r\n                            <LastUpdatedLabel\r\n                                label={lastUploadedLabel}\r\n                                isFileExists={fileExists}\r\n                                onClick={() => getLastUploadedFile(projectId, projectName)}\r\n                            />\r\n                            <LastUpdated\r\n                                className={styles.last_updated}\r\n                                dateStr={updated}\r\n                            />\r\n                        </div>\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        {\r\n                            showControls &&\r\n                            <div className={styles.import_container}>\r\n                                <Button\r\n                                    text={importLabel}\r\n                                    icon={\"import\"}\r\n                                    onClick={this.openFileUploadDialog}\r\n                                    intent={Intent.PRIMARY}\r\n                                    minimal\r\n                                />\r\n                            </div>\r\n                        }\r\n                        <CostTable tableName={\"Manpower (charged)\"} data={charged}/>\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <CostTable tableName={\"CAPEX/OPEX\"} data={capex}/>\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <SafeUrl\r\n                            label={uploadTemplateLabel}\r\n                            url={this.state.template}\r\n                        />\r\n                    </CustomCard>\r\n\r\n                    <UploadFileControlsHidden\r\n                        uploadRef={this.uploadRef}\r\n                        onSubmit={(file) => uploadCost(projectId, file)}\r\n                    />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    openFileUploadDialog = () => {\r\n        this.uploadRef.current.click();\r\n    };\r\n}\r\n\r\nCostTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    cost: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        payload: CostTabTypes\r\n    }),\r\n    getLastUploadedFile: PropTypes.func.isRequired,\r\n    uploadCost: PropTypes.func.isRequired,\r\n};","import {connect} from \"react-redux\";\r\nimport CostTab from \"./cost-tab\";\r\nimport {costGetLastUploaded, costLoad, costReset, costUpload} from \"../../../actions/pws/cost-tab\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        cost: state.pws.costTab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(costLoad(projectId)),\r\n        uploadCost: (projectId, file) => dispatch(costUpload(projectId, file)),\r\n        getLastUploadedFile: (projectId, projectName) => dispatch(costGetLastUploaded(projectId, projectName)),\r\n        resetData: () => dispatch(costReset()),\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(CostTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatusIndicator from \"../status-indicator/status-indicator\";\r\nimport style from \"./blc-row.module.scss\";\r\nimport {Button} from \"@blueprintjs/core\";\r\nimport {blcNumberToState, getDateFromStringWithTime} from \"../../util/transform-funcs\";\r\nimport {FastField} from \"formik\";\r\nimport FormikInput from \"../controls/util-renderers\";\r\nimport Comment from \"../comment/comment\";\r\n\r\nexport default class BlcRow extends React.Component {\r\n    render() {\r\n        const {roleName, lastUpdatedBy, updatedOn, rowValues, comment, onClickEdit, isValuesEdit, isCommentsEdit} = this.props;\r\n        const tdClasses = style.td_style;\r\n        const commentName = `${this.props.rowName}.comment`;\r\n        const updatedOnString = getDateFromStringWithTime(updatedOn);\r\n        const isEditShown = this.shouldShowEditButton();\r\n        return (\r\n            <tr>\r\n                <td className={style.sticky_white}>\r\n                    <div>\r\n                        <div className={style.inline_block}>\r\n                            {\r\n                                isEditShown &&\r\n                                <Button\r\n                                    minimal\r\n                                    icon={\"edit\"}\r\n                                    intent={\"primary\"}\r\n                                    onClick={onClickEdit}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className={style.inline_block}>\r\n                            {roleName}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td className={tdClasses}>\r\n                    {lastUpdatedBy}\r\n                </td>\r\n                <td className={tdClasses}>\r\n                    {updatedOnString}\r\n                </td>\r\n\r\n                {Object.keys(rowValues).map((key) => {\r\n                    const status = blcNumberToState(rowValues[key]);\r\n                    return (\r\n                        <td\r\n                            key={key}\r\n                            className={tdClasses}\r\n                        >\r\n                            {\r\n                                isValuesEdit\r\n                                    ? this.selectElement(rowValues[key], key)\r\n                                    : (\r\n                                        <StatusIndicator\r\n                                            className={style.inline_block}\r\n                                            status={status}\r\n                                        />\r\n                                    )\r\n                            }\r\n                        </td>\r\n                    )\r\n                })}\r\n\r\n                <td className={tdClasses}>\r\n                    {isCommentsEdit\r\n                        ? (\r\n                            <FormikInput\r\n                                fill\r\n                                type=\"textarea\"\r\n                                name={commentName}\r\n                            />\r\n                        )\r\n                        : <Comment value={comment}/>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    shouldShowEditButton() {\r\n        return !this.props.isValuesEdit && !this.props.isCommentsEdit && !this.props.isControlsHidden && !this.props.blocked\r\n    }\r\n\r\n    selectElement = (num, key) => {\r\n        const name = `${this.props.rowName}.indicators.${key}`;\r\n        return (\r\n            <FastField\r\n                component=\"select\"\r\n                name={name}\r\n            >\r\n                <option value=\"\">&nbsp;</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"8\">8</option>\r\n            </FastField>\r\n        )\r\n    };\r\n}\r\n\r\nBlcRow.propTypes = {\r\n    rowName: PropTypes.string.isRequired,\r\n    roleName: PropTypes.string.isRequired,\r\n    lastUpdatedBy: PropTypes.string,\r\n    updatedOn: PropTypes.string,\r\n    className: PropTypes.string,\r\n    onClickEdit: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    isValuesEdit: PropTypes.bool,\r\n    isCommentsEdit: PropTypes.bool,\r\n    isControlsHidden: PropTypes.bool,\r\n    rowValues: PropTypes.object.isRequired,\r\n    comment: PropTypes.string,\r\n    blocked: PropTypes.bool,\r\n};\r\n\r\nBlcRow.defaultProps = {\r\n    lastUpdatedBy: '',\r\n    updatedOn: '',\r\n    className: '',\r\n    onClickEdit: () => {},\r\n    onChange: () => {},\r\n    isValuesEdit: false,\r\n    isCommentsEdit: false,\r\n    isControlsHidden: false,\r\n    comment: '',\r\n    blocked: false,\r\n}","import {WorkspaceStatus, ProjectTypes} from \"../../../util/constants\";\r\nimport {blcDashboardHelp} from \"../../../util/global-helps\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    title: {\r\n        help: blcDashboardHelp,\r\n    },\r\n    pm: {\r\n        label: \"Program Manager\"\r\n    },\r\n    pmo: {\r\n        label: \"PMO - Quality\"\r\n    },\r\n    sales: {\r\n        label: \"Sales\",\r\n        allowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    }\r\n}","import * as Yup from \"yup\";\r\nimport {ValidationErrors} from \"../../../util/constants\";\r\n\r\nexport default Yup.object().shape({\r\n    pm: Yup.object().shape({\r\n        comment: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n    }),\r\n    pmo: Yup.object().shape({\r\n        comment: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n    }),\r\n    sales: Yup.object().shape({\r\n        comment: Yup.string()\r\n            .max(256, ValidationErrors.string.MAX)\r\n            .nullable(),\r\n    })\r\n})","import React from \"react\";\r\nimport {HTMLTable, Button, Classes, Intent, Tooltip, Position} from \"@blueprintjs/core\";\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport styles from \"./blc.module.scss\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport BlcRow from \"../../blc-rows/blc-row\";\r\nimport EditSaveControls from \"../../controls/edit-save-controls/edit-save-controls\";\r\nimport style from \"../../blc-rows/blc-row.module.scss\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {Formik} from \"formik\";\r\nimport {formikFieldHandleChange} from \"../../../util/util\";\r\nimport {BlcTab, ProjectDefaults} from \"../../../util/custom-types\";\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport {BlcRowNames, Messages} from \"../../../util/constants\";\r\nimport validationSchema from \"./validation-schema\";\r\nimport OnSubmitValidationError from \"../../formik-onsubmit-validator\";\r\nimport TooltipContent from \"../../tooltip-content/tooltip-content\";\r\nimport HelpIcon from \"../../help-icon/help-icon\";\r\n\r\nexport default class BlcDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPmRow: false,\r\n            isPmoRow: false,\r\n            isSalesRow: false,\r\n            isCommentsEdit: false,\r\n        };\r\n    }\r\n\r\n    submitForm = null;\r\n    handleChange = null;\r\n\r\n    render() {\r\n        const {loading} = this.props.blcTab;\r\n        if (loading) {\r\n            return <LoadingSpinner/>\r\n        } else {\r\n            this.projectId = this.props.defaults.payload.projectId;\r\n            const validationParams = this.props.defaults.payload;\r\n            this.renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const {pm, pmo, sales, rowToSave} = this.props.blcTab.payload;\r\n            const showSubmitCancel = this.shouldShowSubmitCancel();\r\n            const showControls = this.renderHelper.displayOrNot(\"controls\");\r\n            const publishDashboardLabel = \"Publish Dashboard\";\r\n            return (\r\n                <>\r\n                    <CustomCard>\r\n                        {\r\n                            showControls &&\r\n                            <Button\r\n                                intent={Intent.SUCCESS}\r\n                                className={classNames(Classes.MINIMAL, styles.publish_btn)}\r\n                                icon={\"upload\"}\r\n                                text={publishDashboardLabel}\r\n                            />\r\n                        }\r\n                        <Formik\r\n                            isInitialValid\r\n                            enableReinitialize\r\n                            onSubmit={(values, formikActions) => {\r\n                                formikActions.setSubmitting(false);\r\n                                values.rowToSave = this.getRowToSaveValue();\r\n                                const {saveComments, saveIndicators} = this.props;\r\n                                if (this.state.isCommentsEdit) {\r\n                                    saveComments(this.projectId, values);\r\n                                } else {\r\n                                    saveIndicators(this.projectId, values);\r\n                                }\r\n\r\n                                this.cancelEdit();\r\n                            }}\r\n                            initialValues={{\r\n                                pm, pmo, sales, rowToSave\r\n                            }}\r\n                            validationSchema={\r\n                                validationSchema\r\n                            }\r\n                            render={\r\n                                (formikProps) => {\r\n                                    this.bindFormSubmission(formikProps.submitForm);\r\n                                    this.handleChange = formikFieldHandleChange(formikProps);\r\n                                    return this.renderBlcTab(formikProps);\r\n                                }\r\n                            }\r\n                        />\r\n                    </CustomCard>\r\n                    {showSubmitCancel &&\r\n                    <EditSaveControls\r\n                        editMode\r\n                        onCancel={this.handleCancel}\r\n                        onSubmit={this.submitForm}\r\n                        className={styles.controls}\r\n                    />\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.cancelEdit();\r\n        this.props.loadData(this.props.defaults.payload.projectId);\r\n    }\r\n\r\n    bindFormSubmission = (formikSubmitFunc) => {\r\n        this.submitForm = formikSubmitFunc;\r\n    };\r\n\r\n    onClickEdit = (row) => {\r\n        this.setState((prevState) => ({\r\n                [row]: !prevState[row]\r\n            }\r\n        ))\r\n    };\r\n\r\n    onClickCommentsEdit = () => {\r\n        this.setState({\r\n            isCommentsEdit: true\r\n        })\r\n    };\r\n\r\n    cancelEdit = () => {\r\n        this.setState({\r\n            isPmRow: false,\r\n            isPmoRow: false,\r\n            isSalesRow: false,\r\n            isCommentsEdit: false,\r\n        });\r\n    };\r\n\r\n    shouldShowSubmitCancel() {\r\n        return this.shouldShowEditControls() && this.renderHelper.displayOrNot(\"controls\");\r\n    }\r\n\r\n    shouldShowEditControls() {\r\n        return this.state.isPmoRow || this.state.isPmRow || this.state.isSalesRow || this.state.isCommentsEdit;\r\n    }\r\n\r\n    getRowToSaveValue = () => {\r\n        if (this.state.isPmRow) {\r\n            return \"pm\";\r\n        }\r\n\r\n        if (this.state.isPmoRow) {\r\n            return \"pmo\";\r\n        }\r\n\r\n        if (this.state.isSalesRow) {\r\n            return \"sales\";\r\n        }\r\n    };\r\n\r\n    renderBlcTab = (formikProps) => {\r\n        const thClasses = styles.column_align_center;\r\n        const thCommentClasses = classNames(styles.column_align_center);\r\n        const controlsAllowed = this.renderHelper.displayOrNot(\"controls\");\r\n        const help = this.renderHelper.getHelpObject(\"title\");\r\n        const {pm, pmo, sales} = formikProps.values;\r\n        return (\r\n            <div className={styles.relative_wrapper}>\r\n                <Tooltip\r\n                    position={Position.TOP}\r\n                    content={\r\n                        <TooltipContent\r\n                            title={help.title}\r\n                            content={help.content}\r\n                        />\r\n                    }\r\n                >\r\n                    <HelpIcon className={styles.help_icon}/>\r\n                </Tooltip>\r\n                <div className={styles.overflow_wrapper}>\r\n                    <HTMLTable\r\n                        bordered\r\n                        striped\r\n                        className={styles.blc_table}\r\n                    >\r\n                        {this.renderColGroup()}\r\n                        {this.renderHeader(thClasses, thCommentClasses, controlsAllowed)}\r\n\r\n                        <tbody>\r\n                        <BlcRow\r\n                            rowName={BlcRowNames.PM}\r\n                            roleName={this.renderHelper.getLabelById(BlcRowNames.PM)}\r\n                            lastUpdatedBy={pm.csl}\r\n                            updatedOn={pm.updatedOn}\r\n                            rowValues={pm.indicators}\r\n                            comment={pm.comment}\r\n                            onClickEdit={() => (this.onClickEdit(\"isPmRow\"))}\r\n                            onChange={this.handleChange}\r\n                            isValuesEdit={this.state.isPmRow}\r\n                            isCommentsEdit={this.state.isCommentsEdit}\r\n                            isControlsHidden={this.isInEditMode()}\r\n                            blocked={!controlsAllowed}\r\n                        />\r\n                        <BlcRow\r\n                            rowName={BlcRowNames.PMO}\r\n                            roleName={this.renderHelper.getLabelById(BlcRowNames.PMO)}\r\n                            lastUpdatedBy={pmo.csl}\r\n                            updatedOn={pmo.updatedOn}\r\n                            rowValues={pmo.indicators}\r\n                            comment={pmo.comment}\r\n                            onClickEdit={() => (this.onClickEdit(\"isPmoRow\"))}\r\n                            onChange={this.handleChange}\r\n                            isValuesEdit={this.state.isPmoRow}\r\n                            isCommentsEdit={this.state.isCommentsEdit}\r\n                            isControlsHidden={this.isInEditMode()}\r\n                            blocked={!controlsAllowed}\r\n                        />\r\n                        {\r\n                            this.renderHelper.displayOrNot(BlcRowNames.SALES) &&\r\n                            <BlcRow\r\n                                rowName={BlcRowNames.SALES}\r\n                                roleName={this.renderHelper.getLabelById(BlcRowNames.SALES)}\r\n                                lastUpdatedBy={sales.csl}\r\n                                updatedOn={sales.updatedOn}\r\n                                rowValues={sales.indicators}\r\n                                comment={sales.comment}\r\n                                onClickEdit={() => (this.onClickEdit(\"isSalesRow\"))}\r\n                                onChange={this.handleChange}\r\n                                isValuesEdit={this.state.isSalesRow}\r\n                                isCommentsEdit={this.state.isCommentsEdit}\r\n                                isControlsHidden={this.isInEditMode()}\r\n                                blocked={!controlsAllowed}\r\n                            />\r\n                        }\r\n                        </tbody>\r\n                    </HTMLTable>\r\n                </div>\r\n                <OnSubmitValidationError callback={this.handleSubmitWithErrors}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderColGroup = () => (\r\n        <colgroup>\r\n            <col className={styles.role_col}/>\r\n            <col className={styles.who_col}/>\r\n            <col className={styles.updated_col}/>\r\n            <col className={styles.or_col}/>\r\n            <col className={styles.charter_col}/>\r\n            <col className={styles.proj_plan_col}/>\r\n            <col className={styles.tailoring_col}/>\r\n            <col className={styles.prog_mgr_col}/>\r\n            <col className={styles.core_col}/>\r\n            <col className={styles.bp_plan_col}/>\r\n            <col className={styles.bp_sales}/>\r\n            <col className={styles.lp_plan}/>\r\n            <col className={styles.lp_sales}/>\r\n            <col className={styles.les_learned}/>\r\n            <col className={styles.risks_col}/>\r\n            <col className={styles.comment}/>\r\n        </colgroup>\r\n    );\r\n\r\n    renderHeader = (thClasses, thCommentClasses, allowed) => {\r\n        const isEditButton = this.shouldShowEditButton() && allowed;\r\n        const roleClasses = classNames(thClasses, style.sticky_white);\r\n        return (\r\n            <thead>\r\n            <tr>\r\n                <th className={roleClasses} rowSpan={2}>\r\n                    Role\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Who</th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Updated On\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Opportunity Review\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Charter\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Project Plan\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Tailoring\r\n                </th>\r\n                <th className={thClasses} colSpan={2}>\r\n                    Accountability\r\n                </th>\r\n                <th className={thClasses} colSpan={2}>\r\n                    Business Plan\r\n                </th>\r\n                <th className={thClasses} colSpan={2}>\r\n                    Launch Plan\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Lessons Learned\r\n                </th>\r\n                <th className={thClasses} rowSpan={2}>\r\n                    Risks\r\n                </th>\r\n                <th className={thCommentClasses} rowSpan={2}>\r\n                    <div>\r\n                        <div className={style.inline_block}>\r\n                            {\r\n                                isEditButton &&\r\n                                <Button\r\n                                    minimal\r\n                                    icon={\"edit\"}\r\n                                    intent={\"primary\"}\r\n                                    onClick={this.onClickCommentsEdit}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className={style.inline_block}>\r\n                            Comments\r\n                        </div>\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className={thClasses}>Program Mgr</th>\r\n                <th className={thClasses}>Core team members</th>\r\n                <th className={thClasses}>Plan</th>\r\n                <th className={thClasses}>Sales Buy-in</th>\r\n                <th className={thClasses}>Plan</th>\r\n                <th className={thClasses}>Sales Buy-in</th>\r\n            </tr>\r\n            </thead>\r\n        );\r\n    };\r\n\r\n    shouldShowEditButton() {\r\n        return !this.state.isPmRow && !this.state.isPmoRow && !this.state.isSalesRow && !this.state.isCommentsEdit;\r\n    }\r\n\r\n    isInEditMode = () => {\r\n        return (this.state.isPmRow || this.state.isPmoRow || this.state.isSalesRow || this.state.isCommentsEdit)\r\n    };\r\n\r\n    handleSubmitWithErrors = (formikProps) => {\r\n        if (!formikProps.isValid) {\r\n            this.props.pushWarningToast(Messages.FORM_SUBMIT_ERROR);\r\n        }\r\n    }\r\n}\r\n\r\nBlcDashboard.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    saveIndicators: PropTypes.func,\r\n    saveComments: PropTypes.func,\r\n    blcTab: BlcTab.isRequired,\r\n    pushWarningToast: PropTypes.func\r\n};","import { connect } from 'react-redux';\r\nimport blcTab from \"./blc\";\r\nimport {blcLoad, blcReset, blcCommentsSave, blcIndicatorsSave} from \"../../../actions/pws/blc-tab\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\nimport {addWarningToast} from \"../../../actions/app/toaster\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        blcTab: state.pws.blcTab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(blcLoad(projectId)),\r\n        resetData: () => dispatch(blcReset()),\r\n        saveIndicators: (projectId, data) => dispatch(blcIndicatorsSave(projectId, data)),\r\n        saveComments: (projectId, data) => dispatch(blcCommentsSave(projectId, data)),\r\n        pushWarningToast: (message) => dispatch(addWarningToast(message))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(blcTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import {boolToYesNo} from \"../../../util/transform-funcs\";\r\nimport {\r\n    dateDecorator,\r\n    errorDisplayDecorator,\r\n    impactDecorator, preDecorator,\r\n    probabilityDecorator\r\n} from \"../../../util/common-decorators/common-decorators\";\r\n\r\nexport default [\r\n    {\r\n        id: \"impact\", headerName: \"Impact\",\r\n        style: {\r\n            header: {\r\n                width: \"70px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\",\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"probability\", headerName: \"Probability\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: probabilityDecorator\r\n    },\r\n    {\r\n        id: \"rating\", headerName: \"Rating\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: impactDecorator\r\n    },\r\n    {\r\n        id: \"previous\", headerName: \"Previous\",\r\n        style: {\r\n            header: {\r\n                width: \"80px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"initial\", headerName: \"Initial\",\r\n        style: {\r\n            header: {\r\n                width: \"70px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"riskDisplayId\", headerName: \"Risk ID\",\r\n        style: {\r\n            header: {\r\n                width: \"80px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"riskDescription\", headerName: \"Risk Description\",\r\n        style: {\r\n            header: {\r\n                width: \"300px\"\r\n            },\r\n            column: {\r\n                wordBreak: \"break-word\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: (value) => {\r\n            let result = errorDisplayDecorator(value);\r\n            return preDecorator(result);\r\n        }\r\n    },\r\n    {\r\n        id: \"impactDescription\", headerName: \"Impact Description\",\r\n        style: {\r\n            header: {\r\n                width: \"300px\"\r\n            },\r\n            column: {\r\n                wordBreak: \"break-word\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: (value) => {\r\n            let result = errorDisplayDecorator(value);\r\n            return preDecorator(result);\r\n        }\r\n    },\r\n    {\r\n        id: \"businessImpact\", headerName: \"Business Impact\",\r\n        style: {\r\n            header: {\r\n                width: \"300px\"\r\n            },\r\n            column: {\r\n                wordBreak: \"break-word\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: (value) => {\r\n            let result = errorDisplayDecorator(value);\r\n            return preDecorator(result);\r\n        }\r\n    },\r\n    {\r\n        id: \"riskResponse\", headerName: \"Risk Response\",\r\n        style: {\r\n            header: {\r\n                width: \"100px\"\r\n            },\r\n        },\r\n        searchType: \"input\",\r\n        decorator: (value) => {\r\n            let result = errorDisplayDecorator(value);\r\n            return preDecorator(result);\r\n        }\r\n    },\r\n    {\r\n        id: \"mitigation\", headerName: \"Mitigation Plan Description\",\r\n        style: {\r\n            header: {\r\n                width: \"300px\"\r\n            },\r\n        },\r\n        searchType: \"input\",\r\n        decorator: (value) => {\r\n            let result = errorDisplayDecorator(value);\r\n            return preDecorator(result);\r\n        }\r\n    },\r\n    {\r\n        id: \"decisionDate\", headerName: \"Decision Date\",\r\n        style: {\r\n            header: {\r\n                width: \"120px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"estimatedCost\", headerName: \"Estimated Cost\",\r\n        style: {\r\n            header: {\r\n                width: \"125px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"provisionBudget\", headerName: \"Provision for budget\",\r\n        style: {\r\n            header: {\r\n                width: \"130px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"responsible\", headerName: \"Responsible\",\r\n        style: {\r\n            header: {\r\n                width: \"120px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"target\", headerName: \"Target (Plan)\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"done\", headerName: \"Done (Do)\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"result\", headerName: \"Result (Check, Act)\",\r\n        style: {\r\n            header: {\r\n                width: \"120px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"updatedOn\", headerName: \"Updated On\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"updatedBy\", headerName: \"Updated By\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        decorator: errorDisplayDecorator\r\n    },\r\n    {\r\n        id: \"report\", headerName: \"Report\",\r\n        style: {\r\n            header: {\r\n                width: \"90px\"\r\n            },\r\n            column: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"checkbox\",\r\n        editable: true,\r\n        decorator: (data) => boolToYesNo(data)\r\n    },\r\n];","import React from 'react';\r\nimport {Menu, MenuItem} from \"@blueprintjs/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContextMenu extends React.PureComponent {\r\n    render() {\r\n        const {onEdit, ...menuProps} = this.props;\r\n        const editLabel = \"Edit 'Reported' flag\";\r\n        return (\r\n            <Menu {...menuProps}>\r\n                <MenuItem\r\n                    icon={\"edit\"}\r\n                    text={editLabel}\r\n                    onClick={onEdit}\r\n                />\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    onEdit: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TableFooter extends React.PureComponent {\r\n    render() {\r\n        const {onExcelExport, onExcelImport} = this.props;\r\n        return (\r\n            <>\r\n                {\r\n                    onExcelExport &&\r\n                    <Button\r\n                        text={\"Export to Excel\"}\r\n                        icon={\"export\"}\r\n                        onClick={onExcelExport}\r\n                        intent={Intent.PRIMARY}\r\n                        minimal\r\n                    />\r\n                }\r\n                {\r\n                    onExcelImport &&\r\n                    <Button\r\n                        text={\"Import Excel\"}\r\n                        icon={\"import\"}\r\n                        onClick={onExcelImport}\r\n                        intent={Intent.PRIMARY}\r\n                        minimal\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    onExcelExport: PropTypes.func.isRequired,\r\n    onExcelImport: PropTypes.func.isRequired\r\n};","import React from \"react\";\r\nimport styles from \"./excel-error.module.scss\";\r\nimport {ExcelErrorTypes} from  \"../../util/custom-types\";\r\n\r\nexport default class ExcelError extends React.PureComponent {\r\n    render() {\r\n        const {cellIndex, rowIndex, message} = this.props;\r\n        const displayedCellIndex = cellIndex + 1;\r\n        const displayedRowIndex = rowIndex + 1;\r\n        return(\r\n            <div className={styles.error_margin}>\r\n                <b>Column:</b> {displayedCellIndex}. <b>Row:</b> {displayedRowIndex}. <br/>\r\n                <b>Error:</b> {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExcelError.propTypes = {\r\n    ExcelErrorTypes\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Classes, Dialog, Icon} from \"@blueprintjs/core\";\r\nimport {Intent} from \"@blueprintjs/core/lib/cjs/common/intent\";\r\nimport ExcelError from \"../excel-error/excel-error\";\r\nimport {ExcelErrorTypes} from \"../../util/custom-types\";\r\n\r\n\r\nexport default class ImportErrorsDialog extends React.PureComponent {\r\n    render() {\r\n        const {isOpen, onClose, errors} = this.props;\r\n        const message = \"Excel file uploaded with following errors:\";\r\n        const dialogTitle = \"Warning\";\r\n        return (\r\n            <Dialog\r\n                isOpen={isOpen}\r\n                title={dialogTitle}\r\n                icon={\r\n                    <Icon\r\n                        icon={\"warning-sign\"}\r\n                        intent={Intent.WARNING}\r\n                    />\r\n                }\r\n                onClose={onClose}\r\n            >\r\n                <div className={Classes.DIALOG_BODY}>\r\n                    {message}\r\n                    <ul>\r\n                        {errors.map((err, index) =>\r\n                            <li key={index}>\r\n                                <ExcelError {...err}/>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nImportErrorsDialog.defaultProps = {\r\n    errors: []\r\n};\r\n\r\nImportErrorsDialog.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    errors: PropTypes.arrayOf(PropTypes.shape({\r\n        ExcelErrorTypes\r\n    })),\r\n};","import {WorkspaceStatus} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport EnchantedTable from \"../../enchanted-table/enchanted-table\";\r\nimport colSettings from \"./table-config\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {ProjectDefaults, RisksTab} from \"../../../util/custom-types\";\r\nimport {createEnchantedTableFilters} from \"../../../util/util\";\r\nimport ContextMenu from \"./components/context-menu\";\r\nimport TableFooter from \"./components/table-footer\";\r\nimport UploadFileControlsHidden from \"../../upload-file-controls/upload-file-controls-hidden\";\r\nimport ImportErrorsDialog from \"../../import-errors-dialog/import-errors-dialog\";\r\nimport LastUpdatedLabel from \"../../last-updated-label/last-updated-label\";\r\nimport LastUpdated from \"../../last-updated/last-updated\";\r\nimport styles from \"./risk.module.scss\";\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport SafeUrl from \"../../safe-url/safe-url\";\r\n\r\nexport default class Risks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            file: null,\r\n            url: \"http://google.com\"\r\n        };\r\n        this.uploadRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const {loading} = this.props.risks;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            const {payload, errorListShowed} = this.props.risks;\r\n            const {uploadRisksFile, setErrorsShowedTrue, getLastUploadedFile} = this.props;\r\n            this.projectId = this.props.defaults.payload.projectId;\r\n            const {projectName} = this.props.defaults.payload;\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n\r\n            const {errors} = this.props.risks;\r\n\r\n            const picklists = createEnchantedTableFilters(payload.risks);\r\n            const isImportDialogOpened = !errorListShowed && !!errors;\r\n            return (\r\n                <div className={styles.container}>\r\n                    <CustomCard>\r\n                        <div className={styles.last_updated_container}>\r\n                            <LastUpdatedLabel\r\n                                isFileExists={payload.fileExists}\r\n                                onClick={() => getLastUploadedFile(this.projectId, projectName)}\r\n                                label={\"Last uploaded:\"}\r\n                            />\r\n                            <LastUpdated\r\n                                className={styles.last_updated}\r\n                                dateStr={payload.lastUploaded}\r\n                            />\r\n                        </div>\r\n                    </CustomCard>\r\n                    <CustomCard className={styles.table_container}>\r\n                        <EnchantedTable\r\n                            data={payload.risks}\r\n                            columns={colSettings}\r\n                            filterValues={picklists}\r\n                            onSubmit={this.handleSaveRisks}\r\n                            striped\r\n                            interactive\r\n                            bordered\r\n                            editable\r\n                            contextMenu={this.getContextMenu(renderHelper)}\r\n                            renderFooter={this.getTableFooter(renderHelper)}\r\n                        />\r\n                        <UploadFileControlsHidden\r\n                            uploadRef={this.uploadRef}\r\n                            onSubmit={(file) => uploadRisksFile(this.projectId, file)}\r\n                        />\r\n                        <ImportErrorsDialog\r\n                            isOpen={isImportDialogOpened}\r\n                            onClose={setErrorsShowedTrue}\r\n                            errors={errors}\r\n                        />\r\n                    </CustomCard>\r\n                    <CustomCard>\r\n                        <SafeUrl\r\n                            label={\"Get template for upload\"}\r\n                            url={this.state.url}\r\n                        />\r\n                    </CustomCard>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    getContextMenu = (renderHelper) => {\r\n        if (renderHelper.displayOrNot(\"controls\")) {\r\n            return (\r\n                (menuFuncs) => <ContextMenu onEdit={menuFuncs.editRow}/>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTableFooter = (renderHelper) => {\r\n        const downloadRisks = this.props.downloadRisks;\r\n        const {projectName} = this.props.defaults.payload;\r\n        const footerProps = {\r\n            onExcelExport: () => downloadRisks(this.projectId, projectName)\r\n        }\r\n\r\n        if (renderHelper.displayOrNot(\"controls\")) {\r\n            footerProps.onExcelImport = this.openFileUploadDialog;\r\n        }\r\n\r\n        return (\r\n            () => <TableFooter {...footerProps}/>\r\n        )\r\n    }\r\n\r\n    openFileUploadDialog = () => {\r\n        this.uploadRef.current.click();\r\n    };\r\n\r\n    handleSaveRisks = (data) => {\r\n        this.props.saveRisk(this.projectId, data);\r\n    };\r\n}\r\n\r\nRisks.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    risks: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        payload: RisksTab\r\n    }),\r\n    saveRisk: PropTypes.func.isRequired,\r\n    uploadRisksFile: PropTypes.func.isRequired,\r\n    downloadRisks: PropTypes.func.isRequired,\r\n    getLastUploadedFile: PropTypes.func.isRequired,\r\n    setErrorsShowedTrue: PropTypes.func.isRequired,\r\n};","import {connect} from \"react-redux\";\r\nimport {\r\n    downloadRisks, getLastUploadedRisks,\r\n    loadRisks,\r\n    resetRisks,\r\n    saveRisk,\r\n    setErrorsShowedTrue,\r\n    uploadRisks\r\n} from \"../../../actions/pws/risks/risks-tab\";\r\nimport Risks from \"./risks\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        risks: state.pws.risks.tab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadRisks(projectId)),\r\n        resetData: () => dispatch(resetRisks()),\r\n        saveRisk: (projectId, data) => dispatch(saveRisk(projectId, data)),\r\n        uploadRisksFile: (projectId, data) => dispatch(uploadRisks(projectId, data)),\r\n        downloadRisks: (projectId, projectName) => dispatch(downloadRisks(projectId, projectName)),\r\n        getLastUploadedFile: (projectId, projectName) => dispatch(getLastUploadedRisks(projectId, projectName)),\r\n        setErrorsShowedTrue: () => dispatch(setErrorsShowedTrue())\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(Risks), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import {dateDecorator, arrayDecorator, preDecorator} from \"../../../util/common-decorators/common-decorators\";\r\n\r\nexport default [\r\n    {\r\n        id: \"registry\",\r\n        headerName: \"Registry Type\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 80\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"select\",\r\n        selectValues: [\r\n            {value: \"\", label: \"\"},\r\n            {value: \"ACTION\", label: \"Action\"},\r\n            {value: \"INFORMATIONAL\", label: \"Informational\"},\r\n            {value: \"DECISION\", label: \"Decision\"},\r\n        ]\r\n    },\r\n    {\r\n        id: \"uid\",\r\n        headerName: \"Unique ID\",\r\n        style: {\r\n            header: {\r\n                width: 80\r\n            }\r\n        },\r\n        searchType: \"multiselect\"\r\n    },\r\n    {\r\n        id: \"title\",\r\n        headerName: \"Title\",\r\n        editable: true,\r\n        inputType: \"text\",\r\n        style: {\r\n            header: {\r\n                width: 150\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n    },\r\n    {\r\n        id: \"state\",\r\n        headerName: \"State\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 80\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"select\",\r\n        selectValues: [\r\n            {value: \"\", label: \"\"},\r\n            {value: \"ACTIVE\", label: \"Active\"},\r\n            {value: \"POSTPONED\", label: \"Postponed\"},\r\n            {value: \"CLOSED\", label: \"Closed\"},\r\n            {value: \"NOT_OCCUR\", label: \"Did not occur\"},\r\n        ],\r\n    },\r\n    {\r\n        id: \"priority\",\r\n        headerName: \"Priority\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 80\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"select\",\r\n        selectValues: [\r\n            {value: \"\", label: \"\"},\r\n            {value: \"HIGH\", label: \"High\"},\r\n            {value: \"MEDIUM\", label: \"Medium\"},\r\n            {value: \"LOW\", label: \"Low\"},\r\n        ]\r\n    },\r\n    {\r\n        id: \"owner\",\r\n        headerName: \"Owner\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 150\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"text\"\r\n    },\r\n    {\r\n        id: \"optionalInfo\",\r\n        headerName: \"Optional Information\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 260\r\n            }\r\n        },\r\n        inputType: \"textarea\",\r\n        searchType: \"input\",\r\n        decorator: preDecorator\r\n    },\r\n    {\r\n        id: \"dueDate\",\r\n        headerName: \"Due Date\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 90\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        inputType: \"date\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"description\",\r\n        headerName: \"Detailed Description\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 250\r\n            }\r\n        },\r\n        inputType: \"textarea\",\r\n        searchType: \"input\",\r\n        decorator: preDecorator\r\n    },\r\n    {\r\n        id: \"status\",\r\n        headerName: \"Status updates and Resolution Description\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 250\r\n            }\r\n        },\r\n        inputType: \"textarea\",\r\n        searchType: \"input\",\r\n        decorator: preDecorator\r\n    },\r\n    {\r\n        id: \"createdDate\",\r\n        headerName: \"Created Date\",\r\n        style: {\r\n            header: {\r\n                width: 90\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"closedDate\",\r\n        headerName: \"Closed Date\",\r\n        style: {\r\n            header: {\r\n                width: 90\r\n            }\r\n        },\r\n        searchType: \"multiselect\",\r\n        decorator: dateDecorator\r\n    },\r\n    {\r\n        id: \"relatedRisks\",\r\n        headerName: \"Related Risks\",\r\n        editable: true,\r\n        style: {\r\n            header: {\r\n                width: 80\r\n            }\r\n        },\r\n        searchType: \"input\",\r\n        inputType: \"multiselect\",\r\n        decorator: arrayDecorator\r\n    },\r\n];","import React from 'react';\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TableFooter(props) {\r\n    const {onRefresh, onAdd, onExport, fileExporting, ...containerProps} = props;\r\n    return (\r\n        <div {...containerProps}>\r\n            {\r\n                onRefresh &&\r\n                <Button\r\n                    minimal\r\n                    large\r\n                    icon={\"refresh\"}\r\n                    intent={Intent.PRIMARY}\r\n                    onClick={onRefresh}\r\n                />\r\n            }\r\n            {\r\n                onAdd &&\r\n                <Button\r\n                    minimal\r\n                    large\r\n                    icon={\"add\"}\r\n                    intent={Intent.PRIMARY}\r\n                    onClick={onAdd}\r\n                />\r\n            }\r\n            {\r\n                onExport &&\r\n                <Button\r\n                    loading={fileExporting}\r\n                    text={\"Export to Excel\"}\r\n                    icon={\"export\"}\r\n                    onClick={onExport}\r\n                    intent={Intent.PRIMARY}\r\n                    minimal\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    onRefresh: PropTypes.func,\r\n    onAdd: PropTypes.func,\r\n    onExport: PropTypes.func,\r\n    fileExporting: PropTypes.bool,\r\n};\r\n\r\n","import React from 'react';\r\nimport {Intent, Menu, MenuItem} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContextMenu extends React.PureComponent {\r\n    render() {\r\n        const {onEdit, onDelete, ...menuProps} = this.props;\r\n        const editTitle = \"Edit action\";\r\n        const deleteTitle = \"Delete action\";\r\n        return (\r\n            <>\r\n                <Menu {...menuProps}>\r\n                    <MenuItem\r\n                        icon={\"edit\"}\r\n                        text={editTitle}\r\n                        onClick={onEdit}\r\n                    />\r\n                    <MenuItem\r\n                        icon={\"delete\"}\r\n                        intent={Intent.DANGER}\r\n                        text={deleteTitle}\r\n                        onClick={onDelete}\r\n                    />\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    onEdit: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};","import * as Yup from \"yup\";\r\nimport {ValidationErrors} from \"../../../util/constants\";\r\n\r\nexport default Yup.object().shape({\r\n    registry: Yup.string()\r\n        .required(ValidationErrors.REQUIRED),\r\n    title: Yup.string()\r\n        .max(255, ValidationErrors.string.MAX)\r\n        .required(ValidationErrors.REQUIRED),\r\n    owner: Yup.string()\r\n        .max(255, ValidationErrors.string.MAX),\r\n    state: Yup.string()\r\n        .required(ValidationErrors.REQUIRED),\r\n    priority: Yup.string()\r\n        .required(ValidationErrors.REQUIRED),\r\n});","import {WorkspaceStatus} from \"../../../util/constants\";\r\n\r\nexport default {\r\n    controls: {\r\n        notAllowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.DISABLED],\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport EnchantedTable from \"../../enchanted-table/enchanted-table\";\r\nimport tableConfig from \"./table-config\";\r\nimport {createEnchantedTableFilters} from \"../../../util/util\";\r\nimport TableFooter from \"./components/tableFooter\";\r\nimport ContextMenu from \"./components/contextMenu\";\r\nimport validationSchema from \"./validation-schema\";\r\nimport renderFields from \"./fields\";\r\nimport {ProjectDefaults} from \"../../../util/custom-types\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport styles from \"./actions.module.scss\";\r\nimport {Intent, Icon} from \"@blueprintjs/core\";\r\nimport ConfirmationPopup from \"../../confirmation-popup/confirmation-popup\";\r\nimport {Messages} from \"../../../util/constants\";\r\n\r\nexport default class Actions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentActionUid: -1,\r\n            isDialogOpen: false\r\n        }\r\n\r\n        this.onSubmitErrorHandler = () => this.props.pushWarningToast(Messages.FORM_SUBMIT_ERROR);\r\n    }\r\n\r\n    render() {\r\n        const {loading} = this.props.actions;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            this.projectId = this.props.defaults.payload.projectId;\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const {payload} = this.props.actions;\r\n            const filters = createEnchantedTableFilters(payload);\r\n            let editDynamicInputVals = {relatedRisks: this.getDynamicInputRisks()};\r\n\r\n            const confirmTitle = \"Deletion confirmation\";\r\n            const confirmBody = \"It is a permanent operation. You will not be able to restore deleted action.\";\r\n            return (\r\n                <CustomCard className={styles.table_container}>\r\n                    <EnchantedTable\r\n                        data={payload}\r\n                        columns={tableConfig}\r\n                        filterValues={filters}\r\n                        editDynamicInputVals={editDynamicInputVals}\r\n                        onSubmit={this.handleSaveAction}\r\n                        editable\r\n                        striped\r\n                        interactive\r\n                        bordered\r\n                        validationSchema={validationSchema}\r\n                        contextMenu={this.getContextMenu(renderHelper)}\r\n                        renderFooter={this.getTableFooter(renderHelper)}\r\n                        onSubmitErrorCallback={this.onSubmitErrorHandler}\r\n                    />\r\n                    <ConfirmationPopup\r\n                        isOpen={this.state.isDialogOpen}\r\n                        onClose={this.toggleConfirmDialog}\r\n                        title={confirmTitle}\r\n                        icon={<Icon icon={\"warning-sign\"} intent={Intent.DANGER}/>}\r\n                        body={confirmBody}\r\n                        onConfirm={() => this.handleDeleteAction(this.state.currentActionUid)}\r\n                        onCancel={this.toggleConfirmDialog}\r\n                        confirmLabel={\"Delete\"}\r\n                    />\r\n                </CustomCard>\r\n            )\r\n        }\r\n    }\r\n\r\n    getDynamicInputRisks() {\r\n        const relatedRisks = this.props.relatedRisks.payload;\r\n        return relatedRisks !== undefined ? relatedRisks.map((number) => ({value: number, label: `${number}`})) : [];\r\n    }\r\n\r\n    getTableFooter = (renderHelper) => {\r\n        const renderable = renderHelper.displayOrNot(\"controls\");\r\n        const props = {\r\n            onRefresh: this.handleLoadData,\r\n            onExport: this.handleExportActions,\r\n            fileExporting: this.props.actions.fileExport\r\n        };\r\n        return (\r\n            (tableFuncs) => {\r\n                if (renderable) {\r\n                    props.onAdd = tableFuncs.dialogOpen;\r\n                }\r\n                return <TableFooter {...props}/>\r\n            }\r\n        )\r\n    }\r\n\r\n    toggleConfirmDialog = (actionUid) => {\r\n        this.setState({currentActionUid: actionUid});\r\n        this.setState((prev) => ({isDialogOpen: !prev.isDialogOpen}))\r\n    }\r\n\r\n    getContextMenu = (renderHelper) => {\r\n        if (renderHelper.displayOrNot(\"controls\")) {\r\n            return (\r\n                (menuFuncs) => {\r\n                    return (\r\n                        <ContextMenu\r\n                            onEdit={menuFuncs.editRow}\r\n                            onDelete={() => this.toggleConfirmDialog(menuFuncs.getRow().uid)}\r\n                        />\r\n                    )\r\n                }\r\n            )\r\n        }\r\n        return null;\r\n    };\r\n\r\n    handleSaveAction = (data) => {\r\n        if (data.relatedRisks === \"\") {\r\n            data.relatedRisks = [];\r\n        }\r\n        this.props.saveAction(this.projectId, data);\r\n    };\r\n\r\n    handleDeleteAction = (data) => {\r\n        this.props.deleteAction(this.projectId, data);\r\n        this.toggleConfirmDialog();\r\n    };\r\n\r\n    handleExportActions = () => {\r\n        const {projectId, projectName} = this.props.defaults.payload;\r\n        this.props.exportActions(projectId, projectName);\r\n    }\r\n\r\n    handleLoadData = () => {\r\n        this.props.loadData(this.projectId);\r\n    };\r\n}\r\n\r\nActions.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    actions: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.arrayOf(PropTypes.object),\r\n    }),\r\n    loadData: PropTypes.func.isRequired,\r\n    relatedRisks: PropTypes.shape({\r\n        payload: PropTypes.arrayOf(PropTypes.string),\r\n        loading: PropTypes.bool,\r\n        fileExport: PropTypes.bool,\r\n    }),\r\n    saveAction: PropTypes.func,\r\n    deleteAction: PropTypes.func,\r\n    exportActions: PropTypes.func,\r\n    pushWarningToast: PropTypes.func,\r\n};","import {connect} from 'react-redux';\r\nimport {actionsLoad, actionsReset, actionSave, actionDelete, actionsExport} from \"../../../actions/pws/actions-tab\";\r\nimport Actions from \"./actions\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\nimport {loadRiskIds, riskIdsReset} from \"../../../actions/pws/risks/risks-related\";\r\nimport {addWarningToast} from \"../../../actions/app/toaster\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        actions: state.pws.actions,\r\n        relatedRisks: state.pws.risks.related,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saveAction: (projectId, data) => {\r\n            dispatch(actionSave(projectId, data))\r\n        },\r\n        deleteAction: (projectId, uid) => {\r\n            dispatch(actionDelete(projectId, uid))\r\n        },\r\n        exportActions: (projectId, projectName) => {\r\n            dispatch(actionsExport(projectId, projectName))\r\n        },\r\n        loadData: (projectId) => {\r\n            dispatch(actionsLoad(projectId));\r\n            dispatch(loadRiskIds(projectId));\r\n        },\r\n        resetData: () => {\r\n            dispatch(actionsReset());\r\n            dispatch(riskIdsReset())\r\n        },\r\n        pushWarningToast: (message) => dispatch(addWarningToast(message))\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(Actions), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from 'react';\r\nimport {arrayDecorator} from \"../../../util/common-decorators/common-decorators\";\r\nimport SafeUrl from \"../../safe-url/safe-url\";\r\n\r\nexport default [\r\n    {\r\n        id: \"reqId\",\r\n        headerName: \"Req-Id\",\r\n        searchType: \"input\",\r\n        style: {\r\n            column: {\r\n                maxWidth: \"100px\"\r\n            },\r\n            header: {\r\n                maxWidth: \"100px\"\r\n            }\r\n        },\r\n        decorator: function (value) {\r\n            const url = `http://www.jira.com/${value}`;\r\n            return <SafeUrl url={url} label={value} />;\r\n        }\r\n    },\r\n    {\r\n        id: \"headline\",\r\n        headerName: \"Headline\",\r\n        searchType: \"input\",\r\n        style: {\r\n            column: {\r\n                width: \"300px\"\r\n            },\r\n            header: {\r\n                width: \"300px\"\r\n            }\r\n        },\r\n    },\r\n    {\r\n        id: \"priority\",\r\n        headerName: \"Priority\",\r\n        searchType: \"input\",\r\n    },\r\n    {\r\n        id: \"status\",\r\n        headerName: \"Status\",\r\n        searchType: \"input\",\r\n    },\r\n    {\r\n        id: \"fixVersions\",\r\n        headerName: \"Fix versions\",\r\n        searchType: \"input\",\r\n        decorator: arrayDecorator\r\n    },\r\n    {\r\n        id: \"components\",\r\n        headerName: \"Components\",\r\n        searchType: \"input\",\r\n        style: {\r\n            column: {\r\n                width: \"300px\"\r\n            },\r\n            header: {\r\n                width: \"300px\"\r\n            }\r\n        },\r\n    },\r\n];","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Intent} from \"@blueprintjs/core\";\r\n\r\nexport default class TableFooter extends React.PureComponent {\r\n    render() {\r\n        const {onRefresh, ...containerProps} = this.props;\r\n        return (\r\n            <div {...containerProps}>\r\n                <Button\r\n                    minimal\r\n                    large\r\n                    icon={\"refresh\"}\r\n                    intent={Intent.PRIMARY}\r\n                    onClick={onRefresh}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    onRefresh: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport EnchantedTable from \"../../enchanted-table/enchanted-table\";\r\nimport PropTypes from 'prop-types';\r\nimport tableConfig from './table-config';\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport {ProjectDefaults, RqsTabRq} from \"../../../util/custom-types\";\r\nimport TableFooter from \"./components/table-footer\";\r\nimport styles from \"./requirements-tab.module.scss\";\r\n\r\nexport default class RequirementsTab extends React.Component {\r\n    render() {\r\n        const {loading} = this.props.rqs;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            this.projectId = this.props.defaults.payload.projectId;\r\n            const {payload} = this.props.rqs;\r\n            const noDataMessage = \"No data found. Check 'Requirements(JIRA)' and 'RQ Release Name(JIRA)' fields\";\r\n            return (\r\n                <CustomCard className={styles.table_container}>\r\n                    <EnchantedTable\r\n                        striped\r\n                        interactive\r\n                        bordered\r\n                        noDataMessage={noDataMessage}\r\n                        data={payload}\r\n                        columns={tableConfig}\r\n                        renderFooter={() => (\r\n                            <TableFooter onRefresh={this.handleLoadData}/>\r\n                        )}\r\n                    />\r\n                </CustomCard>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleLoadData = () => {\r\n        this.props.loadData(this.projectId)\r\n    };\r\n}\r\n\r\nRequirementsTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    rqs: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: RqsTabRq\r\n    }),\r\n};\r\n","import {connect} from 'react-redux';\r\nimport {loadRequirements, resetRequirements} from \"../../../actions/pws/requirements-tab\";\r\nimport Requirements from \"./requirements-tab\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        rqs: state.pws.requirementsTab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadRequirements(projectId)),\r\n        resetData: () => dispatch(resetRequirements())\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(Requirements), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"chartjs-plugin-annotation\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./bar-chart.module.scss\";\r\nimport {RangeSlider} from \"@blueprintjs/core\";\r\n\r\nexport default class BarChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldChartUpdate: true,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onChange = this.handleChange();\r\n    }\r\n\r\n    chartRef = React.createRef();\r\n    barChart = null;\r\n    onChange = null;\r\n\r\n    componentDidMount() {\r\n       this.loadChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.loadChart();\r\n    }\r\n\r\n    render() {\r\n        let initialRange;\r\n        let labelsAmount;\r\n        const {labels} = this.props.data;\r\n        if (!labels) {\r\n            initialRange = [0, 0];\r\n            labelsAmount = 1;\r\n        } else {\r\n            const {labels} = this.props.data;\r\n            const min = 0;\r\n            const max = this.getMaxFromLabels(labels);\r\n            initialRange = [min, max];\r\n            labelsAmount = labels.length || 1;\r\n        }\r\n\r\n        const classes = this.props.className;\r\n        const sliderValue = this.state.range || initialRange;\r\n        const minSliderVal = initialRange[0];\r\n        const maxSliderVal = initialRange[1];\r\n        const stepSize = 1;\r\n        return (\r\n            <div className={classes}>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    className={styles.canvas}\r\n                    ref={this.chartRef}\r\n                />\r\n                <RangeSlider\r\n                    min={minSliderVal}\r\n                    max={maxSliderVal}\r\n                    stepSize={stepSize}\r\n                    labelRenderer={(index) => labels ? labels[index] : 0}\r\n                    labelStepSize={labelsAmount}\r\n                    onChange={this.onChange}\r\n                    value={sliderValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMaxFromLabels(labels) {\r\n        return labels && labels.length && labels.length > 0 ? labels.length -1 : 1;\r\n    }\r\n\r\n    loadChart() {\r\n        if (this.state.shouldChartUpdate) {\r\n            if (this.barChart) {\r\n                this.barChart.destroy();\r\n            }\r\n            const data = this.filterData(this.props.data);\r\n            this.filtered = data;\r\n            this.createChart(data);\r\n        }\r\n    }\r\n\r\n    createChart(data) {\r\n        let myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const {target} = this.props.data;\r\n        this.barChart = new Chart(myChartRef, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: data.labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"New\",\r\n                        backgroundColor: \"red\",\r\n                        data: data.newIssues,\r\n                        stack: \"1\"\r\n                    },\r\n                    {\r\n                        label: \"Development\",\r\n                        backgroundColor: \"orange\",\r\n                        data: data.dev,\r\n                        stack: \"1\"\r\n                    },\r\n                    {\r\n                        label: \"QA\",\r\n                        backgroundColor: \"yellow\",\r\n                        data: data.qa,\r\n                        stack: \"1\"\r\n                    },\r\n                    {\r\n                        label: \"QA-done\",\r\n                        backgroundColor: \"brown\",\r\n                        data: data.qaDone,\r\n                        stack: \"1\"\r\n                    },\r\n                    {\r\n                        label: \"IN\",\r\n                        backgroundColor: \"violet\",\r\n                        data: data.in,\r\n                        stack: \"2\"\r\n                    },\r\n                    {\r\n                        label: \"OUT\",\r\n                        backgroundColor: \"green\",\r\n                        data: data.out,\r\n                        stack: \"3\"\r\n                    }\r\n                ]\r\n\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        stacked: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"Number of CRs (severity ECMA)\"\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        stacked: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"Week “yyww”\"\r\n                        }\r\n\r\n                    }]\r\n                },\r\n                annotation: this.getAnnotationConfig(target)\r\n            }\r\n        });\r\n    }\r\n\r\n    getAnnotationConfig(target) {\r\n        if (!target) return null;\r\n\r\n        return {\r\n            annotations: [{\r\n                type: 'line',\r\n                mode: 'horizontal',\r\n                scaleID: 'y-axis-0',\r\n                value: target.value,\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                borderWidth: 4,\r\n                label: {\r\n                    enabled: true,\r\n                    content: target.milestone\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    handleChange() {\r\n        let timeout;\r\n        return (range) => {\r\n            this.setState({shouldChartUpdate: false});\r\n            this.setState({range});\r\n\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => this.setState({shouldChartUpdate: true}), 300)\r\n        }\r\n    }\r\n\r\n    filterData(data) {\r\n        const range = this.state.range;\r\n        if (!range) return data;\r\n\r\n        const startIndex = range[0];\r\n        const endIndex = range[1];\r\n\r\n        let filtered = {};\r\n        filtered.dev = data.dev.slice(startIndex, endIndex + 1);\r\n        filtered.in = data.in.slice(startIndex, endIndex + 1);\r\n        filtered.newIssues = data.newIssues.slice(startIndex, endIndex + 1);\r\n        filtered.out = data.out.slice(startIndex, endIndex + 1);\r\n        filtered.qa = data.qa.slice(startIndex, endIndex + 1);\r\n        filtered.qaDone = data.qaDone.slice(startIndex, endIndex + 1);\r\n        filtered.labels = data.labels.slice(startIndex, endIndex + 1);\r\n        return filtered;\r\n    }\r\n}\r\n\r\nBarChart.propTypes = {\r\n    data: PropTypes.shape({\r\n        dev: PropTypes.arrayOf(PropTypes.number),\r\n        in: PropTypes.arrayOf(PropTypes.number),\r\n        labels: PropTypes.arrayOf(PropTypes.string),\r\n        newIssues: PropTypes.arrayOf(PropTypes.number),\r\n        out: PropTypes.arrayOf(PropTypes.number),\r\n        qa: PropTypes.arrayOf(PropTypes.number),\r\n        qaDone: PropTypes.arrayOf(PropTypes.number),\r\n    }).isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nBarChart.defaultProps = {\r\n    className: ''\r\n};","import React from 'react';\r\nimport {Icon, Intent} from \"@blueprintjs/core\";\r\nimport styles from \"./no-data-found.module.scss\";\r\nimport FieldName from \"../../field-name/field-name\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class NoDataFound extends React.PureComponent {\r\n    render() {\r\n        const {message} = this.props;\r\n        return (\r\n            <div className={styles.status_container}>\r\n                <div className={styles.container}>\r\n                    <Icon\r\n                        icon={\"search\"}\r\n                        iconSize={35}\r\n                        intent={Intent.PRIMARY}\r\n                        className={styles.icon}\r\n                    />\r\n                    <FieldName\r\n                        name={message}\r\n                        className={styles.field_name}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNoDataFound.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nNoDataFound.defaultProps = {\r\n    message: \"No data found\"\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BarChart from \"../../charts/backlog-defects-chart/bar-chart\";\r\nimport styles from \"./backlog-defects-page.module.scss\";\r\nimport {Button, Intent, Position, Tooltip} from \"@blueprintjs/core\";\r\nimport HelpIcon from \"../../help-icon/help-icon\";\r\nimport UpdatedInfo from \"../../updated-info/updated-info\";\r\nimport classNames from \"classnames\";\r\nimport {BacklogDefectsTypes} from \"../../../util/custom-types\";\r\nimport NoDataFound from \"../../global-statuses/no-data-found/no-data-found\";\r\nimport TooltipContent from \"../../tooltip-content/tooltip-content\";\r\n\r\nexport default class BacklogDefectsPage extends React.Component {\r\n    render() {\r\n        const payload = this.props.data;\r\n        const {updatedOn, header, tooltip} = this.props;\r\n        const isDataExist = this.isDataExists(payload);\r\n        return (\r\n            <div className={styles.card_container}>\r\n                <div className={styles.header_container}>\r\n                    <h4 className={styles.center}>\r\n                        {header}\r\n                    </h4>\r\n                    <Tooltip\r\n                        position={Position.BOTTOM}\r\n                        content={tooltip}\r\n                    >\r\n                        <HelpIcon className={styles.tooltip}/>\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {this.renderChartZone(payload, isDataExist)}\r\n\r\n                <UpdatedInfo\r\n                    date={updatedOn}\r\n                    className={styles.updated_block}\r\n                />\r\n\r\n                {this.getFooter()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderChartZone(payload, isDataExist) {\r\n        if (isDataExist) {\r\n            return (\r\n                <BarChart\r\n                    data={payload}\r\n                    className={styles.chart_container}\r\n                />\r\n            )\r\n        } else {\r\n            const message = \"No data found. Update grid or check 'Metrics Scope' value on 'Information' tab\";\r\n            return (\r\n                <div className={styles.no_data_container}>\r\n                    <NoDataFound message={message}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    isDataExists(data) {\r\n        let dataExist = false;\r\n        Object.keys(data).forEach(key => {\r\n            if (data[key] && data[key].length && data[key].length > 0) {\r\n                dataExist = true;\r\n            }\r\n        })\r\n\r\n        return dataExist;\r\n    }\r\n\r\n    getFooter = (isDataExist) => {\r\n        const {onUpdate, blocked, onCurrentClick} = this.props;\r\n        const currentWeekClasses = classNames(\r\n            {[styles.float_right]: !blocked},\r\n            styles.inline_block\r\n        );\r\n\r\n        const uploadLabel = blocked ? \"Last week\" : \"Current week\";\r\n        const updateLabel = \"Update Grid\";\r\n        return (\r\n            <div>\r\n                {\r\n                    blocked ||\r\n                    <div className={styles.inline_block}>\r\n                        <Button\r\n                            minimal\r\n                            icon={\"refresh\"}\r\n                            intent={Intent.PRIMARY}\r\n                            text={updateLabel}\r\n                            onClick={onUpdate}\r\n                        />\r\n                    </div>\r\n                }\r\n                {isDataExist &&\r\n                <div className={currentWeekClasses}>\r\n                    <Button\r\n                        minimal\r\n                        icon={\"download\"}\r\n                        intent={Intent.PRIMARY}\r\n                        text={uploadLabel}\r\n                        onClick={onCurrentClick}\r\n                    />\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBacklogDefectsPage.propTypes = {\r\n    data: BacklogDefectsTypes,\r\n    header: PropTypes.string.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n    onCurrentClick: PropTypes.func.isRequired,\r\n    updatedOn: PropTypes.string,\r\n    tooltip: PropTypes.instanceOf(TooltipContent),\r\n    blocked: PropTypes.bool\r\n};\r\n\r\nBacklogDefectsPage.defaultProps = {\r\n    updatedOn: '',\r\n    tooltip: <TooltipContent title={\"\"} content={\"\"}/>,\r\n    blocked: false\r\n};","import {WorkspaceStatus} from \"../../../util/constants\";\r\nimport {defectsBacklogChartHelp} from \"../../../util/global-helps\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    title: {\r\n        help: defectsBacklogChartHelp\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport TooltipContent from \"../../tooltip-content/tooltip-content\";\r\nimport BacklogDefectsPage from \"../backlog-defects-page/backlog-defects-page\";\r\nimport {BacklogDefectsTypes, ProjectDefaults} from \"../../../util/custom-types\";\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\n\r\nexport default class BacklogTab extends React.Component {\r\n    render() {\r\n        const {loading} = this.props.backlog;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const {payload} = this.props.backlog;\r\n            const {updatedOn, ...data} = payload;\r\n\r\n            const title = \"Defects backlog (ECMA CRs)\";\r\n            const isBlocked = !renderHelper.displayOrNot(\"controls\");\r\n            const help = renderHelper.getHelpObject(\"title\");\r\n            return (\r\n                <CustomCard>\r\n                    <BacklogDefectsPage\r\n                        data={data}\r\n                        header={title}\r\n                        onUpdate={() => alert(\"Updated\")}\r\n                        onCurrentClick={() => alert(\"Current week\")}\r\n                        updatedOn={updatedOn}\r\n                        tooltip={\r\n                            <TooltipContent\r\n                                title={help.title}\r\n                                content={help.content}\r\n                            />\r\n                        }\r\n                        blocked={isBlocked}\r\n                    />\r\n                </CustomCard>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nBacklogTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    backlog: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        payload: BacklogDefectsTypes.isRequired\r\n    })\r\n};","import {connect} from \"react-redux\";\r\nimport {loadBacklogChart, resetBacklog} from \"../../../actions/pws/backlog\";\r\nimport BacklogTab from \"./backlog-tab\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        backlog: state.pws.backlogTab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadBacklogChart(projectId)),\r\n        resetData: () => dispatch(resetBacklog())\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(BacklogTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import {WorkspaceStatus} from \"../../../util/constants\";\r\nimport {newOpenDefectsChartHelp} from \"../../../util/global-helps\";\r\n\r\nexport default {\r\n    controls: {\r\n        allowedIf: {\r\n            workspaceStatus: [WorkspaceStatus.ENABLED]\r\n        }\r\n    },\r\n    title: {\r\n        help: newOpenDefectsChartHelp\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCard from \"../../card/custom-card\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\nimport TooltipContent from \"../../tooltip-content/tooltip-content\";\r\nimport BacklogDefectsPage from \"../backlog-defects-page/backlog-defects-page\";\r\nimport {BacklogDefectsTypes, ProjectDefaults} from \"../../../util/custom-types\";\r\n//TODO rename to 'config'\r\nimport renderFields from \"./fields\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\n\r\nexport default class DefectsTab extends React.Component {\r\n    render() {\r\n        const {loading} = this.props.defects;\r\n        if (loading) {\r\n            return <CustomCard><LoadingSpinner/></CustomCard>\r\n        } else {\r\n            const {payload} = this.props.defects;\r\n            const validationParams = this.props.defaults.payload;\r\n            const renderHelper = new RenderFieldHelper(renderFields, validationParams);\r\n            const {updatedOn, ...data} = payload;\r\n            const title = \"New Open Defects (ECMA CRs)\";\r\n            const help = renderHelper.getHelpObject(\"title\");\r\n\r\n            const isBlocked = !renderHelper.displayOrNot(\"controls\");\r\n            return (\r\n                <CustomCard>\r\n                    <BacklogDefectsPage\r\n                        data={data}\r\n                        header={title}\r\n                        onUpdate={() => alert(\"Updated\")}\r\n                        onCurrentClick={() => alert(\"Current week\")}\r\n                        updatedOn={updatedOn}\r\n                        tooltip={\r\n                            <TooltipContent\r\n                                title={help.title}\r\n                                content={help.content}\r\n                            />\r\n                        }\r\n                        blocked={isBlocked}\r\n                    />\r\n                </CustomCard>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nDefectsTab.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        payload: ProjectDefaults.isRequired,\r\n        loading: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n    defects: PropTypes.shape({\r\n        loading: PropTypes.bool.isRequired,\r\n        payload: BacklogDefectsTypes.isRequired\r\n    })\r\n};","import {connect} from 'react-redux';\r\nimport DefectsTab from \"./defects-tab\";\r\nimport {loadDefectsChart, resetDefects} from \"../../../actions/pws/defects\";\r\nimport {withPwsOnMountCall, withPwsTabNameUrlChanger} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults,\r\n        defects: state.pws.defectsTab,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadDefectsChart(projectId)),\r\n        resetData: () => dispatch(resetDefects())\r\n    }\r\n}\r\n\r\nconst executeMethodsConfig = {\r\n    onMount: \"loadData\",\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nconst ConnectedComponent = withPwsOnMountCall(withPwsTabNameUrlChanger(DefectsTab), executeMethodsConfig);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedComponent);","import React from 'react';\r\nimport {Icon, Intent} from \"@blueprintjs/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./project-not-found-status.module.scss\";\r\n\r\nexport default class ProjectNotFoundStatus extends React.PureComponent {\r\n    render() {\r\n        const {id, ...others} = this.props;\r\n        const message = this.getErrorMessage(id);\r\n        const iconSize = 100;\r\n        return (\r\n            <div\r\n                className={styles.wrapper}\r\n                {...others}\r\n            >\r\n                <Icon\r\n                    icon={\"inbox-search\"}\r\n                    iconSize={iconSize}\r\n                    intent={Intent.PRIMARY}\r\n                    className={styles.icon_style}\r\n                />\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getErrorMessage(id) {\r\n        return id\r\n            ? `Project with id ${id} - not found`\r\n            : \"Project not found\";\r\n    }\r\n}\r\n\r\nProjectNotFoundStatus.propTypes = {\r\n    id: PropTypes.number,\r\n};\r\n","import {ProjectTypes, PWSTabs} from \"../../../util/constants\";\r\n\r\nlet config = {\r\n    [PWSTabs.SUMMARY]: {},\r\n    [PWSTabs.INDICATORS]: {},\r\n    [PWSTabs.INFORMATION]: {},\r\n    [PWSTabs.ACTIONS]: {\r\n        allowedIf: {\r\n            projectDivision: [\"NBD\"]\r\n        }\r\n    },\r\n    [PWSTabs.RISKS]: {},\r\n    [PWSTabs.COST]: {},\r\n    [PWSTabs.REPORT]: {},\r\n    [PWSTabs.REQUIREMENTS]: {\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    [PWSTabs.BACKLOG]: {\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    [PWSTabs.DEFECTS]: {\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.OFFER]\r\n        }\r\n    },\r\n    [PWSTabs.BLC]: {\r\n        notAllowedIf: {\r\n            projectType: [ProjectTypes.RD_PRODUCT]\r\n        }\r\n    },\r\n};\r\n\r\nexport default config;","import React from 'react';\r\nimport {Tab, Tabs} from \"@blueprintjs/core\";\r\nimport Report from '../../tabs/report-tab/report-tab.container';\r\nimport styles from './pws.module.scss';\r\nimport SummaryTab from \"../../tabs/summary-tab/summary-tab.container\";\r\nimport InfoTab from \"../../tabs/info-tab/info-tab.container\";\r\nimport IndicatorsTab from \"../../tabs/indicators-tab/indicators-tab.container\";\r\nimport CostTab from \"../../tabs/cost-tab/cost-tab.container\";\r\nimport BlcDashboard from \"../../tabs/blc/blc.container\";\r\nimport Risks from \"../../tabs/risks/risks.container\";\r\nimport ErrorBoundary from \"../../error-boundary/error-boundary\";\r\nimport Actions from \"../../tabs/actions/actions.container\";\r\nimport Requirements from \"../../tabs/requirements-tab/requirements-tab.container\";\r\nimport BacklogTab from \"../../tabs/backlog-tab/backlog-tab.container\";\r\nimport DefectsTab from \"../../tabs/defects-tab/defects-tab.container\";\r\nimport {PWSTabs} from \"../../../util/constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingStatus from \"../../global-statuses/loading-status\";\r\nimport StatusContainer from \"../../status-container/status-container\";\r\nimport {getUrlParam} from \"../../../util/util\";\r\nimport ProjectNotFoundStatus from \"../../global-statuses/project-not-found-status/project-not-found-status\";\r\nimport config from \"./config\";\r\n\r\nimport \"./pws.scss\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport RenderFieldHelper from \"../../../util/render-field-helper\";\r\nimport {ProjectDefaults} from \"../../../util/custom-types\";\r\n\r\nexport default class PWS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedId: \"\",\r\n            defaults: {\r\n                defaultSelectedTab: PWSTabs.SUMMARY,\r\n                defaultTabNames: this.getDefaultTabNames()\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.projectId = Number(getUrlParam(\"projectId\"));\r\n        this.props.loadData(this.projectId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetData();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {loading, error} = this.props.defaults;\r\n        if (loading) {\r\n            return <StatusContainer><LoadingStatus/></StatusContainer>;\r\n        } else if (error) {\r\n            return <ProjectNotFoundStatus id={this.projectId}/>;\r\n        } else {\r\n            this.renderFieldHelper = new RenderFieldHelper(config, this.props.defaults.payload);\r\n            const tabName = this.getActiveTabName();\r\n            const {projectName, requirementsUrl, metricsScope} = this.props.defaults.payload;\r\n            const selectedTabId = this.state.selectedId || tabName;\r\n            return (\r\n                <>\r\n                    <Helmet>\r\n                        <title>{projectName}</title>\r\n                    </Helmet>\r\n                    <div className={styles.pws_container}>\r\n                        <h1>Project {projectName}</h1>\r\n                        <Tabs\r\n                            id=\"pws_tabs\"\r\n                            large\r\n                            renderActiveTabPanelOnly\r\n                            selectedTabId={selectedTabId}\r\n                            className={styles.tabs}\r\n                            onChange={this.onChange}\r\n                        >\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.SUMMARY) &&\r\n                            <Tab\r\n                                id={PWSTabs.SUMMARY}\r\n                                title=\"Summary\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <SummaryTab tabId={PWSTabs.SUMMARY}/>\r\n                                    </ErrorBoundary>\r\n                                )}\r\n                            />\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.INDICATORS) &&\r\n                            <Tab\r\n                                id={PWSTabs.INDICATORS}\r\n                                title=\"Indicators\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <IndicatorsTab tabId={PWSTabs.INDICATORS}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.INFORMATION) &&\r\n                            <Tab\r\n                                id={PWSTabs.INFORMATION}\r\n                                title=\"Information\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <InfoTab tabId={PWSTabs.INFORMATION}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.ACTIONS) &&\r\n                            <Tab\r\n                                id={PWSTabs.ACTIONS}\r\n                                title=\"Actions\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <Actions tabId={PWSTabs.ACTIONS}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.RISKS) &&\r\n                            <Tab\r\n                                id={PWSTabs.RISKS}\r\n                                title=\"Risks\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <Risks tabId={PWSTabs.RISKS}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.COST) &&\r\n                            <Tab\r\n                                id={PWSTabs.COST}\r\n                                title=\"Cost\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <CostTab tabId={PWSTabs.COST}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.REPORT) &&\r\n                            <Tab\r\n                                id={PWSTabs.REPORT}\r\n                                title=\"Report\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <Report tabId={PWSTabs.REPORT}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.REQUIREMENTS) &&\r\n                            <Tab\r\n                                id={PWSTabs.REQUIREMENTS}\r\n                                title=\"Requirements\"\r\n                                className={styles.tab_container}\r\n                                disabled={!requirementsUrl}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <Requirements tabId={PWSTabs.REQUIREMENTS}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.BACKLOG) &&\r\n                            <Tab\r\n                                id={PWSTabs.BACKLOG}\r\n                                title=\"Backlog\"\r\n                                className={styles.tab_container}\r\n                                disabled={!metricsScope}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <BacklogTab tabId={PWSTabs.BACKLOG}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.DEFECTS) &&\r\n                            <Tab\r\n                                id={PWSTabs.DEFECTS}\r\n                                title=\"Defects\"\r\n                                className={styles.tab_container}\r\n                                disabled={!metricsScope}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <DefectsTab tabId={PWSTabs.DEFECTS}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                            {this.renderFieldHelper.displayOrNot(PWSTabs.BLC) &&\r\n                            <Tab\r\n                                id={PWSTabs.BLC}\r\n                                title=\"BLC Dashboard\"\r\n                                className={styles.tab_container}\r\n                                panel={(\r\n                                    <ErrorBoundary>\r\n                                        <BlcDashboard tabId={PWSTabs.BLC}/>\r\n                                    </ErrorBoundary>\r\n                                )}/>\r\n                            }\r\n                        </Tabs>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    getDefaultTabNames() {\r\n        return Object.keys(PWSTabs).map(key => PWSTabs[key])\r\n    }\r\n\r\n    onChange = (tabId) => (\r\n        this.setState({selectedId: tabId})\r\n    );\r\n\r\n    getActiveTabName() {\r\n        const urlParams = this.props.location.search;\r\n        const tabName = new URLSearchParams(urlParams).get('tab');\r\n        return this.isTabNameExists(tabName) && this.renderFieldHelper.displayOrNot(tabName)\r\n            ? tabName.toLowerCase()\r\n            : this.state.defaults.defaultSelectedTab;\r\n    }\r\n\r\n    isTabNameExists(name) {\r\n        return this.state.defaults.defaultTabNames.includes(String(name).toLowerCase());\r\n    }\r\n}\r\n\r\nPWS.propTypes = {\r\n    defaults: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: ProjectDefaults,\r\n    }),\r\n    loadData: PropTypes.func.isRequired,\r\n    resetData: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport {loadProjectDefaults, resetProjectDefaults} from \"../../../actions/pws/default\";\r\nimport PWS from \"./pws\";\r\nimport {withPwsOnMountCall} from \"../../../util/HOCs\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        defaults: state.pws.defaults\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadData: (projectId) => dispatch(loadProjectDefaults(projectId)),\r\n        resetData: () => dispatch(resetProjectDefaults())\r\n    }\r\n}\r\n\r\nconst conf = {\r\n    onUnmount: \"resetData\",\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withPwsOnMountCall(PWS, conf));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td_style\":\"blc-row_td_style__3l26n\",\"sticky_white\":\"blc-row_sticky_white__KKwlw\",\"inline_block\":\"blc-row_inline_block__1q98L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"updated\":\"updated-info_updated__3vBiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"last-updated_red__3uv__\",\"margin_right\":\"last-updated_margin_right__FPxhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"health_minimal\":\"report-tab_health_minimal__2zAoG\",\"risk_block\":\"report-tab_risk_block__3ogPM\",\"export_button\":\"report-tab_export_button__3e6ri\",\"project_info\":\"report-tab_project_info__1RXqA\",\"inline_block\":\"report-tab_inline_block__3OyaI\",\"float_right\":\"report-tab_float_right__1MVgI\",\"red\":\"report-tab_red__1YjAA\",\"orange\":\"report-tab_orange__HQKPY\",\"green\":\"report-tab_green__2Vt1b\",\"scope_definition\":\"report-tab_scope_definition__1Ogr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline_table\":\"timeline_timeline_table__2gns8\",\"milestone\":\"timeline_milestone__1-ZCb\",\"bordered\":\"timeline_bordered__U9x86\",\"indicator\":\"timeline_indicator__22jvv\",\"align_center\":\"timeline_align_center__2T0G-\",\"min_width\":\"timeline_min_width__uaGI6\",\"line\":\"timeline_line__3MWiN\",\"legend\":\"timeline_legend__3WBHj\",\"container\":\"timeline_container__CuL7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status_icon\":\"health-indicators-minimal_status_icon__2zYV4\",\"col_width\":\"health-indicators-minimal_col_width__2vHzq\",\"td_style\":\"health-indicators-minimal_td_style__1aOsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li_margin\":\"risks-list_li_margin__1TC69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"naming_block\":\"two-items-liner_naming_block__3rizb\",\"name\":\"two-items-liner_name__20hPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"rqs-report-list_list__Ky4e1\",\"list_item\":\"rqs-report-list_list_item__oKbXd\",\"url\":\"rqs-report-list_url__27oGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sticky_controls\":\"edit-save-controls_sticky_controls__L2oZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"report-quills-form_controls__37AVN\",\"red\":\"report-quills-form_red__msXrD\",\"orange\":\"report-quills-form_orange__15P5n\",\"green\":\"report-quills-form_green__1XDli\",\"no_border\":\"report-quills-form_no_border__1fQnV\",\"quill_margin\":\"report-quills-form_quill_margin__k5b7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"uploaded-image_container__2wipj\",\"image_container\":\"uploaded-image_image_container__1PGHd\",\"image\":\"uploaded-image_image__3gti_\",\"controls\":\"uploaded-image_controls__3lVry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"upload-file-controls-hidden_hidden__2XORW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"upload-display-section_section__Xk8PZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"pws_center__dTcCk\",\"pws_container\":\"pws_pws_container__1QFGu\",\"tab_container\":\"pws_tab_container__19TaE\",\"tabs\":\"pws_tabs__2VCVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word_wrap\":\"field-value_word_wrap__3t1aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_fields\":\"summary-tab_data_fields__eVLz-\",\"secondary_card\":\"summary-tab_secondary_card__2V_jN\",\"executive_block\":\"summary-tab_executive_block__3FPVo\",\"data_container\":\"summary-tab_data_container__1ma75\",\"pws_data_container\":\"summary-tab_pws_data_container__2dB8g\",\"right_part\":\"summary-tab_right_part__27DLw\",\"bottom_margin\":\"summary-tab_bottom_margin__13I-p\",\"red\":\"summary-tab_red__AozoG\",\"orange\":\"summary-tab_orange__37yy6\",\"green\":\"summary-tab_green__3cFvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column_align_center\":\"health-indicators_column_align_center__24GtH\",\"health_table\":\"health-indicators_health_table__2LBmc\",\"status_col\":\"health-indicators_status_col__ks159\",\"prev_column\":\"health-indicators_prev_column__Xkckl\",\"cur_column\":\"health-indicators_cur_column__9yhUA\",\"inline_block\":\"health-indicators_inline_block__3igZa\",\"help_icon\":\"health-indicators_help_icon__21aVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip_style\":\"tooltip-content_tooltip_style__3ahEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"last_compl_col\":\"contributing-open-projects_last_compl_col__u2CDl\",\"th_style\":\"contributing-open-projects_th_style__2q4ov\",\"last_completed\":\"contributing-open-projects_last_completed__1xrKw\",\"last_completed_sticky\":\"contributing-open-projects_last_completed_sticky__8mmGy\",\"offer_th\":\"contributing-open-projects_offer_th__3tk2F\",\"offer_th_sticky\":\"contributing-open-projects_offer_th_sticky__35-kx\",\"type_th\":\"contributing-open-projects_type_th__27TNn\",\"type_th_sticky\":\"contributing-open-projects_type_th_sticky__2aSPV\",\"sticky_colspan3\":\"contributing-open-projects_sticky_colspan3__10WJD\",\"table_container\":\"contributing-open-projects_table_container__13gi7\",\"overflow_container\":\"contributing-open-projects_overflow_container__1MzNv\",\"name_col_size\":\"contributing-open-projects_name_col_size__31MDp\",\"type_size\":\"contributing-open-projects_type_size__UTMFq\",\"last_dr_col_size\":\"contributing-open-projects_last_dr_col_size__1wYAR\",\"td_style\":\"contributing-open-projects_td_style__3Cajl\",\"products_name\":\"contributing-open-projects_products_name__1HuMw\",\"legend\":\"contributing-open-projects_legend__2Mdo8\",\"mils_col_size\":\"contributing-open-projects_mils_col_size__D8w_O\",\"current_month\":\"contributing-open-projects_current_month__3Khih\",\"year_left_border\":\"contributing-open-projects_year_left_border__2QaTg\",\"bkground_grey\":\"contributing-open-projects_bkground_grey__2N7lG\",\"bkground_red\":\"contributing-open-projects_bkground_red__DT7b5\",\"label\":\"contributing-open-projects_label__2qEbM\",\"table_class\":\"contributing-open-projects_table_class__2t4ry\",\"word_wrap\":\"contributing-open-projects_word_wrap__2QBiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bkground_grey\":\"legend_bkground_grey__2IZQx\",\"bkground_red\":\"legend_bkground_red__1U11J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"offer-product-title_red__2ECpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actual\":\"milestone-table_actual__tJYPx\",\"baseline\":\"milestone-table_baseline__3LU02\",\"completion\":\"milestone-table_completion__FO8bQ\",\"timeline\":\"milestone-table_timeline__31BU_\",\"minutes\":\"milestone-table_minutes__r9naa\",\"table\":\"milestone-table_table__JcMMK\",\"label\":\"milestone-table_label__XQ5sc\",\"align_center\":\"milestone-table_align_center__1AKNW\",\"error\":\"milestone-table_error__1c4l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_container\":\"info-tab_data_container__Ba3Ia\",\"data_container_comment\":\"info-tab_data_container_comment__1UIMz\",\"url_container\":\"info-tab_url_container__Dtknl\",\"comment_row_label\":\"info-tab_comment_row_label__DadxU\",\"comment_row_value\":\"info-tab_comment_row_value__2R04o\",\"comment_row_comment\":\"info-tab_comment_row_comment__40OyB\",\"comment_row_comment_value\":\"info-tab_comment_row_comment_value__1E3c4\",\"help_icon\":\"info-tab_help_icon__2Plps\",\"ecma_backlog_row\":\"info-tab_ecma_backlog_row__3M0g_\",\"value_label\":\"info-tab_value_label__72giz\",\"prj_margin\":\"info-tab_prj_margin__3TyQM\",\"multiselect\":\"info-tab_multiselect__2XxOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"indicators-tab_card__27RV7\",\"kpi_container\":\"indicators-tab_kpi_container__TtCf8\",\"rqs_kpi\":\"indicators-tab_rqs_kpi__3s2Z6\",\"milestones_kpi\":\"indicators-tab_milestones_kpi__1GP81\",\"dr4_kpi\":\"indicators-tab_dr4_kpi__uwyJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"req_table\":\"requirements_req_table__v0MXI\",\"column_align_center\":\"requirements_column_align_center__1ymaI\",\"title_col\":\"requirements_title_col__3rrt9\",\"table_header\":\"requirements_table_header__3Z0qS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mil_table\":\"milestones-kpi_mil_table__3Mptu\",\"column_align_center\":\"milestones-kpi_column_align_center__1bwQL\",\"borderBottom\":\"milestones-kpi_borderBottom__3t5W4\",\"mil_col\":\"milestones-kpi_mil_col__3A-Yt\",\"adh_col\":\"milestones-kpi_adh_col__3T3Ws\",\"delay_col\":\"milestones-kpi_delay_col__7b8lV\",\"duration_col\":\"milestones-kpi_duration_col__1z7S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kpi_table\":\"kpi_kpi_table__22YKK\",\"header\":\"kpi_header__3IJ3P\",\"name_col\":\"kpi_name_col__jMokn\",\"help\":\"kpi_help__11Yg-\",\"value_col\":\"kpi_value_col__2XOh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quality_table\":\"quality_quality_table__3KkaB\",\"column_align_right\":\"quality_column_align_right__D3IMU\",\"column_align_center\":\"quality_column_align_center__2SVVd\",\"float_right\":\"quality_float_right__bW9He\",\"header\":\"quality_header__3oaOH\",\"descr_col\":\"quality_descr_col__63-qy\",\"controls_col\":\"quality_controls_col__1f7Wo\",\"obj_col\":\"quality_obj_col__13eUT\",\"actual_col\":\"quality_actual_col__1o9Qe\",\"sync_date\":\"quality_sync_date__2IVRS\",\"help_icon\":\"quality_help_icon__1Q0mF\",\"row_name_container\":\"quality_row_name_container__3urCk\",\"help_container\":\"quality_help_container__c7_MO\",\"title_container\":\"quality_title_container__3JbGg\",\"controls\":\"quality_controls__1Yu9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_column\":\"cost-table_data_column__1Hfpx\",\"cost_table\":\"cost-table_cost_table__30bjV\",\"effort_col\":\"cost-table_effort_col__21hga\",\"value_col\":\"cost-table_value_col__2fvKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"last_updated\":\"cost-tab_last_updated__1KF9H\",\"import_container\":\"cost-tab_import_container__3f4E2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative_wrapper\":\"blc_relative_wrapper__3W6Yt\",\"overflow_wrapper\":\"blc_overflow_wrapper__1fVmL\",\"column_align_center\":\"blc_column_align_center__goncG\",\"blc_table\":\"blc_blc_table__p40oG\",\"role_col\":\"blc_role_col__1Af2o\",\"who_col\":\"blc_who_col__3inz6\",\"updated_col\":\"blc_updated_col__3_yeE\",\"or_col\":\"blc_or_col__1KB3y\",\"proj_plan_col\":\"blc_proj_plan_col__1Jg7U\",\"charter_col\":\"blc_charter_col__EjPuN\",\"tailoring_col\":\"blc_tailoring_col__1DosC\",\"core_col\":\"blc_core_col__2t8SA\",\"prog_mgr_col\":\"blc_prog_mgr_col__Trd7M\",\"bp_sales\":\"blc_bp_sales__kwQ4L\",\"lp_sales\":\"blc_lp_sales__2ISdr\",\"les_learned\":\"blc_les_learned__9qNNj\",\"bp_plan_col\":\"blc_bp_plan_col__3kPSU\",\"lp_plan\":\"blc_lp_plan__3kVBZ\",\"risks_col\":\"blc_risks_col__WJBI5\",\"comment\":\"blc_comment__TAKBC\",\"sticky_white\":\"blc_sticky_white__1WAr6\",\"controls\":\"blc_controls__1qAwA\",\"publish_btn\":\"blc_publish_btn__19EN0\",\"help_icon\":\"blc_help_icon__2LBUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_margin\":\"excel-error_error_margin__1fypu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"risk_container__21sbx\",\"last_updated_container\":\"risk_last_updated_container__2-gOS\",\"table_container\":\"risk_table_container__2qeqC\",\"last_updated\":\"risk_last_updated__2x-Fg\",\"import_container\":\"risk_import_container__2Pgl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_container\":\"actions_table_container__3VRd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_container\":\"requirements-tab_table_container__17Nb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"bar-chart_canvas__1DRlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"backlog-defects-page_header_container__39MUm\",\"card_container\":\"backlog-defects-page_card_container__3uxRg\",\"no_data_container\":\"backlog-defects-page_no_data_container__2cy2J\",\"chart_container\":\"backlog-defects-page_chart_container__li1gk\",\"center\":\"backlog-defects-page_center__20G-X\",\"tooltip\":\"backlog-defects-page_tooltip__rx4HJ\",\"float_right\":\"backlog-defects-page_float_right__lCu3N\",\"inline_block\":\"backlog-defects-page_inline_block__2YfOw\",\"updated_block\":\"backlog-defects-page_updated_block__1kFUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status_container\":\"no-data-found_status_container__EefAq\",\"container\":\"no-data-found_container__1i3MH\",\"field_name\":\"no-data-found_field_name__18aIm\",\"icon\":\"no-data-found_icon__3JSAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"project-not-found-status_wrapper__23Om8\",\"icon_style\":\"project-not-found-status_icon_style__1BCsS\"};"],"sourceRoot":""}